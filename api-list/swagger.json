
{"components":{"parameters":{"emqx_authz_api_mnesia.clientid":{"description":"ClientID","example":"client1","in":"path","name":"clientid","required":true,"schema":{"example":"binary-example","type":"string"}},"emqx_authz_api_mnesia.username":{"description":"Username","example":"user1","in":"path","name":"username","required":true,"schema":{"example":"binary-example","type":"string"}},"public.limit":{"description":"Results per page(max 100)","example":50,"in":"query","name":"limit","schema":{"default":100,"example":1,"maximum":100,"minimum":1,"type":"integer"}},"public.page":{"description":"Page number of the results to fetch.","example":1,"in":"query","name":"page","schema":{"default":1,"example":100,"type":"integer"}}},"schemas":{"emqx_schema.mqtt_ssl_listener":{"required":["bind"],"properties":{"tcp":{"$ref":"#/components/schemas/emqx_schema.tcp_opts"},"ssl":{"$ref":"#/components/schemas/emqx_schema.listener_ssl_opts"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"acceptors":{"default":16,"example":100,"type":"integer"},"max_connections":{"default":"infinity","oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"mountpoint":{"default":"","example":"binary-example","type":"string"},"zone":{"default":"default","example":"atom","type":"string"},"access_rules":{"items":{"example":"string-example","type":"string"},"type":"array"},"proxy_protocol":{"default":false,"example":true,"type":"boolean"},"proxy_protocol_timeout":{"example":"12m","type":"string"},"authentication":{"description":"Per-listener authentication override<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}},"type":"object"},"emqx_schema.cache":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"},"max_size":{"default":32,"example":1,"maximum":1048576,"minimum":1,"type":"integer"},"ttl":{"default":"1m","example":"12m","type":"string"}},"type":"object"},"authn-http.post":{"required":["url"],"properties":{"method":{"default":"post","enum":["post"],"type":"string"},"headers":{"default":{"accept":"application/json","cache-control":"no-cache","connection":"keep-alive","content-type":"application/json","keep-alive":"timeout=5"},"example":{},"type":"object"},"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["http"],"type":"string"},"url":{"example":"binary-example","type":"string"},"body":{"example":{},"type":"object"},"request_timeout":{"default":"5s","example":"32s","type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"connect_timeout":{"default":"30s","description":"The timeout when connecting to the HTTP server","example":"32s","type":"string"},"enable_pipelining":{"default":true,"description":"Enable the HTTP pipeline","example":true,"type":"boolean"},"max_retries":{"default":5,"description":"Max retry times if error on sending request","example":100,"minimum":1,"type":"integer"},"pool_size":{"default":8,"description":"The pool size","example":100,"minimum":1,"type":"integer"},"request":{"description":"\nIf the request is provided, the caller can send HTTP requests via\n<code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code>\n","$ref":"#/components/schemas/emqx_connector_http.request"},"retry_interval":{"default":"1s","description":"Interval before next retry if error on sending request","example":"12m","type":"string"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"authn-builtin_db.config":{"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["built-in-database"],"type":"string"},"user_id_type":{"default":"username","enum":["clientid","username"],"type":"string"},"password_hash_algorithm":{"default":{"name":"sha256"},"oneOf":[{"$ref":"#/components/schemas/authn-builtin_db.other_algorithms"},{"$ref":"#/components/schemas/authn-builtin_db.bcrypt"}]},"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"gateway.coap":{"properties":{"heartbeat":{"default":"30s","description":"The gateway server required minimum hearbeat interval.<br>\nWhen connection mode is enabled, this parameter is used to set the minimum\nheartbeat interval for the connection to be alive.","example":"12m","type":"string"},"connection_required":{"default":false,"description":"Enable or disable connection mode.<br>\nConnection mode is a feature of non-standard protocols. When connection mode\nis enabled, it is necessary to maintain the creation, authentication and alive\nof connection resources","example":true,"type":"boolean"},"notify_type":{"default":"qos","description":"The Notification Message will be delivered to the CoAP client if a new message\nreceived on an observed topic.\nThe type of delivered coap message can be set to:<br>\n1. non: Non-confirmable;<br>\n2. con: Confirmable;<br>\n3. qos: Mapping from QoS type of recevied message, QoS0 -> non, QoS1,2 -> con","oneOf":[{"enum":["qos"],"type":"string"},{"enum":["con"],"type":"string"},{"enum":["non"],"type":"string"}]},"subscribe_qos":{"default":"coap","description":"The Default QoS Level indicator for subscribe request.<br>\nThis option specifies the QoS level for the CoAP Client when establishing a\nsubscription membership, if the subscribe request is not carried `qos` option.\nThe indicator can be set to:\n  - qos0, qos1, qos2: Fixed default QoS level\n  - coap: Dynamic QoS level by the message type of subscribe request\n    * qos0: If the subscribe request is non-confirmable\n    * qos1: If the subscribe request is confirmable","oneOf":[{"enum":["coap"],"type":"string"},{"enum":["qos2"],"type":"string"},{"enum":["qos1"],"type":"string"},{"enum":["qos0"],"type":"string"}]},"publish_qos":{"default":"coap","description":"The Default QoS Level indicator for publish request.<br>\nThis option specifies the QoS level for the CoAP Client when publishing a\nmessage to EMQ X PUB/SUB system, if the publish request is not carried `qos`\noption. The indicator can be set to:\n  - qos0, qos1, qos2: Fixed default QoS level\n  - coap: Dynamic QoS level by the message type of publish request\n    * qos0: If the publish request is non-confirmable\n    * qos1: If the publish request is confirmable","oneOf":[{"enum":["coap"],"type":"string"},{"enum":["qos2"],"type":"string"},{"enum":["qos1"],"type":"string"},{"enum":["qos0"],"type":"string"}]},"listeners":{"$ref":"#/components/schemas/gateway.udp_listeners"},"enable":{"default":true,"description":"Whether to enable this gateway","example":true,"type":"boolean"},"enable_stats":{"default":true,"description":"Whether to enable client process statistic","example":true,"type":"boolean"},"idle_timeout":{"default":"30s","description":"The idle time of the client connection process.<br>\nit has two purposes:\n1. A newly created client process that does not receive any client requests\n   after that time will be closed directly.\n2. A running client process that does not receive any client requests after\n   this time will go into hibernation to save resources.","example":"12m","type":"string"},"mountpoint":{"default":"","description":"","example":"binary-example","type":"string"},"clientinfo_override":{"description":"","$ref":"#/components/schemas/gateway.clientinfo_override"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}},"type":"object"},"mongo_sharded":{"properties":{"auth_source":{"type":"string"},"collection":{"type":"string"},"database":{"type":"string"},"enable":{"example":true,"type":"boolean"},"mongo_type":{"enum":["sharded"],"example":"sharded","type":"string"},"password":{"type":"string"},"pool_size":{"type":"integer"},"selector":{"type":"object"},"servers":{"items":{"example":"127.0.0.1:27017","type":"string"},"type":"array"},"srv_record":{"default":false,"example":false,"type":"boolean"},"ssl":{"$ref":"#/components/schemas/ssl"},"topology":{"properties":{"connect_timeout_ms":{"type":"integer"},"heartbeat_frequency_ms":{"type":"integer"},"local_threshold_ms":{"type":"integer"},"max_overflow":{"type":"integer"},"min_heartbeat_frequency_ms":{"type":"integer"},"overflow_check_period":{"type":"string"},"overflow_ttl":{"type":"string"},"pool_size":{"type":"integer"},"server_selection_timeout_ms":{"type":"integer"},"socket_timeout_ms":{"type":"integer"},"wait_queue_timeout_ms":{"type":"integer"}},"type":"object"},"type":{"enum":["mongodb"],"example":"mongodb","type":"string"},"username":{"type":"string"}},"required":["type","enable","collection","selector","mongo_type","servers","pool_size","username","password","auth_source","database","topology","ssl"],"type":"object"},"emqx_conf_schema.cluster_etcd":{"properties":{"server":{"example":"item1,item2","type":"string"},"prefix":{"default":"emqxcl","example":"string-example","type":"string"},"node_ttl":{"default":"1m","example":"12m","type":"string"},"ssl":{"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_authz_api_mnesia.rule_item":{"required":["action","permission","topic"],"properties":{"topic":{"description":"Rule on specific topic","example":"test/topic/1","type":"string"},"permission":{"description":"Permission","enum":["allow","deny"],"example":"allow","type":"string"},"action":{"description":"Authorized action","enum":["publish","subscribe","all"],"example":"publish","type":"string"}},"type":"object"},"emqx_mgmt_api_configs.node":{"required":["data_dir"],"properties":{"name":{"default":"emqx@127.0.0.1","example":"string-example","type":"string"},"cookie":{"default":"emqxsecretcookie","example":"string-example","type":"string"},"data_dir":{"example":"string-example","type":"string"},"config_files":{"items":{"example":"string-example","type":"string"},"type":"array"},"global_gc_interval":{"default":"15m","example":"12m","type":"string"},"crash_dump_dir":{"example":"/path/to/file","type":"string"},"dist_net_ticktime":{"default":"2m","example":"12m","type":"string"},"dist_listen_min":{"default":6369,"example":1024,"maximum":65535,"minimum":1024,"type":"integer"},"dist_listen_max":{"default":6369,"example":1024,"maximum":65535,"minimum":1024,"type":"integer"},"backtrace_depth":{"default":23,"example":100,"type":"integer"},"etc_dir":{"description":"`etc` dir for the node","example":"string-example","type":"string"},"cluster_call":{"$ref":"#/components/schemas/emqx_conf_schema.cluster_call"}},"type":"object"},"exhook.servers":{"properties":{"name":{"example":"string-example","type":"string"},"url":{"example":"string-example","type":"string"},"ssl":{"$ref":"#/components/schemas/exhook.ssl_conf"}},"type":"object"},"authn-scram-builtin_db.config":{"properties":{"mechanism":{"enum":["scram"],"type":"string"},"backend":{"enum":["built-in-database"],"type":"string"},"algorithm":{"default":"sha256","enum":["sha256","sha512"],"type":"string"},"iteration_count":{"default":4096,"example":100,"minimum":1,"type":"integer"},"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_delayed_api.message":{"properties":{"msgid":{"description":"Message Id (MQTT message id hash)","example":100,"type":"integer"},"publish_at":{"description":"Client publish message time, rfc 3339","example":"binary-example","type":"string"},"delayed_interval":{"description":"Delayed interval, second","example":100,"type":"integer"},"delayed_remaining":{"description":"Delayed remaining, second","example":100,"type":"integer"},"expected_at":{"description":"Expect publish time, rfc 3339","example":"binary-example","type":"string"},"topic":{"description":"Topic","example":"/sys/#","type":"string"},"qos":{"description":"QoS","example":"binary-example","type":"string"},"from_clientid":{"description":"From ClientId","example":"binary-example","type":"string"},"from_username":{"description":"From Username","example":"binary-example","type":"string"},"payload":{"description":"Payload, base64 encode. Payload will be 'PAYLOAD_TOO_LARGE' if length large than 2048","example":"binary-example","type":"string"}},"type":"object"},"dashboard.http":{"properties":{"protocol":{"enum":["http","https"],"type":"string"},"port":{"default":18083,"example":100,"type":"integer"},"num_acceptors":{"default":4,"example":100,"type":"integer"},"max_connections":{"default":512,"example":100,"type":"integer"},"backlog":{"default":1024,"example":100,"type":"integer"},"send_timeout":{"default":"5s","example":"12m","type":"string"},"inet6":{"default":false,"example":true,"type":"boolean"},"ipv6_v6only":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"emqx_connector_http.request":{"properties":{"method":{"enum":["post","put","get","delete"],"type":"string"},"path":{"example":"binary-example","type":"string"},"body":{"example":"binary-example","type":"string"},"headers":{"example":{},"type":"object"},"request_timeout":{"description":"The timeout when sending request to the HTTP server","example":"32s","type":"string"}},"type":"object"},"authn-mongodb.sharded-cluster":{"required":["database"],"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["mongodb"],"type":"string"},"collection":{"example":"binary-example","type":"string"},"selector":{"example":{},"type":"object"},"password_hash_field":{"example":"binary-example","type":"string"},"salt_field":{"example":"binary-example","type":"string"},"is_superuser_field":{"example":"binary-example","type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"mongo_type":{"default":"sharded","enum":["sharded"],"type":"string"},"servers":{"example":"binary-example","type":"string"},"srv_record":{"default":false,"example":true,"type":"boolean"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auth_source":{"example":"binary-example","type":"string"},"database":{"example":"binary-example","type":"string"},"topology":{"$ref":"#/components/schemas/emqx_connector_mongo.topology"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_schema.quota":{"properties":{"conn_messages_routing":{"default":"infinity","oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]},"overall_messages_routing":{"default":"infinity","oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]}},"type":"object"},"emqx_schema.sysmon":{"properties":{"vm":{"$ref":"#/components/schemas/emqx_schema.sysmon_vm"},"os":{"$ref":"#/components/schemas/emqx_schema.sysmon_os"}},"type":"object"},"gateway.translator":{"properties":{"topic":{"example":"binary-example","type":"string"},"qos":{"default":0,"example":0,"maximum":2,"minimum":0,"type":"integer"}},"type":"object"},"emqx_mgmt_api_alarms.alarm":{"properties":{"node":{"description":"Alarm in node","example":"emqx@127.0.0.1","type":"string"},"name":{"description":"Alarm name","example":"high_system_memory_usage","type":"string"},"message":{"description":"Alarm readable information","example":"System memory usage is higher than 70%","type":"string"},"details":{"description":"Alarm details information","example":{"high_watermark":70},"type":"object"},"duration":{"description":"Alarms duration time; UNIX time stamp, millisecond","example":297056,"type":"integer"},"activate_at":{"description":"Alarms activate time, RFC 3339","example":"2021-10-25T11:52:52.548+08:00","type":"string"},"deactivate_at":{"description":"Nullable, alarms deactivate time, RFC 3339","example":"2021-10-31T10:52:52.548+08:00","type":"string"}},"type":"object"},"auto_subscribe.auto_subscribe":{"properties":{"topics":{"items":{"$ref":"#/components/schemas/auto_subscribe.topic"},"type":"array"}},"type":"object"},"emqx_mgmt_api_banned.ban":{"required":["who","as"],"properties":{"as":{"description":"Banned type clientid, username, peerhost","enum":["clientid","username","peerhost"],"example":"username","type":"string"},"who":{"description":"Client info as banned type","example":"Badass","type":"string"},"by":{"description":"Commander","example":"mgmt_api","type":"string"},"reason":{"description":"Banned reason","example":"Too many requests","type":"string"},"at":{"description":"Create banned time, rfc3339, now if not specified","example":"2021-10-25T21:48:47+08:00","type":"string"},"until":{"description":"Cancel banned time, rfc3339, now + 5 minute if not specified","example":"2021-10-25T21:53:47+08:00","type":"string"}},"type":"object"},"zone.conn_congestion":{"properties":{"enable_alarm":{"example":true,"type":"boolean"},"min_alarm_sustain_duration":{"example":"12m","type":"string"}},"type":"object"},"emqx_authn_api.request_import_users":{"properties":{"filename":{"example":"binary-example","type":"string"}},"type":"object"},"emqx_conf_schema.log_rotation":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"},"count":{"default":10,"example":1,"maximum":2048,"minimum":1,"type":"integer"}},"type":"object"},"authn-jwt.ssl_enable":{"properties":{"enable":{"enum":[true],"type":"string"},"cacertfile":{"example":"string-example","type":"string"},"certfile":{"example":"string-example","type":"string"},"keyfile":{"example":"string-example","type":"string"},"verify":{"default":false,"example":true,"type":"boolean"},"server_name_indication":{"example":"string-example","type":"string"}},"type":"object"},"gateway.tcp_listener":{"properties":{"acceptors":{"default":16,"example":100,"type":"integer"},"tcp":{"$ref":"#/components/schemas/emqx_schema.tcp_opts"},"proxy_protocol":{"default":false,"example":true,"type":"boolean"},"proxy_protocol_timeout":{"default":"15s","example":"12m","type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"max_connections":{"default":1024,"example":100,"type":"integer"},"max_conn_rate":{"default":1000,"example":100,"type":"integer"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"mountpoint":{"example":"binary-example","type":"string"},"access_rules":{"default":"","items":{"example":"string-example","type":"string"},"type":"array"}},"type":"object"},"zone.force_shutdown":{"properties":{"enable":{"example":true,"type":"boolean"},"max_message_queue_len":{"example":0,"minimum":0,"type":"integer"},"max_heap_size":{"example":"1024KB","type":"string"}},"type":"object"},"gateway.tcp_listeners":{"properties":{"tcp":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.tcp_listener"}},"type":"object"},"ssl":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.ssl_listener"}},"type":"object"}},"type":"object"},"authn-builtin_db.bcrypt":{"properties":{"name":{"enum":["bcrypt"],"type":"string"},"salt_rounds":{"default":10,"example":100,"type":"integer"}},"type":"object"},"emqx_gateway_api_listeners.dtls_listener_opts":{"properties":{"versions":{"items":{"example":"binary-example","type":"string"},"type":"array"},"ciphers":{"items":{"example":"binary-example","type":"string"},"type":"array"},"cacertfile":{"example":"binary-example","type":"string"},"certfile":{"example":"binary-example","type":"string"},"keyfile":{"example":"binary-example","type":"string"},"verify":{"example":"binary-example","type":"string"},"fail_if_no_peer_cert":{"example":true,"type":"boolean"},"server_name_indication":{"example":true,"type":"boolean"},"depth":{"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"user_lookup_fun":{"example":"binary-example","type":"string"},"reuse_sessions":{"example":true,"type":"boolean"},"secure_renegotiate":{"example":true,"type":"boolean"},"honor_cipher_order":{"example":true,"type":"boolean"},"dhfile":{"example":"binary-example","type":"string"}},"type":"object"},"authz.http_get":{"properties":{"type":{"enum":["http"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"url":{"example":"http://127.0.0.1","type":"string"},"method":{"default":"get","enum":["get"],"type":"string"},"headers":{"default":{"accept":"application/json","cache-control":"no-cache","connection":"keep-alive","keep-alive":"timeout=5"},"example":{},"type":"object"},"request_timeout":{"default":"30s","description":"request timeout Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"connect_timeout":{"default":"30s","description":"The timeout when connecting to the HTTP server","example":"32s","type":"string"},"max_retries":{"default":5,"description":"Max retry times if error on sending request","example":100,"minimum":1,"type":"integer"},"retry_interval":{"default":"1s","description":"Interval before next retry if error on sending request","example":"12m","type":"string"},"pool_type":{"default":"random","description":"The type of the pool. Canbe one of random, hash","enum":["random","hash"],"example":"hash","type":"string"},"pool_size":{"default":8,"description":"The pool size","example":100,"minimum":1,"type":"integer"},"enable_pipelining":{"default":true,"description":"Enable the HTTP pipeline","example":true,"type":"boolean"},"request":{"description":"\nIf the request is provided, the caller can send HTTP requests via\n<code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code>\n","$ref":"#/components/schemas/emqx_connector_http.request"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_connector_schema.mqtt_connector_test_info":{"properties":{"bridge_type":{"description":"The Bridge Type","enum":["mqtt"],"type":"string"},"server":{"default":"127.0.0.1:1883","description":"The host and port of the remote MQTT broker","example":"127.0.0.1:80","type":"string"},"reconnect_interval":{"default":"30s","description":"reconnect interval Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"proto_ver":{"default":"v4","description":"The MQTT protocol version","enum":["v3","v4","v5"],"type":"string"},"bridge_mode":{"default":true,"description":"The bridge mode of the MQTT protocol","example":true,"type":"boolean"},"username":{"default":"emqx","description":"The username of the MQTT protocol","example":"binary-example","type":"string"},"password":{"default":"emqx","description":"The password of the MQTT protocol","example":"binary-example","type":"string"},"clientid":{"default":"emqx_${nodename}","description":"The clientid of the MQTT protocol","example":"binary-example","type":"string"},"clean_start":{"default":true,"description":"The clean-start or the clean-session of the MQTT protocol","example":true,"type":"boolean"},"keepalive":{"default":"300s","description":"keepalive Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"retry_interval":{"default":"30s","description":"retry interval Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"max_inflight":{"default":32,"description":"Max inflight messages (sent but ACK has not received) of the MQTT protocol","example":100,"type":"integer"},"replayq":{"description":"\nQueue messages in disk files.\n","$ref":"#/components/schemas/emqx_connector_mqtt_schema.replayq"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"rule_engine.rule_engine":{"properties":{"ignore_sys_message":{"default":true,"description":"When set to 'true' (default), rule-engine will ignore messages published to $SYS topics.","example":true,"type":"boolean"},"rules":{"default":{},"description":"The rules","properties":{"$id":{"$ref":"#/components/schemas/rule_engine.rules"}},"type":"object"}},"type":"object"},"emqx_connector_schema.connectors":{"properties":{"mqtt":{"description":"MQTT bridges","properties":{"$name":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector"}]}},"type":"object"}},"type":"object"},"emqx_conf_schema.log_file_handler":{"properties":{"file":{"example":"/path/to/file","type":"string"},"rotation":{"$ref":"#/components/schemas/emqx_conf_schema.log_rotation"},"max_size":{"default":"10MB","oneOf":[{"example":"32MB","type":"string"},{"enum":["infinity"],"type":"string"}]},"level":{"default":"warning","enum":["debug","info","notice","warning","error","critical","alert","emergency","all"],"type":"string"},"time_offset":{"default":"system","example":"string-example","type":"string"},"chars_limit":{"default":"unlimited","oneOf":[{"example":1,"minimum":1,"type":"integer"},{"enum":["unlimited"],"type":"string"}]},"formatter":{"default":"text","enum":["text","json"],"type":"string"},"single_line":{"default":true,"example":true,"type":"boolean"},"sync_mode_qlen":{"default":100,"example":100,"type":"integer"},"drop_mode_qlen":{"default":3000,"example":100,"type":"integer"},"flush_qlen":{"default":8000,"example":100,"type":"integer"},"overload_kill":{"$ref":"#/components/schemas/emqx_conf_schema.log_overload_kill"},"burst_limit":{"$ref":"#/components/schemas/emqx_conf_schema.log_burst_limit"},"supervisor_reports":{"default":"error","enum":["error","progress"],"type":"string"},"max_depth":{"default":100,"oneOf":[{"example":100,"type":"integer"},{"enum":["unlimited"],"type":"string"}]}},"type":"object"},"zone.overload_protection":{"properties":{"enable":{"description":"React on system overload or not","example":true,"type":"boolean"},"backoff_delay":{"description":"Some unimporant tasks could be delayedfor execution, here set the delays in ms","example":0,"minimum":0,"type":"integer"},"backoff_gc":{"description":"Skip forceful GC if necessary","example":true,"type":"boolean"},"backoff_hibernation":{"description":"Skip process hibernation if necessary","example":true,"type":"boolean"},"backoff_new_conn":{"description":"Close new incoming connections if necessary","example":true,"type":"boolean"}},"type":"object"},"client":{"properties":{"recv_cnt":{"description":"Number of TCP packets received","type":"integer"},"send_msg":{"description":"Number of PUBLISH packets sent","type":"integer"},"clean_start":{"description":"Indicate whether the client is using a brand new session","type":"boolean"},"heap_size":{"description":"Process heap size with the unit of byte","type":"integer"},"node":{"description":"Name of the node to which the client is connected","type":"string"},"inflight_cnt":{"description":"Current length of inflight","type":"integer"},"disconnected_at":{"description":"Client offline time. It's Only valid and returned when connected is false, rfc3339","type":"string"},"username":{"description":"User name of client when connecting","type":"string"},"send_pkt":{"description":"Number of MQTT packets sent","type":"integer"},"subscriptions_cnt":{"description":"Number of subscriptions established by this client.","type":"integer"},"clientid":{"description":"Client identifier","type":"string"},"reductions":{"description":"Erlang reduction","type":"integer"},"recv_pkt":{"description":"Number of MQTT packets received","type":"integer"},"send_cnt":{"description":"Number of TCP packets sent","type":"integer"},"awaiting_rel_cnt":{"description":"v4 api name [awaiting_rel] Number of awaiting PUBREC packet","type":"integer"},"port":{"description":"Client's port","type":"integer"},"recv_msg":{"description":"Number of PUBLISH packets received","type":"integer"},"created_at":{"description":"Session creation time, rfc3339","type":"string"},"expiry_interval":{"description":"Session expiration interval, with the unit of second","type":"integer"},"zone":{"description":"Indicate the configuration group used by the client","type":"string"},"is_bridge":{"description":"Indicates whether the client is connectedvia bridge","type":"boolean"},"connected_at":{"description":"Client connection time, rfc3339","type":"string"},"send_oct":{"description":"Number of bytes sent","type":"integer"},"mqueue_len":{"description":"Current length of message queue","type":"integer"},"mqueue_max":{"description":"v4 api name [max_mqueue]. Maximum length of message queue","type":"integer"},"inflight_max":{"description":"v4 api name [max_inflight]. Maximum length of inflight","type":"integer"},"mqueue_dropped":{"description":"Number of messages dropped by the message queue due to exceeding the length","type":"integer"},"will_msg":{"description":"Client will message","type":"string"},"subscriptions_max":{"description":"v4 api name [max_subscriptions] Maximum number of subscriptions allowed by this client","type":"integer"},"mailbox_len":{"description":"Process mailbox size","type":"integer"},"awaiting_rel_max":{"description":"v4 api name [max_awaiting_rel]. Maximum allowed number of awaiting PUBREC packet","type":"integer"},"proto_name":{"description":"Client protocol name","type":"string"},"recv_oct":{"description":"Number of bytes received by EMQ X Broker (the same below)","type":"integer"},"keepalive":{"description":"keepalive time, with the unit of second","type":"integer"},"ip_address":{"description":"Client's IP address","type":"string"},"proto_ver":{"description":"Protocol version used by the client","type":"integer"},"connected":{"description":"Whether the client is connected","type":"boolean"}},"type":"object"},"emqx_retainer_schema.emqx_retainer":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"msg_expiry_interval":{"default":"0s","example":"32s","type":"string"},"msg_clear_interval":{"default":"0s","example":"32s","type":"string"},"flow_control":{"$ref":"#/components/schemas/emqx_retainer_schema.flow_control"},"max_payload_size":{"default":"1MB","example":"32MB","type":"string"},"config":{"oneOf":[{"$ref":"#/components/schemas/emqx_retainer_schema.mnesia_config"}]}},"type":"object"},"ssl":{"properties":{"cacertfile":{"type":"string"},"certfile":{"type":"string"},"enable":{"example":true,"type":"boolean"},"keyfile":{"type":"string"},"verify":{"example":false,"type":"boolean"}},"required":["enable"],"type":"object"},"emqx_authn_api.response_users":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_authn_api.response_user"},"type":"array"},"meta":{"$ref":"#/components/schemas/emqx_authn_api.pagination_meta"}},"type":"object"},"emqx_schema.listeners":{"properties":{"tcp":{"description":"TCP listeners","properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.mqtt_tcp_listener"}},"type":"object"},"ssl":{"description":"SSL listeners","properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.mqtt_ssl_listener"}},"type":"object"},"ws":{"description":"HTTP websocket listeners","properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.mqtt_ws_listener"}},"type":"object"},"wss":{"description":"HTTPS websocket listeners","properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.mqtt_wss_listener"}},"type":"object"},"quic":{"description":"QUIC listeners","properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.mqtt_quic_listener"}},"type":"object"}},"type":"object"},"emqx_conf_schema.console_handler":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"level":{"default":"warning","enum":["debug","info","notice","warning","error","critical","alert","emergency","all"],"type":"string"},"time_offset":{"default":"system","example":"string-example","type":"string"},"chars_limit":{"default":"unlimited","oneOf":[{"example":1,"minimum":1,"type":"integer"},{"enum":["unlimited"],"type":"string"}]},"formatter":{"default":"text","enum":["text","json"],"type":"string"},"single_line":{"default":true,"example":true,"type":"boolean"},"sync_mode_qlen":{"default":100,"example":100,"type":"integer"},"drop_mode_qlen":{"default":3000,"example":100,"type":"integer"},"flush_qlen":{"default":8000,"example":100,"type":"integer"},"overload_kill":{"$ref":"#/components/schemas/emqx_conf_schema.log_overload_kill"},"burst_limit":{"$ref":"#/components/schemas/emqx_conf_schema.log_burst_limit"},"supervisor_reports":{"default":"error","enum":["error","progress"],"type":"string"},"max_depth":{"default":100,"oneOf":[{"example":100,"type":"integer"},{"enum":["unlimited"],"type":"string"}]}},"type":"object"},"emqx_connector_mqtt_schema.replayq":{"properties":{"dir":{"description":"\nThe dir where the replayq file saved.<br>\nSet to 'false' disables the replayq feature.\n","oneOf":[{"example":"string-example","type":"string"},{"example":true,"type":"boolean"}]},"seg_bytes":{"default":"100MB","description":"\nThe size in bytes of a single segment.<br>\nA segment is mapping to a file in the replayq dir. If the current segment is full, a new segment\n(file) will be opened to write.\n","example":"32MB","type":"string"},"offload":{"default":false,"description":"\nIn offload mode, the disk queue is only used to offload queue tail segments.<br>\nThe messages are cached in the memory first, then it write to the replayq files after the size of\nthe memory cache reaches 'seg_bytes'.\n","example":true,"type":"boolean"}},"type":"object"},"dashboard.user":{"properties":{"description":{"description":"User description","example":"administrator","type":"string"},"username":{"description":"username","example":"emqx","type":"string"}},"type":"object"},"authn-mongodb.replica-set":{"required":["database"],"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["mongodb"],"type":"string"},"collection":{"example":"binary-example","type":"string"},"selector":{"example":{},"type":"object"},"password_hash_field":{"example":"binary-example","type":"string"},"salt_field":{"example":"binary-example","type":"string"},"is_superuser_field":{"example":"binary-example","type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"mongo_type":{"default":"rs","enum":["rs"],"type":"string"},"servers":{"example":"binary-example","type":"string"},"replica_set_name":{"example":"binary-example","type":"string"},"srv_record":{"default":false,"example":true,"type":"boolean"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auth_source":{"example":"binary-example","type":"string"},"database":{"example":"binary-example","type":"string"},"topology":{"$ref":"#/components/schemas/emqx_connector_mongo.topology"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_bridge_schema.bridges":{"properties":{"mqtt":{"description":"MQTT bridges","properties":{"$name":{"oneOf":[{"$ref":"#/components/schemas/emqx_bridge_schema.egress_mqtt_bridge"},{"$ref":"#/components/schemas/emqx_bridge_schema.ingress_mqtt_bridge"}]}},"type":"object"},"http":{"description":"HTTP bridges","properties":{"$name":{"$ref":"#/components/schemas/emqx_bridge_schema.http_bridge"}},"type":"object"}},"type":"object"},"rule_engine.builtin_output_republish":{"properties":{"function":{"description":"Republish the message as a new MQTT message","enum":["republish"],"type":"string"},"args":{"default":{},"description":"\nThe arguments of the built-in 'republish' output.<br>\nWe can use variables in the args.<br>\n\nThe variables are selected by the rule. For exmaple, if the rule SQL is defined as following:\n<code>\n    SELECT clientid, qos, payload FROM \"t/1\"\n</code>\nThen there are 3 variables available: <code>clientid</code>, <code>qos</code> and\n<code>payload</code>. And if we've set the args to:\n<code>\n    {\n        topic = \"t/${clientid}\"\n        qos = \"${qos}\"\n        payload = \"msg: ${payload}\"\n    }\n</code>\nWhen the rule is triggered by an MQTT message with payload = \"hello\", qos = 1,\nclientid = \"steve\", the rule will republish a new MQTT message to topic \"t/steve\",\npayload = \"msg: hello\", and qos = 1.\n","$ref":"#/components/schemas/rule_engine.republish_args"}},"type":"object"},"sources":{"oneOf":[{"$ref":"#/components/schemas/http"},{"$ref":"#/components/schemas/built-in-database"},{"$ref":"#/components/schemas/mongo_single"},{"$ref":"#/components/schemas/mongo_rs"},{"$ref":"#/components/schemas/mongo_sharded"},{"$ref":"#/components/schemas/mysql"},{"$ref":"#/components/schemas/postgresql"},{"$ref":"#/components/schemas/redis_single"},{"$ref":"#/components/schemas/redis_sentinel"},{"$ref":"#/components/schemas/redis_cluster"},{"$ref":"#/components/schemas/file"}]},"authn-jwt.public-key":{"properties":{"use_jwks":{"enum":[false],"type":"string"},"algorithm":{"enum":["public-key"],"type":"string"},"certificate":{"example":"string-example","type":"string"},"mechanism":{"enum":["jwt"],"type":"string"},"verify_claims":{"default":{},"items":{"example":[116,101,114,109],"type":"string"},"type":"array"},"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"zone.quota":{"properties":{"conn_messages_routing":{"oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]},"overall_messages_routing":{"oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]}},"type":"object"},"emqx_authz_api_mnesia.rules_for_clientid":{"required":["clientid"],"properties":{"rules":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rule_item"},"type":"array"},"clientid":{"description":"ClientID","example":"client1","type":"string"}},"type":"object"},"emqx_mgmt_api_banned.meta":{"properties":{"page":{"default":1,"description":"Page number of the results to fetch.","example":1,"type":"integer"},"limit":{"default":100,"description":"Results per page(max 100)","example":50,"maximum":100,"minimum":1,"type":"integer"},"count":{"example":1,"type":"integer"}},"type":"object"},"exhook.ssl_conf":{"properties":{"cacertfile":{"example":"string-example","type":"string"},"certfile":{"example":"string-example","type":"string"},"keyfile":{"example":"string-example","type":"string"}},"type":"object"},"emqx_bridge_schema.ingress_mqtt_bridge":{"required":["from_remote_topic","connector","direction"],"properties":{"direction":{"description":"The direction of the bridge. Can be one of 'ingress' or 'egress'.<br>\nThe ingress config defines how this bridge receive messages from the remote MQTT broker, and then\nsend them to the local broker.<br>\nTemplate with variables is allowed in 'to_local_topic', 'subscribe_qos', 'qos', 'retain',\n'payload'.<br>\nNOTE: if this bridge is used as the input of a rule (emqx rule engine), and also to_local_topic is\nconfigured, then messages got from the remote broker will be sent to both the 'to_local_topic' and\nthe rule.\n","enum":["ingress"],"type":"string"},"connector":{"description":"\nThe connector name to be used for this bridge.\nConnectors are configured by 'connectors.<type>.<name>\n","example":"binary-example","type":"string"},"from_remote_topic":{"description":"Receive messages from which topic of the remote broker","example":"binary-example","type":"string"},"subscribe_qos":{"default":1,"description":"The QoS level to be used when subscribing to the remote broker","oneOf":[{"example":"binary-example","type":"string"},{"default":2,"enum":[2],"example":2,"type":"integer"},{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]},"to_local_topic":{"description":"\nSend messages to which topic of the local broker.<br>\nTemplate with variables is allowed.\n","example":"binary-example","type":"string"},"qos":{"default":"${qos}","description":"\nThe QoS of the MQTT message to be sent.<br>\nTemplate with variables is allowed.","oneOf":[{"example":"binary-example","type":"string"},{"default":2,"enum":[2],"example":2,"type":"integer"},{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]},"retain":{"default":"${retain}","description":"\nThe retain flag of the MQTT message to be sent.<br>\nTemplate with variables is allowed.","oneOf":[{"example":"binary-example","type":"string"},{"example":true,"type":"boolean"}]},"payload":{"default":"${payload}","description":"\nThe payload of the MQTT message to be sent.<br>\nTemplate with variables is allowed.","example":"binary-example","type":"string"}},"type":"object"},"gateway.clientinfo_override":{"properties":{"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"clientid":{"example":"binary-example","type":"string"}},"type":"object"},"gateway.udp_opts":{"properties":{"active_n":{"default":100,"example":100,"type":"integer"},"recbuf":{"example":"32MB","type":"string"},"sndbuf":{"example":"32MB","type":"string"},"buffer":{"example":"32MB","type":"string"},"reuseaddr":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.zone":{"properties":{"mqtt":{"$ref":"#/components/schemas/zone.mqtt"},"stats":{"$ref":"#/components/schemas/zone.stats"},"flapping_detect":{"$ref":"#/components/schemas/zone.flapping_detect"},"force_shutdown":{"$ref":"#/components/schemas/zone.force_shutdown"},"conn_congestion":{"$ref":"#/components/schemas/zone.conn_congestion"},"rate_limit":{"$ref":"#/components/schemas/zone.rate_limit"},"quota":{"$ref":"#/components/schemas/zone.quota"},"force_gc":{"$ref":"#/components/schemas/zone.force_gc"},"overload_protection":{"$ref":"#/components/schemas/zone.overload_protection"}},"type":"object"},"emqx_authz_api_mnesia.rules_for_all":{"properties":{"rules":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rule_item"},"type":"array"}},"type":"object"},"zone.rate_limit":{"properties":{"max_conn_rate":{"oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"conn_messages_in":{"oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]},"conn_bytes_in":{"oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]}},"type":"object"},"built-in-database":{"properties":{"enable":{"example":true,"type":"boolean"},"type":{"enum":["redis"],"example":"redis","type":"string"}},"required":["type","enable"],"type":"object"},"emqx_bridge_schema.egress_mqtt_bridge":{"required":["connector","direction"],"properties":{"direction":{"description":"The direction of the bridge. Can be one of 'ingress' or 'egress'.<br>\nThe egress config defines how this bridge forwards messages from the local broker to the remote\nbroker.<br>\nTemplate with variables is allowed in 'to_remote_topic', 'qos', 'retain', 'payload'.<br>\nNOTE: if this bridge is used as the output of a rule (emqx rule engine), and also from_local_topic\nis configured, then both the data got from the rule and the MQTT messages that matches\nfrom_local_topic will be forwarded.\n","enum":["egress"],"type":"string"},"connector":{"description":"\nThe connector name to be used for this bridge.\nConnectors are configured by 'connectors.<type>.<name>\n","example":"binary-example","type":"string"},"from_local_topic":{"description":"The local topic to be forwarded to the remote broker","example":"binary-example","type":"string"},"to_remote_topic":{"default":"${topic}","description":"\nForward to which topic of the remote broker.<br>\nTemplate with variables is allowed.\n","example":"binary-example","type":"string"},"qos":{"default":"${qos}","description":"\nThe QoS of the MQTT message to be sent.<br>\nTemplate with variables is allowed.","oneOf":[{"example":"binary-example","type":"string"},{"default":2,"enum":[2],"example":2,"type":"integer"},{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]},"retain":{"default":"${retain}","description":"\nThe retain flag of the MQTT message to be sent.<br>\nTemplate with variables is allowed.","oneOf":[{"example":"binary-example","type":"string"},{"example":true,"type":"boolean"}]},"payload":{"default":"${payload}","description":"\nThe payload of the MQTT message to be sent.<br>\nTemplate with variables is allowed.","example":"binary-example","type":"string"}},"type":"object"},"emqx_conf_schema.cluster_static":{"properties":{"seeds":{"default":"","items":{"example":"string-example","type":"string"},"type":"array"}},"type":"object"},"authz.redis_sentinel":{"properties":{"type":{"enum":["redis"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"servers":{"items":{"example":"127.0.0.1:80","type":"string"},"type":"array"},"redis_type":{"default":"sentinel","enum":["sentinel"],"type":"string"},"sentinel":{"example":"string-example","type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"database":{"default":0,"example":100,"type":"integer"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"},"cmd":{"example":"binary-example","type":"string"}},"type":"object"},"emqx_limiter_schema.emqx_limiter":{"properties":{"bytes_in":{"$ref":"#/components/schemas/emqx_limiter_schema.limiter"},"message_in":{"$ref":"#/components/schemas/emqx_limiter_schema.limiter"},"connection":{"$ref":"#/components/schemas/emqx_limiter_schema.limiter"},"message_routing":{"$ref":"#/components/schemas/emqx_limiter_schema.limiter"}},"type":"object"},"emqx_authz_api_mnesia.rules_for_username":{"required":["username"],"properties":{"rules":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rule_item"},"type":"array"},"username":{"description":"Username","example":"user1","type":"string"}},"type":"object"},"authn-mongodb.standalone":{"required":["database"],"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["mongodb"],"type":"string"},"collection":{"example":"binary-example","type":"string"},"selector":{"example":{},"type":"object"},"password_hash_field":{"example":"binary-example","type":"string"},"salt_field":{"example":"binary-example","type":"string"},"is_superuser_field":{"example":"binary-example","type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"mongo_type":{"default":"single","enum":["single"],"type":"string"},"server":{"example":"binary-example","type":"string"},"srv_record":{"default":false,"example":true,"type":"boolean"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auth_source":{"example":"binary-example","type":"string"},"database":{"example":"binary-example","type":"string"},"topology":{"$ref":"#/components/schemas/emqx_connector_mongo.topology"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_schema.ws_opts":{"properties":{"mqtt_path":{"default":"/mqtt","example":"string-example","type":"string"},"mqtt_piggyback":{"default":"multiple","enum":["single","multiple"],"type":"string"},"compress":{"default":false,"example":true,"type":"boolean"},"idle_timeout":{"default":"15s","example":"12m","type":"string"},"max_frame_size":{"default":"infinity","oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"fail_if_no_subprotocol":{"default":true,"example":true,"type":"boolean"},"supported_subprotocols":{"default":"mqtt, mqtt-v3, mqtt-v3.1.1, mqtt-v5","example":"item1,item2","type":"string"},"check_origin_enable":{"default":false,"example":true,"type":"boolean"},"allow_origin_absence":{"default":true,"example":true,"type":"boolean"},"check_origins":{"default":"","items":{"example":"binary-example","type":"string"},"type":"array"},"proxy_address_header":{"default":"x-forwarded-for","example":"string-example","type":"string"},"proxy_port_header":{"default":"x-forwarded-port","example":"string-example","type":"string"},"deflate_opts":{"$ref":"#/components/schemas/emqx_schema.deflate_opts"}},"type":"object"},"authz_cache":{"properties":{"access":{"description":"Access type","type":"string"},"result":{"description":"Allow or deny","type":"string"},"topic":{"description":"Topic name","type":"string"},"updated_time":{"description":"Update time","type":"integer"}},"type":"object"},"emqx_schema.conn_congestion":{"properties":{"enable_alarm":{"default":false,"example":true,"type":"boolean"},"min_alarm_sustain_duration":{"default":"1m","example":"12m","type":"string"}},"type":"object"},"emqx_authn_api.pagination_meta":{"properties":{"page":{"example":100,"minimum":1,"type":"integer"},"limit":{"example":100,"minimum":1,"type":"integer"},"count":{"example":100,"minimum":1,"type":"integer"}},"type":"object"},"emqx_schema.plugins":{"properties":{"expand_plugins_dir":{"example":"string-example","type":"string"}},"type":"object"},"emqx_schema.ssl_client_opts":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["tlsv1.3","tlsv1.2","tlsv1.1","tlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_CCM_SHA256","TLS_AES_128_CCM_8_SHA256","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"server_name_indication":{"default":"disable","description":"Specify the host name to be used in TLS Server Name Indication extension.<br>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accedpts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP addressed used.<br>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.","oneOf":[{"example":"string-example","type":"string"},{"enum":["disable"],"type":"string"}]}},"type":"object"},"emqx_schema.mqtt":{"properties":{"idle_timeout":{"default":"15s","oneOf":[{"example":"12m","type":"string"},{"enum":["infinity"],"type":"string"}]},"max_packet_size":{"default":"1MB","example":"32MB","type":"string"},"max_clientid_len":{"default":65535,"example":23,"maximum":65535,"minimum":23,"type":"integer"},"max_topic_levels":{"default":65535,"example":1,"maximum":65535,"minimum":1,"type":"integer"},"max_qos_allowed":{"default":2,"example":0,"maximum":2,"minimum":0,"type":"integer"},"max_topic_alias":{"default":65535,"example":0,"maximum":65535,"minimum":0,"type":"integer"},"retain_available":{"default":true,"example":true,"type":"boolean"},"wildcard_subscription":{"default":true,"example":true,"type":"boolean"},"shared_subscription":{"default":true,"example":true,"type":"boolean"},"ignore_loop_deliver":{"default":false,"example":true,"type":"boolean"},"strict_mode":{"default":false,"example":true,"type":"boolean"},"response_information":{"default":"","example":"string-example","type":"string"},"server_keepalive":{"default":"disabled","oneOf":[{"enum":["disabled"],"type":"string"},{"example":100,"type":"integer"}]},"keepalive_backoff":{"default":0.75,"example":3.14159,"type":"number"},"max_subscriptions":{"default":"infinity","oneOf":[{"enum":["infinity"],"type":"string"},{"example":1,"minimum":1,"type":"integer"}]},"upgrade_qos":{"default":false,"example":true,"type":"boolean"},"max_inflight":{"default":32,"example":1,"maximum":65535,"minimum":1,"type":"integer"},"retry_interval":{"default":"30s","example":"12m","type":"string"},"max_awaiting_rel":{"default":100,"oneOf":[{"enum":["infinity"],"type":"string"},{"example":100,"type":"integer"}]},"await_rel_timeout":{"default":"300s","example":"12m","type":"string"},"session_expiry_interval":{"default":"2h","example":"12m","type":"string"},"max_mqueue_len":{"default":1000,"oneOf":[{"enum":["infinity"],"type":"string"},{"example":0,"minimum":0,"type":"integer"}]},"mqueue_priorities":{"default":"disabled","oneOf":[{"enum":["disabled"],"type":"string"},{"example":{},"type":"object"}]},"mqueue_default_priority":{"default":"lowest","enum":["highest","lowest"],"type":"string"},"mqueue_store_qos0":{"default":true,"example":true,"type":"boolean"},"use_username_as_clientid":{"default":false,"example":true,"type":"boolean"},"peer_cert_as_username":{"default":"disabled","enum":["disabled","cn","dn","crt","pem","md5"],"type":"string"},"peer_cert_as_clientid":{"default":"disabled","enum":["disabled","cn","dn","crt","pem","md5"],"type":"string"}},"type":"object"},"stat":{"properties":{"channels.count":{"description":"sessions.count","type":"integer"},"channels.max":{"description":"session.max","type":"integer"},"connections.count":{"description":"Number of current connections","type":"integer"},"connections.max":{"description":"Historical maximum number of connections","type":"integer"},"retained.count":{"description":"Number of currently retained messages","type":"integer"},"retained.max":{"description":"Historical maximum number of retained messages","type":"integer"},"routes.count":{"description":"Number of current routes","type":"integer"},"routes.max":{"description":"Historical maximum number of routes","type":"integer"},"sessions.count":{"description":"Number of current sessions","type":"integer"},"sessions.max":{"description":"Historical maximum number of sessions","type":"integer"},"suboptions.count":{"description":"subscriptions.count","type":"integer"},"suboptions.max":{"description":"subscriptions.max","type":"integer"},"subscribers.count":{"description":"Number of current subscribers","type":"integer"},"subscribers.max":{"description":"Historical maximum number of subscribers","type":"integer"},"subscriptions.count":{"description":"Number of current subscriptions, including shared subscriptions","type":"integer"},"subscriptions.max":{"description":"Historical maximum number of subscriptions","type":"integer"},"subscriptions.shared.count":{"description":"Number of current shared subscriptions","type":"integer"},"subscriptions.shared.max":{"description":"Historical maximum number of shared subscriptions","type":"integer"},"topics.count":{"description":"Number of current topics","type":"integer"},"topics.max":{"description":"Historical maximum number of topics","type":"integer"}},"type":"object"},"zone.flapping_detect":{"properties":{"enable":{"example":true,"type":"boolean"},"max_count":{"example":100,"type":"integer"},"window_time":{"example":"12m","type":"string"},"ban_time":{"example":"12m","type":"string"}},"type":"object"},"authz.postgresql":{"required":["database","server"],"properties":{"query":{"example":"binary-example","type":"string"},"type":{"enum":["postgresql"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"server":{"example":"127.0.0.1:80","type":"string"},"database":{"example":"binary-example","type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"gateway.udp_listener":{"properties":{"udp":{"$ref":"#/components/schemas/gateway.udp_opts"},"enable":{"default":true,"example":true,"type":"boolean"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"max_connections":{"default":1024,"example":100,"type":"integer"},"max_conn_rate":{"default":1000,"example":100,"type":"integer"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"mountpoint":{"example":"binary-example","type":"string"},"access_rules":{"default":"","items":{"example":"string-example","type":"string"},"type":"array"}},"type":"object"},"emqx_mgmt_api_configs.authorization":{"properties":{"no_match":{"default":"allow","description":"\nDefault access control action if the user or client matches no ACL rules,\nor if no such user or client is found by the configurable authorization\nsources such as built-in-database, an HTTP API, or a query against PostgreSQL.\nFind more details in 'authorization.sources' config.\n","enum":["allow","deny"],"type":"string"},"deny_action":{"default":"ignore","enum":["ignore","disconnect"],"type":"string"},"cache":{"$ref":"#/components/schemas/emqx_schema.cache"},"sources":{"default":"","description":"\nAuthorization data sources.<br>\nAn array of authorization (ACL) data providers.\nIt is designed as an array but not a hash-map so the sources can be\nordered to form a chain of access controls.<br>\n\n\nWhen authorizing a publish or subscribe action, the configured\nsources are checked in order. When checking an ACL source,\nin case the client (identified by username or client ID) is not found,\nit moves on to the next source. And it stops immediatly\nonce an 'allow' or 'deny' decision is returned.<br>\n\nIf the client is not found in any of the sources,\nthe default action configured in 'authorization.no_match' is applied.<br>\n\nNOTE:\nThe source elements are identified by their 'type'.\nIt is NOT allowed to configure two or more sources of the same type.\n","items":{"oneOf":[{"$ref":"#/components/schemas/authz.redis_cluster"},{"$ref":"#/components/schemas/authz.redis_sentinel"},{"$ref":"#/components/schemas/authz.redis_single"},{"$ref":"#/components/schemas/authz.postgresql"},{"$ref":"#/components/schemas/authz.mysql"},{"$ref":"#/components/schemas/authz.mongo_sharded"},{"$ref":"#/components/schemas/authz.mongo_rs"},{"$ref":"#/components/schemas/authz.mongo_single"},{"$ref":"#/components/schemas/authz.mnesia"},{"$ref":"#/components/schemas/authz.http_post"},{"$ref":"#/components/schemas/authz.http_get"},{"$ref":"#/components/schemas/authz.file"}]},"type":"array"}},"type":"object"},"authn-redis.cluster":{"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["redis"],"type":"string"},"query":{"example":"string-example","type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"servers":{"items":{"example":"127.0.0.1:80","type":"string"},"type":"array"},"redis_type":{"default":"cluster","enum":["cluster"],"type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"database":{"default":0,"example":100,"type":"integer"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_schema.persistent_session_store":{"properties":{"enabled":{"default":"false","example":true,"type":"boolean"},"max_retain_undelivered":{"default":"1h","example":"12m","type":"string"},"message_gc_interval":{"default":"1h","example":"12m","type":"string"},"session_message_gc_interval":{"default":"1m","example":"12m","type":"string"}},"type":"object"},"zone.stats":{"properties":{"enable":{"example":true,"type":"boolean"}},"type":"object"},"metrics":{"items":{"properties":{"messages.qos0.received":{"description":"Number of QoS 0 messages received from clients","type":"integer"},"packets.received":{"description":"Number of received packet","type":"integer"},"delivery.dropped.no_local":{"description":"Number of messages that were dropped due to the No Local subscription option when sending","type":"integer"},"packets.unsubscribe.error":{"description":"Number of received UNSUBSCRIBE packet with failed unsubscriptions","type":"integer"},"packets.pingresp.sent":{"description":"Number of sent PUBRESP packet","type":"integer"},"packets.puback.sent":{"description":"Number of sent PUBACK packet","type":"integer"},"packets.auth.received":{"description":"Number of received AUTH packet","type":"integer"},"packets.pubrel.missed":{"description":"Number of received PUBREC packet with unknown identifiers","type":"integer"},"session.takeovered":{"description":"Number of sessions takeovered because Clean Session or Clean Start is false","type":"integer"},"packets.pubrec.missed":{"description":"Number of received PUBREC packet with unknown identifiers","type":"integer"},"packets.disconnect.sent":{"description":"Number of sent DISCONNECT packet","type":"integer"},"messages.qos2.received":{"description":"Number of QoS 2 messages received from clients","type":"integer"},"packets.publish.received":{"description":"Number of received PUBLISH packet","type":"integer"},"packets.pubcomp.sent":{"description":"Number of sent PUBCOMP packet","type":"integer"},"node":{"type":"string"},"packets.pubcomp.received":{"description":"Number of received PUBCOMP packet","type":"integer"},"messages.dropped.expired":{"description":"Number of messages dropped due to message expiration when receiving","type":"integer"},"bytes.sent":{"description":"Number of bytes sent by EMQ X Broker on this connection","type":"integer"},"packets.unsubscribe.received":{"description":"Number of received UNSUBSCRIBE packet","type":"integer"},"client.connack":{"description":"Number of CONNACK packet sent","type":"integer"},"packets.pubcomp.missed":{"description":"Number of missed PUBCOMP packet","type":"integer"},"packets.publish.sent":{"description":"Number of sent PUBLISH packet","type":"integer"},"session.terminated":{"description":"Number of terminated sessions","type":"integer"},"packets.pubcomp.inuse":{"description":"Number of received PUBCOMP packet with occupied identifiers","type":"integer"},"packets.puback.received":{"description":"Number of received PUBACK packet","type":"integer"},"session.created":{"description":"Number of sessions created","type":"integer"},"packets.connack.auth_error":{"description":"Number of received CONNECT packet with failed authentication","type":"integer"},"client.unsubscribe":{"description":"Number of client unsubscriptions","type":"integer"},"messages.delayed":{"description":"Number of delay- published messages stored by EMQ X Broker","type":"integer"},"packets.puback.missed":{"description":"Number of received packet with identifiers.","type":"integer"},"packets.connect.received":{"description":"Number of received CONNECT packet","type":"integer"},"packets.sent":{"description":"Number of sent packet","type":"integer"},"session.discarded":{"description":"Number of sessions dropped because Clean Session or Clean Start is true","type":"integer"},"messages.publish":{"description":"Number of messages published in addition to system messages","type":"integer"},"delivery.dropped.queue_full":{"description":"Number of messages with a non-zero QoS that were dropped because the message queue was full when sending","type":"integer"},"client.authenticate":{"description":"Number of client authentications","type":"integer"},"rules.matched":{"description":"Number of rule matched","type":"integer"},"messages.qos1.received":{"description":"Number of QoS 1 messages received from clients","type":"integer"},"messages.qos1.sent":{"description":"Number of QoS 1 messages sent to clients","type":"integer"},"messages.retained":{"description":"Number of retained messages stored by EMQ X Broker","type":"integer"},"client.auth.anonymous":{"description":"Number of clients who log in anonymously","type":"integer"},"delivery.dropped":{"description":"Total number of discarded messages when sending","type":"integer"},"packets.publish.inuse":{"description":"Number of received PUBLISH packet with occupied identifiers","type":"integer"},"messages.acked":{"description":"Number of received PUBACK and PUBREC packet","type":"integer"},"messages.sent":{"description":"Number of messages sent to the client, equal to the sum of messages.qos0.sent\fmessages.qos1.sent and messages.qos2.sent","type":"integer"},"delivery.dropped.qos0_msg":{"description":"Number of messages with QoS 0 that were dropped because the message queue was full when sending","type":"integer"},"client.check_authz":{"description":"Number of Authorization rule checks","type":"integer"},"actions.failure":{"description":"Number of failure executions of the rule engine action","type":"integer"},"packets.unsuback.sent":{"description":"Number of sent UNSUBACK packet","type":"integer"},"packets.publish.error":{"description":"Number of received PUBLISH packet that cannot be published","type":"integer"},"packets.pubrec.inuse":{"description":"Number of received PUBREC packet with occupied identifiers","type":"integer"},"messages.delivered":{"description":"Number of messages forwarded to the subscription process internally by EMQ X Broker","type":"integer"},"messages.dropped.no_subscribers":{"description":"Number of messages dropped due to no subscribers","type":"integer"},"bytes.received":{"description":"Number of bytes received by EMQ X Broker","type":"integer"},"client.subscribe":{"description":"Number of client subscriptions","type":"integer"},"packets.connack.error":{"description":"Number of received CONNECT packet with unsuccessful connections","type":"integer"},"packets.publish.dropped":{"description":"Number of messages discarded due to the receiving limit","type":"integer"},"messages.qos0.sent":{"description":"Number of QoS 0 messages sent to clients","type":"integer"},"packets.pubrel.sent":{"description":"Number of sent PUBREL packet","type":"integer"},"packets.auth.sent":{"description":"Number of sent AUTH packet","type":"integer"},"delivery.dropped.expired":{"description":"Number of messages dropped due to message expiration on sending","type":"integer"},"messages.forward":{"description":"Number of messages forwarded to other nodes","type":"integer"},"packets.pubrec.received":{"description":"Number of received PUBREC packet","type":"integer"},"session.resumed":{"description":"Number of sessions resumed because Clean Session or Clean Start is false","type":"integer"},"packets.publish.auth_error":{"description":"Number of received PUBLISH packets with failed the Authorization check","type":"integer"},"packets.disconnect.received":{"description":"Number of received DISCONNECT packet","type":"integer"},"packets.pubrel.received":{"description":"Number of received PUBREL packet","type":"integer"},"messages.received":{"description":"Number of messages received from the client, equal to the sum of messages.qos0.received\fmessages.qos1.received and messages.qos2.received","type":"integer"},"client.connect":{"description":"Number of client connections","type":"integer"},"packets.suback.sent":{"description":"Number of sent SUBACK packet","type":"integer"},"packets.puback.inuse":{"description":"Number of received PUBACK packet with occupied identifiers","type":"integer"},"messages.dropped":{"description":"Total number of messages dropped by EMQ X Broker before forwarding to the subscription process","type":"integer"},"packets.pubrec.sent":{"description":"Number of sent PUBREC packet","type":"integer"},"delivery.dropped.too_large":{"description":"The number of messages that were dropped because the length exceeded the limit when sending","type":"integer"},"packets.subscribe.auth_error":{"description":"Number of received SUBACK packet with failed Authorization check","type":"integer"},"packets.connack.sent":{"description":"Number of sent CONNACK packet","type":"integer"},"packets.subscribe.received":{"description":"Number of received SUBSCRIBE packet","type":"integer"},"client.connected":{"description":"Number of successful client connections","type":"integer"},"client.disconnected":{"description":"Number of client disconnects","type":"integer"},"packets.subscribe.error":{"description":"Number of received SUBSCRIBE packet with failed subscriptions","type":"integer"},"messages.qos2.sent":{"description":"Number of QoS 2 messages sent to clients","type":"integer"},"actions.success":{"description":"Number of successful executions of the rule engine action","type":"integer"},"packets.pingreq.received":{"description":"Number of received PINGREQ packet","type":"integer"}},"type":"object"},"type":"array"},"gateway.udp_listeners":{"properties":{"udp":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.udp_listener"}},"type":"object"},"dtls":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.dtls_listener"}},"type":"object"}},"type":"object"},"dashboard.https":{"properties":{"protocol":{"enum":["http","https"],"type":"string"},"port":{"default":18083,"example":100,"type":"integer"},"num_acceptors":{"default":4,"example":100,"type":"integer"},"max_connections":{"default":512,"example":100,"type":"integer"},"backlog":{"default":1024,"example":100,"type":"integer"},"send_timeout":{"default":"5s","example":"12m","type":"string"},"inet6":{"default":false,"example":true,"type":"boolean"},"ipv6_v6only":{"default":false,"example":true,"type":"boolean"},"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["tlsv1.3","tlsv1.2","tlsv1.1","tlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_CCM_SHA256","TLS_AES_128_CCM_8_SHA256","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"dhfile":{"description":"Path to a file containing PEM-encoded Diffie Hellman parameters\nto be used by the server if a cipher suite using Diffie Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br>\nNOTE: The dhfile option is not supported by TLS 1.3.","example":"string-example","type":"string"},"honor_cipher_order":{"default":true,"example":true,"type":"boolean"},"client_renegotiation":{"default":true,"description":"\nIn protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.\n","example":true,"type":"boolean"},"handshake_timeout":{"default":"15s","description":"Maximum time duration allowed for the handshake to complete","example":"12m","type":"string"}},"type":"object"},"emqx_connector_schema.mqtt_connector":{"properties":{"server":{"default":"127.0.0.1:1883","description":"The host and port of the remote MQTT broker","example":"127.0.0.1:80","type":"string"},"reconnect_interval":{"default":"30s","description":"reconnect interval Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"proto_ver":{"default":"v4","description":"The MQTT protocol version","enum":["v3","v4","v5"],"type":"string"},"bridge_mode":{"default":true,"description":"The bridge mode of the MQTT protocol","example":true,"type":"boolean"},"username":{"default":"emqx","description":"The username of the MQTT protocol","example":"binary-example","type":"string"},"password":{"default":"emqx","description":"The password of the MQTT protocol","example":"binary-example","type":"string"},"clientid":{"default":"emqx_${nodename}","description":"The clientid of the MQTT protocol","example":"binary-example","type":"string"},"clean_start":{"default":true,"description":"The clean-start or the clean-session of the MQTT protocol","example":true,"type":"boolean"},"keepalive":{"default":"300s","description":"keepalive Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"retry_interval":{"default":"30s","description":"retry interval Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"max_inflight":{"default":32,"description":"Max inflight messages (sent but ACK has not received) of the MQTT protocol","example":100,"type":"integer"},"replayq":{"description":"\nQueue messages in disk files.\n","$ref":"#/components/schemas/emqx_connector_mqtt_schema.replayq"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_schema.overload_protection":{"properties":{"enable":{"default":false,"description":"React on system overload or not","example":true,"type":"boolean"},"backoff_delay":{"default":1,"description":"Some unimporant tasks could be delayedfor execution, here set the delays in ms","example":0,"minimum":0,"type":"integer"},"backoff_gc":{"default":false,"description":"Skip forceful GC if necessary","example":true,"type":"boolean"},"backoff_hibernation":{"default":true,"description":"Skip process hibernation if necessary","example":true,"type":"boolean"},"backoff_new_conn":{"default":true,"description":"Close new incoming connections if necessary","example":true,"type":"boolean"}},"type":"object"},"modules.event_message":{"properties":{"$event/client_connected":{"default":false,"example":true,"type":"boolean"},"$event/client_disconnected":{"default":false,"example":true,"type":"boolean"},"$event/client_subscribed":{"default":false,"example":true,"type":"boolean"},"$event/client_unsubscribed":{"default":false,"example":true,"type":"boolean"},"$event/message_delivered":{"default":false,"example":true,"type":"boolean"},"$event/message_acked":{"default":false,"example":true,"type":"boolean"},"$event/message_dropped":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"gateway.lwm2m":{"required":["translators"],"properties":{"xml_dir":{"default":"etc/lwm2m_xml","description":"The Directory for LwM2M Resource defination","example":"binary-example","type":"string"},"lifetime_min":{"default":"1s","description":"Minimum value of lifetime allowed to be set by the LwM2M client","example":"12m","type":"string"},"lifetime_max":{"default":"86400s","description":"Maximum value of lifetime allowed to be set by the LwM2M client","example":"12m","type":"string"},"qmode_time_window":{"default":"22s","description":"The value of the time window during which the network link is considered\nvalid by the LwM2M Gateway in QMode mode.<br>\nFor example, after receiving an update message from a client, any messages\nwithin this time window are sent directly to the LwM2M client, and all messages\nbeyond this time window are temporarily stored in memory.","example":"1h","type":"string"},"auto_observe":{"default":false,"description":"Automatically observe the object list of REGISTER packet","example":true,"type":"boolean"},"update_msg_publish_condition":{"default":"contains_object_list","description":"Policy for publishing UPDATE event message to EMQ X.<br>\n  - always: send update events as long as the UPDATE request is received.\n  - contains_object_list: send update events only if the UPDATE request carries any Object List.","oneOf":[{"enum":["contains_object_list"],"type":"string"},{"enum":["always"],"type":"string"}]},"translators":{"description":"Topic configuration for LwM2M's gateway publishing and subscription","$ref":"#/components/schemas/gateway.lwm2m_translators"},"listeners":{"$ref":"#/components/schemas/gateway.udp_listeners"},"enable":{"default":true,"description":"Whether to enable this gateway","example":true,"type":"boolean"},"enable_stats":{"default":true,"description":"Whether to enable client process statistic","example":true,"type":"boolean"},"idle_timeout":{"default":"30s","description":"The idle time of the client connection process.<br>\nit has two purposes:\n1. A newly created client process that does not receive any client requests\n   after that time will be closed directly.\n2. A running client process that does not receive any client requests after\n   this time will go into hibernation to save resources.","example":"12m","type":"string"},"mountpoint":{"default":"","description":"","example":"binary-example","type":"string"},"clientinfo_override":{"description":"","$ref":"#/components/schemas/gateway.clientinfo_override"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}},"type":"object"},"gateway.stomp_frame":{"properties":{"max_headers":{"default":10,"description":"The maximum number of Header","example":100,"type":"integer"},"max_headers_length":{"default":1024,"description":"The maximum string length of the Header Value","example":100,"type":"integer"},"max_body_length":{"default":65536,"description":"Maximum number of bytes of Body allowed per Stomp packet","example":100,"type":"integer"}},"type":"object"},"emqx_connector_schema.mqtt_connector_info":{"properties":{"id":{"description":"The connector Id","example":"binary-example","type":"string"},"server":{"default":"127.0.0.1:1883","description":"The host and port of the remote MQTT broker","example":"127.0.0.1:80","type":"string"},"reconnect_interval":{"default":"30s","description":"reconnect interval Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"proto_ver":{"default":"v4","description":"The MQTT protocol version","enum":["v3","v4","v5"],"type":"string"},"bridge_mode":{"default":true,"description":"The bridge mode of the MQTT protocol","example":true,"type":"boolean"},"username":{"default":"emqx","description":"The username of the MQTT protocol","example":"binary-example","type":"string"},"password":{"default":"emqx","description":"The password of the MQTT protocol","example":"binary-example","type":"string"},"clientid":{"default":"emqx_${nodename}","description":"The clientid of the MQTT protocol","example":"binary-example","type":"string"},"clean_start":{"default":true,"description":"The clean-start or the clean-session of the MQTT protocol","example":true,"type":"boolean"},"keepalive":{"default":"300s","description":"keepalive Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"retry_interval":{"default":"30s","description":"retry interval Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"max_inflight":{"default":32,"description":"Max inflight messages (sent but ACK has not received) of the MQTT protocol","example":100,"type":"integer"},"replayq":{"description":"\nQueue messages in disk files.\n","$ref":"#/components/schemas/emqx_connector_mqtt_schema.replayq"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"zone.force_gc":{"properties":{"enable":{"example":true,"type":"boolean"},"count":{"example":0,"minimum":0,"type":"integer"},"bytes":{"example":"32MB","type":"string"}},"type":"object"},"emqx_conf_schema.cluster_mcast":{"properties":{"addr":{"default":"239.192.0.1","example":"string-example","type":"string"},"ports":{"default":[4369,4370],"items":{"example":100,"type":"integer"},"type":"array"},"iface":{"default":"0.0.0.0","example":"string-example","type":"string"},"ttl":{"default":255,"example":0,"maximum":255,"minimum":0,"type":"integer"},"loop":{"default":true,"example":true,"type":"boolean"},"sndbuf":{"default":"16KB","example":"32MB","type":"string"},"recbuf":{"default":"16KB","example":"32MB","type":"string"},"buffer":{"default":"32KB","example":"32MB","type":"string"}},"type":"object"},"file":{"properties":{"enable":{"example":true,"type":"boolean"},"path":{"example":"/path/to/authorizaiton_rules.conf","type":"string"},"rules":{"items":{"example":"{allow,{username,\"^dashboard?\"},subscribe,[\"$SYS/#\"]}.\n{allow,{ipaddr,\"127.0.0.1\"},all,[\"$SYS/#\",\"#\"]}.","type":"string"},"type":"array"},"type":{"enum":["redis"],"example":"redis","type":"string"}},"required":["type","enable","rules"],"type":"object"},"authz.mongo_single":{"required":["database"],"properties":{"collection":{"example":"atom","type":"string"},"selector":{"example":{},"type":"object"},"type":{"enum":["mongodb"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"mongo_type":{"default":"single","enum":["single"],"type":"string"},"server":{"example":"binary-example","type":"string"},"srv_record":{"default":false,"example":true,"type":"boolean"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auth_source":{"example":"binary-example","type":"string"},"database":{"example":"binary-example","type":"string"},"topology":{"$ref":"#/components/schemas/emqx_connector_mongo.topology"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"prometheus.prometheus":{"properties":{"push_gateway_server":{"example":"string-example","type":"string"},"interval":{"default":"15s","example":"32s","type":"string"},"enable":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"gateway.lwm2m_translators":{"properties":{"command":{"description":"The topic for receiving downstream commands.<br>\nFor each new LwM2M client that succeeds in going online, the gateway creates\na the subscription relationship to receive downstream commands and send it to\nthe LwM2M client","$ref":"#/components/schemas/gateway.translator"},"response":{"description":"The topic for gateway to publish the acknowledge events from LwM2M client","$ref":"#/components/schemas/gateway.translator"},"notify":{"description":"The topic for gateway to publish the notify events from LwM2M client.<br>\nAfter succeed observe a resource of LwM2M client, Gateway will send the\nnotifyevents via this topic, if the client reports any resource changes","$ref":"#/components/schemas/gateway.translator"},"register":{"description":"The topic for gateway to publish the register events from LwM2M client.<br>","$ref":"#/components/schemas/gateway.translator"},"update":{"description":"The topic for gateway to publish the update events from LwM2M client.<br>","$ref":"#/components/schemas/gateway.translator"}},"type":"object"},"authz.mongo_sharded":{"required":["database"],"properties":{"collection":{"example":"atom","type":"string"},"selector":{"example":{},"type":"object"},"type":{"enum":["mongodb"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"mongo_type":{"default":"sharded","enum":["sharded"],"type":"string"},"servers":{"example":"binary-example","type":"string"},"srv_record":{"default":false,"example":true,"type":"boolean"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auth_source":{"example":"binary-example","type":"string"},"database":{"example":"binary-example","type":"string"},"topology":{"$ref":"#/components/schemas/emqx_connector_mongo.topology"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_gateway_api_listeners.udp_listener_opts":{"properties":{"active_n":{"example":100,"type":"integer"},"buffer":{"example":"binary-example","type":"string"},"recbuf":{"example":"binary-example","type":"string"},"sndbuf":{"example":"binary-example","type":"string"},"reuseaddr":{"example":true,"type":"boolean"}},"type":"object"},"emqx_limiter_schema.limiter":{"properties":{"global":{"example":"10M/s","type":"string"},"zone":{"properties":{"$zone name":{"example":"10M/s","type":"string"}},"type":"object"},"bucket":{"description":"Token Buckets","properties":{"$bucket id":{"$ref":"#/components/schemas/emqx_limiter_schema.bucket"}},"type":"object"}},"type":"object"},"emqx_schema.force_shutdown":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"},"max_message_queue_len":{"default":1000,"example":0,"minimum":0,"type":"integer"},"max_heap_size":{"default":"32MB","example":"1024KB","type":"string"}},"type":"object"},"rule_engine.builtin_output_console":{"properties":{"function":{"description":"Print the outputs to the console","enum":["console"],"type":"string"}},"type":"object"},"emqx_schema.sysmon_vm":{"properties":{"process_check_interval":{"default":"30s","example":"12m","type":"string"},"process_high_watermark":{"default":"80%","example":"12%","type":"number"},"process_low_watermark":{"default":"60%","example":"12%","type":"number"},"long_gc":{"oneOf":[{"example":"12m","type":"string"},{"enum":["disabled"],"type":"string"}]},"long_schedule":{"default":"240ms","oneOf":[{"example":"12m","type":"string"},{"enum":["disabled"],"type":"string"}]},"large_heap":{"default":"32MB","oneOf":[{"example":"32MB","type":"string"},{"enum":["disabled"],"type":"string"}]},"busy_dist_port":{"default":true,"example":true,"type":"boolean"},"busy_port":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_mgmt_api_configs.log":{"properties":{"console_handler":{"$ref":"#/components/schemas/emqx_conf_schema.console_handler"},"file_handlers":{"properties":{"$name":{"$ref":"#/components/schemas/emqx_conf_schema.log_file_handler"}},"type":"object"},"error_logger":{"default":"silent","example":"atom","type":"string"}},"type":"object"},"authz.redis_single":{"properties":{"type":{"enum":["redis"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"server":{"example":"127.0.0.1:80","type":"string"},"redis_type":{"default":"single","enum":["single"],"type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"database":{"default":0,"example":100,"type":"integer"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"},"cmd":{"example":"binary-example","type":"string"}},"type":"object"},"emqx_mgmt_api_configs.cluster":{"properties":{"name":{"default":"emqxcl","example":"atom","type":"string"},"discovery_strategy":{"default":"manual","enum":["manual","static","mcast","dns","etcd","k8s"],"type":"string"},"autoclean":{"default":"5m","example":"12m","type":"string"},"autoheal":{"default":true,"example":true,"type":"boolean"},"static":{"$ref":"#/components/schemas/emqx_conf_schema.cluster_static"},"mcast":{"$ref":"#/components/schemas/emqx_conf_schema.cluster_mcast"},"proto_dist":{"default":"inet_tcp","enum":["inet_tcp","inet6_tcp","inet_tls"],"type":"string"},"dns":{"$ref":"#/components/schemas/emqx_conf_schema.cluster_dns"},"etcd":{"$ref":"#/components/schemas/emqx_conf_schema.cluster_etcd"},"k8s":{"$ref":"#/components/schemas/emqx_conf_schema.cluster_k8s"}},"type":"object"},"emqx_conf_schema.cluster_k8s":{"properties":{"apiserver":{"example":"string-example","type":"string"},"service_name":{"default":"emqx","example":"string-example","type":"string"},"address_type":{"enum":["ip","dns","hostname"],"type":"string"},"app_name":{"default":"emqx","example":"string-example","type":"string"},"namespace":{"default":"default","example":"string-example","type":"string"},"suffix":{"default":"pod.local","example":"string-example","type":"string"}},"type":"object"},"emqx_schema.sysmon_os":{"properties":{"cpu_check_interval":{"default":"60s","example":"12m","type":"string"},"cpu_high_watermark":{"default":"80%","example":"12%","type":"number"},"cpu_low_watermark":{"default":"60%","example":"12%","type":"number"},"mem_check_interval":{"default":"60s","oneOf":[{"example":"12m","type":"string"},{"enum":["disabled"],"type":"string"}]},"sysmem_high_watermark":{"default":"70%","example":"12%","type":"number"},"procmem_high_watermark":{"default":"5%","example":"12%","type":"number"}},"type":"object"},"emqx_schema.rate_limit":{"properties":{"max_conn_rate":{"default":1000,"oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"conn_messages_in":{"default":"infinity","oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]},"conn_bytes_in":{"default":"infinity","oneOf":[{"example":"item1,item2","type":"string"},{"enum":["infinity"],"type":"string"}]}},"type":"object"},"authn-jwt.hmac-based":{"properties":{"use_jwks":{"enum":[false],"type":"string"},"algorithm":{"enum":["hmac-based"],"type":"string"},"secret":{"example":"binary-example","type":"string"},"secret_base64_encoded":{"default":false,"example":true,"type":"boolean"},"mechanism":{"enum":["jwt"],"type":"string"},"verify_claims":{"default":{},"items":{"example":[116,101,114,109],"type":"string"},"type":"array"},"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.listener_wss_opts":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["tlsv1.3","tlsv1.2","tlsv1.1","tlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_CCM_SHA256","TLS_AES_128_CCM_8_SHA256","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"dhfile":{"description":"Path to a file containing PEM-encoded Diffie Hellman parameters\nto be used by the server if a cipher suite using Diffie Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br>\nNOTE: The dhfile option is not supported by TLS 1.3.","example":"string-example","type":"string"},"fail_if_no_peer_cert":{"default":false,"description":"\nUsed together with {verify, verify_peer} by an TLS/DTLS server.\nIf set to true, the server fails if the client does not have a\ncertificate to send, that is, sends an empty certificate.\nIf set to false, it fails only if the client sends an invalid\ncertificate (an empty certificate is considered valid).\n","example":true,"type":"boolean"},"honor_cipher_order":{"default":true,"example":true,"type":"boolean"},"client_renegotiation":{"default":true,"description":"\nIn protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.\n","example":true,"type":"boolean"},"handshake_timeout":{"default":"15s","description":"Maximum time duration allowed for the handshake to complete","example":"12m","type":"string"}},"type":"object"},"rule_engine.rules":{"required":["sql"],"properties":{"sql":{"description":"\nSQL query to transform the messages.<br>\nExample: <code>SELECT * FROM \"test/topic\" WHERE payload.x = 1</code><br>\n","example":"binary-example","type":"string"},"outputs":{"default":"","description":"\nA list of outputs of the rule.<br>\nAn output can be a string that refers to the channel Id of a emqx bridge, or a object\nthat refers to a function.<br>\nThere a some built-in functions like \"republish\" and \"console\", and we also support user\nprovided functions like \"<SomeModule>:<SomeFunction>\".<br>\nThe outputs in the list is executed one by one in order.\nThis means that if one of the output is executing slowly, all of the outputs comes after it will not\nbe executed until it returns.<br>\nIf one of the output crashed, all other outputs come after it will still be executed, in the\noriginal order.<br>\nIf there's any error when running an output, there will be an error message, and the 'failure'\ncounter of the function output or the bridge channel will increase.\n","items":{"oneOf":[{"$ref":"#/components/schemas/rule_engine.builtin_output_console"},{"$ref":"#/components/schemas/rule_engine.builtin_output_republish"},{"example":"binary-example","type":"string"}]},"type":"array"},"enable":{"default":true,"description":"Enable or disable the rule","example":true,"type":"boolean"},"description":{"default":"","description":"The description of the rule","example":"binary-example","type":"string"}},"type":"object"},"emqx_schema.stats":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.broker_perf":{"properties":{"route_lock_type":{"default":"key","enum":["key","tab","global"],"type":"string"},"trie_compaction":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_authn_api.response_user":{"properties":{"user_id":{"example":"binary-example","type":"string"},"is_superuser":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"gateway.gateway":{"properties":{"stomp":{"description":"The Stomp Gateway configuration.<br>\nThis gateway supports v1.2/1.1/1.0","$ref":"#/components/schemas/gateway.stomp"},"mqttsn":{"description":"The MQTT-SN Gateway configuration.<br>\nThis gateway only supports the v1.2 protocol","$ref":"#/components/schemas/gateway.mqttsn"},"coap":{"description":"The CoAP Gateway configuration.<br>\nThis gateway is implemented based on RFC-7252 and\nhttps://core-wg.github.io/coap-pubsub/draft-ietf-core-pubsub.html","$ref":"#/components/schemas/gateway.coap"},"lwm2m":{"description":"The LwM2M Gateway configuration.<br>\nThis gateway only supports the v1.0.1 protocol","$ref":"#/components/schemas/gateway.lwm2m"},"exproto":{"description":"The Extension Protocol configuration","$ref":"#/components/schemas/gateway.exproto"}},"type":"object"},"statsd.statsd":{"required":["flush_time_interval","sample_time_interval","server"],"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"server":{"default":"127.0.0.1:8125","example":"127.0.0.1:80","type":"string"},"sample_time_interval":{"default":"10s","example":"32s","type":"string"},"flush_time_interval":{"default":"10s","example":"32s","type":"string"}},"type":"object"},"emqx_conf_schema.cluster_dns":{"properties":{"name":{"default":"localhost","example":"string-example","type":"string"},"app":{"default":"emqx","example":"string-example","type":"string"}},"type":"object"},"gateway.dtls_opts":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["dtlsv1.2","dtlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"dhfile":{"description":"Path to a file containing PEM-encoded Diffie Hellman parameters\nto be used by the server if a cipher suite using Diffie Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br>\nNOTE: The dhfile option is not supported by TLS 1.3.","example":"string-example","type":"string"},"fail_if_no_peer_cert":{"default":false,"description":"\nUsed together with {verify, verify_peer} by an TLS/DTLS server.\nIf set to true, the server fails if the client does not have a\ncertificate to send, that is, sends an empty certificate.\nIf set to false, it fails only if the client sends an invalid\ncertificate (an empty certificate is considered valid).\n","example":true,"type":"boolean"},"honor_cipher_order":{"default":true,"example":true,"type":"boolean"},"client_renegotiation":{"default":true,"description":"\nIn protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.\n","example":true,"type":"boolean"}},"type":"object"},"zone.mqtt":{"properties":{"idle_timeout":{"oneOf":[{"example":"12m","type":"string"},{"enum":["infinity"],"type":"string"}]},"max_packet_size":{"example":"32MB","type":"string"},"max_clientid_len":{"example":23,"maximum":65535,"minimum":23,"type":"integer"},"max_topic_levels":{"example":1,"maximum":65535,"minimum":1,"type":"integer"},"max_qos_allowed":{"example":0,"maximum":2,"minimum":0,"type":"integer"},"max_topic_alias":{"example":0,"maximum":65535,"minimum":0,"type":"integer"},"retain_available":{"example":true,"type":"boolean"},"wildcard_subscription":{"example":true,"type":"boolean"},"shared_subscription":{"example":true,"type":"boolean"},"ignore_loop_deliver":{"example":true,"type":"boolean"},"strict_mode":{"example":true,"type":"boolean"},"response_information":{"example":"string-example","type":"string"},"server_keepalive":{"oneOf":[{"enum":["disabled"],"type":"string"},{"example":100,"type":"integer"}]},"keepalive_backoff":{"example":3.14159,"type":"number"},"max_subscriptions":{"oneOf":[{"enum":["infinity"],"type":"string"},{"example":1,"minimum":1,"type":"integer"}]},"upgrade_qos":{"example":true,"type":"boolean"},"max_inflight":{"example":1,"maximum":65535,"minimum":1,"type":"integer"},"retry_interval":{"example":"12m","type":"string"},"max_awaiting_rel":{"oneOf":[{"enum":["infinity"],"type":"string"},{"example":100,"type":"integer"}]},"await_rel_timeout":{"example":"12m","type":"string"},"session_expiry_interval":{"example":"12m","type":"string"},"max_mqueue_len":{"oneOf":[{"enum":["infinity"],"type":"string"},{"example":0,"minimum":0,"type":"integer"}]},"mqueue_priorities":{"oneOf":[{"enum":["disabled"],"type":"string"},{"example":{},"type":"object"}]},"mqueue_default_priority":{"enum":["highest","lowest"],"type":"string"},"mqueue_store_qos0":{"example":true,"type":"boolean"},"use_username_as_clientid":{"example":true,"type":"boolean"},"peer_cert_as_username":{"enum":["disabled","cn","dn","crt","pem","md5"],"type":"string"},"peer_cert_as_clientid":{"enum":["disabled","cn","dn","crt","pem","md5"],"type":"string"}},"type":"object"},"modules.topic_metrics":{"properties":{"topic":{"example":"binary-example","type":"string"}},"type":"object"},"mongo_rs":{"properties":{"auth_source":{"type":"string"},"collection":{"type":"string"},"database":{"type":"string"},"enable":{"example":true,"type":"boolean"},"mongo_type":{"enum":["rs"],"example":"rs","type":"string"},"password":{"type":"string"},"pool_size":{"type":"integer"},"replica_set_name":{"type":"string"},"selector":{"type":"object"},"servers":{"items":{"example":"127.0.0.1:27017","type":"string"},"type":"array"},"srv_record":{"default":false,"example":false,"type":"boolean"},"ssl":{"$ref":"#/components/schemas/ssl"},"topology":{"properties":{"connect_timeout_ms":{"type":"integer"},"heartbeat_frequency_ms":{"type":"integer"},"local_threshold_ms":{"type":"integer"},"max_overflow":{"type":"integer"},"min_heartbeat_frequency_ms":{"type":"integer"},"overflow_check_period":{"type":"string"},"overflow_ttl":{"type":"string"},"pool_size":{"type":"integer"},"server_selection_timeout_ms":{"type":"integer"},"socket_timeout_ms":{"type":"integer"},"wait_queue_timeout_ms":{"type":"integer"}},"type":"object"},"type":{"enum":["mongodb"],"example":"mongodb","type":"string"},"username":{"type":"string"}},"required":["type","enable","collection","selector","mongo_type","servers","replica_set_name","pool_size","username","password","auth_source","database","topology","ssl"],"type":"object"},"gateway.exproto_grpc_server":{"properties":{"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"ssl":{"$ref":"#/components/schemas/gateway.ssl_server_opts"}},"type":"object"},"gateway.mqttsn_predefined":{"properties":{"id":{"description":"Topic Id.<br>Range: 1-65535","example":100,"type":"integer"},"topic":{"description":"Topic Name","example":"binary-example","type":"string"}},"type":"object"},"metric":{"properties":{"messages.qos0.received":{"description":"Number of QoS 0 messages received from clients","type":"integer"},"packets.received":{"description":"Number of received packet","type":"integer"},"delivery.dropped.no_local":{"description":"Number of messages that were dropped due to the No Local subscription option when sending","type":"integer"},"packets.unsubscribe.error":{"description":"Number of received UNSUBSCRIBE packet with failed unsubscriptions","type":"integer"},"packets.pingresp.sent":{"description":"Number of sent PUBRESP packet","type":"integer"},"packets.puback.sent":{"description":"Number of sent PUBACK packet","type":"integer"},"packets.auth.received":{"description":"Number of received AUTH packet","type":"integer"},"packets.pubrel.missed":{"description":"Number of received PUBREC packet with unknown identifiers","type":"integer"},"session.takeovered":{"description":"Number of sessions takeovered because Clean Session or Clean Start is false","type":"integer"},"packets.pubrec.missed":{"description":"Number of received PUBREC packet with unknown identifiers","type":"integer"},"packets.disconnect.sent":{"description":"Number of sent DISCONNECT packet","type":"integer"},"messages.qos2.received":{"description":"Number of QoS 2 messages received from clients","type":"integer"},"packets.publish.received":{"description":"Number of received PUBLISH packet","type":"integer"},"packets.pubcomp.sent":{"description":"Number of sent PUBCOMP packet","type":"integer"},"packets.pubcomp.received":{"description":"Number of received PUBCOMP packet","type":"integer"},"messages.dropped.expired":{"description":"Number of messages dropped due to message expiration when receiving","type":"integer"},"bytes.sent":{"description":"Number of bytes sent by EMQ X Broker on this connection","type":"integer"},"packets.unsubscribe.received":{"description":"Number of received UNSUBSCRIBE packet","type":"integer"},"client.connack":{"description":"Number of CONNACK packet sent","type":"integer"},"packets.pubcomp.missed":{"description":"Number of missed PUBCOMP packet","type":"integer"},"packets.publish.sent":{"description":"Number of sent PUBLISH packet","type":"integer"},"session.terminated":{"description":"Number of terminated sessions","type":"integer"},"packets.pubcomp.inuse":{"description":"Number of received PUBCOMP packet with occupied identifiers","type":"integer"},"packets.puback.received":{"description":"Number of received PUBACK packet","type":"integer"},"session.created":{"description":"Number of sessions created","type":"integer"},"packets.connack.auth_error":{"description":"Number of received CONNECT packet with failed authentication","type":"integer"},"client.unsubscribe":{"description":"Number of client unsubscriptions","type":"integer"},"messages.delayed":{"description":"Number of delay- published messages stored by EMQ X Broker","type":"integer"},"packets.puback.missed":{"description":"Number of received packet with identifiers.","type":"integer"},"packets.connect.received":{"description":"Number of received CONNECT packet","type":"integer"},"packets.sent":{"description":"Number of sent packet","type":"integer"},"session.discarded":{"description":"Number of sessions dropped because Clean Session or Clean Start is true","type":"integer"},"messages.publish":{"description":"Number of messages published in addition to system messages","type":"integer"},"delivery.dropped.queue_full":{"description":"Number of messages with a non-zero QoS that were dropped because the message queue was full when sending","type":"integer"},"client.authenticate":{"description":"Number of client authentications","type":"integer"},"rules.matched":{"description":"Number of rule matched","type":"integer"},"messages.qos1.received":{"description":"Number of QoS 1 messages received from clients","type":"integer"},"messages.qos1.sent":{"description":"Number of QoS 1 messages sent to clients","type":"integer"},"messages.retained":{"description":"Number of retained messages stored by EMQ X Broker","type":"integer"},"client.auth.anonymous":{"description":"Number of clients who log in anonymously","type":"integer"},"delivery.dropped":{"description":"Total number of discarded messages when sending","type":"integer"},"packets.publish.inuse":{"description":"Number of received PUBLISH packet with occupied identifiers","type":"integer"},"messages.acked":{"description":"Number of received PUBACK and PUBREC packet","type":"integer"},"messages.sent":{"description":"Number of messages sent to the client, equal to the sum of messages.qos0.sent\fmessages.qos1.sent and messages.qos2.sent","type":"integer"},"delivery.dropped.qos0_msg":{"description":"Number of messages with QoS 0 that were dropped because the message queue was full when sending","type":"integer"},"client.check_authz":{"description":"Number of Authorization rule checks","type":"integer"},"actions.failure":{"description":"Number of failure executions of the rule engine action","type":"integer"},"packets.unsuback.sent":{"description":"Number of sent UNSUBACK packet","type":"integer"},"packets.publish.error":{"description":"Number of received PUBLISH packet that cannot be published","type":"integer"},"packets.pubrec.inuse":{"description":"Number of received PUBREC packet with occupied identifiers","type":"integer"},"messages.delivered":{"description":"Number of messages forwarded to the subscription process internally by EMQ X Broker","type":"integer"},"messages.dropped.no_subscribers":{"description":"Number of messages dropped due to no subscribers","type":"integer"},"bytes.received":{"description":"Number of bytes received by EMQ X Broker","type":"integer"},"client.subscribe":{"description":"Number of client subscriptions","type":"integer"},"packets.connack.error":{"description":"Number of received CONNECT packet with unsuccessful connections","type":"integer"},"packets.publish.dropped":{"description":"Number of messages discarded due to the receiving limit","type":"integer"},"messages.qos0.sent":{"description":"Number of QoS 0 messages sent to clients","type":"integer"},"packets.pubrel.sent":{"description":"Number of sent PUBREL packet","type":"integer"},"packets.auth.sent":{"description":"Number of sent AUTH packet","type":"integer"},"delivery.dropped.expired":{"description":"Number of messages dropped due to message expiration on sending","type":"integer"},"messages.forward":{"description":"Number of messages forwarded to other nodes","type":"integer"},"packets.pubrec.received":{"description":"Number of received PUBREC packet","type":"integer"},"session.resumed":{"description":"Number of sessions resumed because Clean Session or Clean Start is false","type":"integer"},"packets.publish.auth_error":{"description":"Number of received PUBLISH packets with failed the Authorization check","type":"integer"},"packets.disconnect.received":{"description":"Number of received DISCONNECT packet","type":"integer"},"packets.pubrel.received":{"description":"Number of received PUBREL packet","type":"integer"},"messages.received":{"description":"Number of messages received from the client, equal to the sum of messages.qos0.received\fmessages.qos1.received and messages.qos2.received","type":"integer"},"client.connect":{"description":"Number of client connections","type":"integer"},"packets.suback.sent":{"description":"Number of sent SUBACK packet","type":"integer"},"packets.puback.inuse":{"description":"Number of received PUBACK packet with occupied identifiers","type":"integer"},"messages.dropped":{"description":"Total number of messages dropped by EMQ X Broker before forwarding to the subscription process","type":"integer"},"packets.pubrec.sent":{"description":"Number of sent PUBREC packet","type":"integer"},"delivery.dropped.too_large":{"description":"The number of messages that were dropped because the length exceeded the limit when sending","type":"integer"},"packets.subscribe.auth_error":{"description":"Number of received SUBACK packet with failed Authorization check","type":"integer"},"packets.connack.sent":{"description":"Number of sent CONNACK packet","type":"integer"},"packets.subscribe.received":{"description":"Number of received SUBSCRIBE packet","type":"integer"},"client.connected":{"description":"Number of successful client connections","type":"integer"},"client.disconnected":{"description":"Number of client disconnects","type":"integer"},"packets.subscribe.error":{"description":"Number of received SUBSCRIBE packet with failed subscriptions","type":"integer"},"messages.qos2.sent":{"description":"Number of QoS 2 messages sent to clients","type":"integer"},"actions.success":{"description":"Number of successful executions of the rule engine action","type":"integer"},"packets.pingreq.received":{"description":"Number of received PINGREQ packet","type":"integer"}},"type":"object"},"gateway.ssl_server_opts":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["tlsv1.3","tlsv1.2","tlsv1.1","tlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_CCM_SHA256","TLS_AES_128_CCM_8_SHA256","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"dhfile":{"description":"Path to a file containing PEM-encoded Diffie Hellman parameters\nto be used by the server if a cipher suite using Diffie Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br>\nNOTE: The dhfile option is not supported by TLS 1.3.","example":"string-example","type":"string"},"fail_if_no_peer_cert":{"default":false,"description":"\nUsed together with {verify, verify_peer} by an TLS/DTLS server.\nIf set to true, the server fails if the client does not have a\ncertificate to send, that is, sends an empty certificate.\nIf set to false, it fails only if the client sends an invalid\ncertificate (an empty certificate is considered valid).\n","example":true,"type":"boolean"},"honor_cipher_order":{"default":true,"example":true,"type":"boolean"},"client_renegotiation":{"default":true,"description":"\nIn protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.\n","example":true,"type":"boolean"},"handshake_timeout":{"default":"15s","description":"Maximum time duration allowed for the handshake to complete","example":"12m","type":"string"}},"type":"object"},"authz.mnesia":{"properties":{"type":{"enum":["built-in-database"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"authn-redis.standalone":{"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["redis"],"type":"string"},"query":{"example":"string-example","type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"server":{"example":"127.0.0.1:80","type":"string"},"redis_type":{"default":"single","enum":["single"],"type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"database":{"default":0,"example":100,"type":"integer"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"authn-builtin_db.other_algorithms":{"properties":{"name":{"enum":["plain","md5","sha","sha256","sha512"],"type":"string"}},"type":"object"},"gateway.mqttsn":{"properties":{"gateway_id":{"default":1,"description":"MQTT-SN Gateway Id.<br>\nWhen the <code>broadcast</code> option is enabled,\nthe gateway will broadcast ADVERTISE message with this value","example":100,"type":"integer"},"broadcast":{"default":false,"description":"Whether to periodically broadcast ADVERTISE messages","example":true,"type":"boolean"},"enable_qos3":{"default":true,"description":"Allows connectionless clients to publish messages with a Qos of -1.<br>\nThis feature is defined for very simple client implementations\nwhich do not support any other features except this one.<br>\nThere is no connection setup nor tear down, no registration nor subscription.<br>\nThe client just sends its PUBLISH messages to a GW","example":true,"type":"boolean"},"predefined":{"default":"","description":[84,104,101,32,80,114,101,45,100,101,102,105,110,101,100,32,116,111,112,105,99,32,105,100,115,32,97,110,100,32,116,111,112,105,99,32,110,97,109,101,115,46,60,98,114,62,10,65,32,39,112,114,101,45,100,101,102,105,110,101,100,39,32,116,111,112,105,99,32,105,100,32,105,115,32,97,32,116,111,112,105,99,32,105,100,32,119,104,111,115,101,32,109,97,112,112,105,110,103,32,116,111,32,97,32,116,111,112,105,99,32,110,97,109,101,10,105,115,32,107,110,111,119,110,32,105,110,32,97,100,118,97,110,99,101,32,98,121,32,98,111,116,104,32,116,104,101,32,99,108,105,101,110,116,8217,115,32,97,112,112,108,105,99,97,116,105,111,110,32,97,110,100,32,116,104,101,32,103,97,116,101,119,97,121],"items":{"$ref":"#/components/schemas/gateway.mqttsn_predefined"},"type":"array"},"listeners":{"$ref":"#/components/schemas/gateway.udp_listeners"},"enable":{"default":true,"description":"Whether to enable this gateway","example":true,"type":"boolean"},"enable_stats":{"default":true,"description":"Whether to enable client process statistic","example":true,"type":"boolean"},"idle_timeout":{"default":"30s","description":"The idle time of the client connection process.<br>\nit has two purposes:\n1. A newly created client process that does not receive any client requests\n   after that time will be closed directly.\n2. A running client process that does not receive any client requests after\n   this time will go into hibernation to save resources.","example":"12m","type":"string"},"mountpoint":{"default":"","description":"","example":"binary-example","type":"string"},"clientinfo_override":{"description":"","$ref":"#/components/schemas/gateway.clientinfo_override"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}},"type":"object"},"gateway.udp_tcp_listeners":{"properties":{"udp":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.udp_listener"}},"type":"object"},"dtls":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.dtls_listener"}},"type":"object"},"tcp":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.tcp_listener"}},"type":"object"},"ssl":{"properties":{"$name":{"$ref":"#/components/schemas/gateway.ssl_listener"}},"type":"object"}},"type":"object"},"redis_cluster":{"properties":{"auto_reconnect":{"example":true,"type":"boolean"},"cmd":{"example":"HGETALL mqtt_authz","type":"string"},"database":{"type":"integer"},"enable":{"example":true,"type":"boolean"},"password":{"type":"string"},"pool_size":{"type":"integer"},"redis_type":{"enum":["cluster"],"example":"cluster","type":"string"},"servers":{"items":{"example":"127.0.0.1:3306","type":"string"},"type":"array"},"ssl":{"$ref":"#/components/schemas/ssl"},"type":{"enum":["redis"],"example":"redis","type":"string"}},"required":["type","enable","cmd","servers","redis_type","pool_size","auto_reconnect","ssl"],"type":"object"},"emqx_limiter_schema.bucket":{"properties":{"zone":{"description":"the zone which the bucket in","example":"atom","type":"string"},"aggregated":{"example":"10M/s, 100M","type":"string"},"per_client":{"example":"10M/s, 100M","type":"string"}},"type":"object"},"emqx_retainer_schema.flow_control":{"properties":{"max_read_number":{"default":0,"example":100,"type":"integer"},"msg_deliver_quota":{"default":0,"example":100,"type":"integer"},"quota_release_interval":{"default":"0ms","example":"32s","type":"string"}},"type":"object"},"authn-http.get":{"required":["url"],"properties":{"method":{"default":"post","enum":["get"],"type":"string"},"headers":{"default":{"accept":"application/json","cache-control":"no-cache","connection":"keep-alive","keep-alive":"timeout=5"},"example":{},"type":"object"},"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["http"],"type":"string"},"url":{"example":"binary-example","type":"string"},"body":{"example":{},"type":"object"},"request_timeout":{"default":"5s","example":"32s","type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"connect_timeout":{"default":"30s","description":"The timeout when connecting to the HTTP server","example":"32s","type":"string"},"enable_pipelining":{"default":true,"description":"Enable the HTTP pipeline","example":true,"type":"boolean"},"max_retries":{"default":5,"description":"Max retry times if error on sending request","example":100,"minimum":1,"type":"integer"},"pool_size":{"default":8,"description":"The pool size","example":100,"minimum":1,"type":"integer"},"request":{"description":"\nIf the request is provided, the caller can send HTTP requests via\n<code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code>\n","$ref":"#/components/schemas/emqx_connector_http.request"},"retry_interval":{"default":"1s","description":"Interval before next retry if error on sending request","example":"12m","type":"string"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_authn_api.request_user_create":{"properties":{"user_id":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"is_superuser":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.mqtt_wss_listener":{"required":["bind"],"properties":{"tcp":{"$ref":"#/components/schemas/emqx_schema.tcp_opts"},"ssl":{"$ref":"#/components/schemas/emqx_schema.listener_wss_opts"},"websocket":{"$ref":"#/components/schemas/emqx_schema.ws_opts"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"acceptors":{"default":16,"example":100,"type":"integer"},"max_connections":{"default":"infinity","oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"mountpoint":{"default":"","example":"binary-example","type":"string"},"zone":{"default":"default","example":"atom","type":"string"},"access_rules":{"items":{"example":"string-example","type":"string"},"type":"array"},"proxy_protocol":{"default":false,"example":true,"type":"boolean"},"proxy_protocol_timeout":{"example":"12m","type":"string"},"authentication":{"description":"Per-listener authentication override<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}},"type":"object"},"modules.rewrite":{"properties":{"action":{"description":"Action","enum":["subscribe","publish","all"],"example":"publish","type":"string"},"source_topic":{"description":"Origin Topic","example":"x/#","type":"string"},"dest_topic":{"description":"Destination Topic","example":"z/y/$1","type":"string"},"re":{"description":"Regular expressions","example":"^x/y/(.+)$","type":"string"}},"type":"object"},"emqx_retainer_schema.mnesia_config":{"properties":{"type":{"oneOf":[{"enum":["built_in_database"],"type":"string"}]},"storage_type":{"default":"ram","oneOf":[{"enum":["disc_only"],"type":"string"},{"enum":["disc"],"type":"string"},{"enum":["ram"],"type":"string"}]},"max_retained_messages":{"default":0,"example":100,"type":"integer"}},"type":"object"},"rule_engine.republish_args":{"required":["topic"],"properties":{"topic":{"description":"\nThe target topic of message to be re-published.<br>\nTemplate with variables is allowed, see description of the 'republish_args'.\n","example":"binary-example","type":"string"},"qos":{"default":"${qos}","description":"\nThe qos of the message to be re-published.\nTemplate with with variables is allowed, see description of the 'republish_args.<br>\nDefaults to ${qos}. If variable ${qos} is not found from the selected result of the rule,\n0 is used.\n","example":"binary-example","type":"string"},"retain":{"default":"${retain}","description":"\nThe retain flag of the message to be re-published.\nTemplate with with variables is allowed, see description of the 'republish_args.<br>\nDefaults to ${retain}. If variable ${retain} is not found from the selected result\nof the rule, false is used.\n","example":"binary-example","type":"string"},"payload":{"default":"${payload}","description":"\nThe payload of the message to be re-published.\nTemplate with with variables is allowed, see description of the 'republish_args.<br>.\nDefaults to ${payload}. If variable ${payload} is not found from the selected result\nof the rule, then the string \"undefined\" is used.\n","example":"binary-example","type":"string"}},"type":"object"},"modules.telemetry":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.mqtt_tcp_listener":{"required":["bind"],"properties":{"tcp":{"description":"TCP listener options","$ref":"#/components/schemas/emqx_schema.tcp_opts"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"acceptors":{"default":16,"example":100,"type":"integer"},"max_connections":{"default":"infinity","oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"mountpoint":{"default":"","example":"binary-example","type":"string"},"zone":{"default":"default","example":"atom","type":"string"},"access_rules":{"items":{"example":"string-example","type":"string"},"type":"array"},"proxy_protocol":{"default":false,"example":true,"type":"boolean"},"proxy_protocol_timeout":{"example":"12m","type":"string"},"authentication":{"description":"Per-listener authentication override<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}},"type":"object"},"emqx_schema.broker":{"properties":{"sys_msg_interval":{"default":"1m","oneOf":[{"example":"12m","type":"string"},{"enum":["disabled"],"type":"string"}]},"sys_heartbeat_interval":{"default":"30s","oneOf":[{"example":"12m","type":"string"},{"enum":["disabled"],"type":"string"}]},"enable_session_registry":{"default":true,"example":true,"type":"boolean"},"session_locking_strategy":{"default":"quorum","enum":["local","leader","quorum","all"],"type":"string"},"shared_subscription_strategy":{"default":"round_robin","enum":["random","round_robin"],"type":"string"},"shared_dispatch_ack_enabled":{"default":false,"example":true,"type":"boolean"},"route_batch_clean":{"default":true,"example":true,"type":"boolean"},"perf":{"description":"Broker performance tuning pamaters","$ref":"#/components/schemas/emqx_schema.broker_perf"}},"type":"object"},"emqx_gateway_api_listeners.ssl_listener_opts":{"properties":{"cacertfile":{"example":"binary-example","type":"string"},"certfile":{"example":"binary-example","type":"string"},"keyfile":{"example":"binary-example","type":"string"},"verify":{"example":"binary-example","type":"string"},"fail_if_no_peer_cert":{"example":true,"type":"boolean"},"server_name_indication":{"example":true,"type":"boolean"},"depth":{"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"handshake_timeout":{"example":"binary-example","type":"string"},"versions":{"items":{"example":"binary-example","type":"string"},"type":"array"},"ciphers":{"items":{"example":"binary-example","type":"string"},"type":"array"},"user_lookup_fun":{"example":"binary-example","type":"string"},"reuse_sessions":{"example":true,"type":"boolean"},"secure_renegotiate":{"example":true,"type":"boolean"},"honor_cipher_order":{"example":true,"type":"boolean"},"dhfile":{"example":"binary-example","type":"string"}},"type":"object"},"emqx_authn_api.request_move":{"properties":{"position":{"example":"binary-example","type":"string"}},"type":"object"},"emqx_authz_api_mnesia.clientid_response_data":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_clientid"},"type":"array"},"meta":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.meta"}},"type":"object"},"modules.delayed":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"max_delayed_messages":{"example":100,"type":"integer"}},"type":"object"},"emqx_schema.mqtt_ws_listener":{"required":["bind"],"properties":{"tcp":{"$ref":"#/components/schemas/emqx_schema.tcp_opts"},"websocket":{"$ref":"#/components/schemas/emqx_schema.ws_opts"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"acceptors":{"default":16,"example":100,"type":"integer"},"max_connections":{"default":"infinity","oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"mountpoint":{"default":"","example":"binary-example","type":"string"},"zone":{"default":"default","example":"atom","type":"string"},"access_rules":{"items":{"example":"string-example","type":"string"},"type":"array"},"proxy_protocol":{"default":false,"example":true,"type":"boolean"},"proxy_protocol_timeout":{"example":"12m","type":"string"},"authentication":{"description":"Per-listener authentication override<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}},"type":"object"},"redis_single":{"properties":{"auto_reconnect":{"example":true,"type":"boolean"},"cmd":{"example":"HGETALL mqtt_authz","type":"string"},"database":{"type":"integer"},"enable":{"example":true,"type":"boolean"},"password":{"type":"string"},"pool_size":{"type":"integer"},"redis_type":{"enum":["single"],"example":"single","type":"string"},"server":{"example":"127.0.0.1:3306","type":"string"},"ssl":{"$ref":"#/components/schemas/ssl"},"type":{"enum":["redis"],"example":"redis","type":"string"}},"required":["type","enable","cmd","server","redis_type","pool_size","auto_reconnect","ssl"],"type":"object"},"emqx_delayed_api.message_without_payload":{"properties":{"msgid":{"description":"Message Id (MQTT message id hash)","example":100,"type":"integer"},"publish_at":{"description":"Client publish message time, rfc 3339","example":"binary-example","type":"string"},"delayed_interval":{"description":"Delayed interval, second","example":100,"type":"integer"},"delayed_remaining":{"description":"Delayed remaining, second","example":100,"type":"integer"},"expected_at":{"description":"Expect publish time, rfc 3339","example":"binary-example","type":"string"},"topic":{"description":"Topic","example":"/sys/#","type":"string"},"qos":{"description":"QoS","example":"binary-example","type":"string"},"from_clientid":{"description":"From ClientId","example":"binary-example","type":"string"},"from_username":{"description":"From Username","example":"binary-example","type":"string"}},"type":"object"},"emqx_conf_schema.db":{"properties":{"backend":{"default":"mnesia","description":"\nSelect the backend for the embedded database.<br/>\n<strong>Important!</strong> This setting should be the same on all nodes in the cluster.<br/>\n<strong>Important!</strong> Changing this setting in the runtime is not allowed.<br/>\n<code>mnesia</code> is the default backend, that offers decent performance in small clusters.<br/>\n<code>rlog</code> is a new experimantal backend that is suitable for very large clusters.\n","enum":["mnesia","rlog"],"type":"string"},"role":{"default":"core","description":"\nSelect a node role.<br/>\n<code>core</code> nodes provide durability of the data, and take care of writes.\nIt is recommended to place core nodes in different racks or different availability zones.<br/>\n<code>replicant</code> nodes are ephemeral worker nodes. Removing them from the cluster\ndoesn't affect database redundancy<br/>\nIt is recommended to have more replicant nodes than core nodes.<br/>\nNote: this parameter only takes effect when the <code>backend</code> is set\nto <code>rlog</code>.\n","enum":["core","replicant"],"type":"string"},"core_nodes":{"default":"","description":"\nList of core nodes that the replicant will connect to.<br/>\nNote: this parameter only takes effect when the <code>backend</code> is set\nto <code>rlog</code> and the <code>role</code> is set to <code>replicant</code>.\n","example":"item1,item2","type":"string"}},"type":"object"},"authn-jwt.ssl_disable":{"properties":{"enable":{"enum":[false],"type":"string"}},"type":"object"},"authz.file":{"properties":{"type":{"enum":["file"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"path":{"description":"\nPath to the file which contains the ACL rules.<br>\nIf the file provisioned before starting EMQ X node, it can be placed anywhere\nas long as EMQ X has read access to it.\nIn case rule set is created from EMQ X dashboard or management HTTP API,\nthe file will be placed in `certs/authz` sub directory inside EMQ X's `data_dir`,\nand the new rules will override all rules from the old config file.\n","example":"string-example","type":"string"}},"type":"object"},"emqx_conf_schema.cluster_call":{"properties":{"retry_interval":{"default":"1s","description":"Time interval to retry after a failed call.","example":"12m","type":"string"},"max_history":{"default":100,"description":"Retain the maximum number of completed transactions (for queries).","example":1,"maximum":500,"minimum":1,"type":"integer"},"cleanup_interval":{"default":"5m","description":"Time interval to clear completed but stale transactions.\nEnsure that the number of completed transactions is less than the max_history.","example":"12m","type":"string"}},"type":"object"},"gateway.ssl_client_opts":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["tlsv1.3","tlsv1.2","tlsv1.1","tlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_CCM_SHA256","TLS_AES_128_CCM_8_SHA256","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"server_name_indication":{"default":"disable","description":"Specify the host name to be used in TLS Server Name Indication extension.<br>\nFor instance, when connecting to \"server.example.net\", the genuine server\nwhich accedpts the connection and performs TLS handshake may differ from the\nhost the TLS client initially connects to, e.g. when connecting to an IP address\nor when the host has multiple resolvable DNS records <br>\nIf not specified, it will default to the host name string which is used\nto establish the connection, unless it is IP addressed used.<br>\nThe host name is then also used in the host name verification of the peer\ncertificate.<br> The special value 'disable' prevents the Server Name\nIndication extension from being sent and disables the hostname\nverification check.","oneOf":[{"example":"string-example","type":"string"},{"enum":["disable"],"type":"string"}]}},"type":"object"},"redis_sentinel":{"properties":{"auto_reconnect":{"example":true,"type":"boolean"},"cmd":{"example":"HGETALL mqtt_authz","type":"string"},"database":{"type":"integer"},"enable":{"example":true,"type":"boolean"},"password":{"type":"string"},"pool_size":{"type":"integer"},"redis_type":{"enum":["sentinel"],"example":"sentinel","type":"string"},"sentinel":{"type":"string"},"servers":{"items":{"example":"127.0.0.1:3306","type":"string"},"type":"array"},"ssl":{"$ref":"#/components/schemas/ssl"},"type":{"enum":["redis"],"example":"redis","type":"string"}},"required":["type","enable","cmd","servers","redis_type","sentinel","pool_size","auto_reconnect","ssl"],"type":"object"},"emqx_schema.flapping_detect":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"max_count":{"default":15,"example":100,"type":"integer"},"window_time":{"default":"1m","example":"12m","type":"string"},"ban_time":{"default":"5m","example":"12m","type":"string"}},"type":"object"},"stats_info":{"oneOf":[{"$ref":"#/components/schemas/stats"},{"$ref":"#/components/schemas/stat"}]},"metrics_info":{"oneOf":[{"$ref":"#/components/schemas/metric"},{"$ref":"#/components/schemas/metrics"}]},"http":{"properties":{"body":{"type":"object"},"connect_timeout":{"type":"string"},"enable":{"example":true,"type":"boolean"},"enable_pipelining":{"type":"boolean"},"headers":{"type":"object"},"max_retries":{"type":"integer"},"method":{"enum":["get","post"],"example":"get","type":"string"},"pool_size":{"type":"integer"},"pool_type":{"enum":["random","hash"],"example":"hash","type":"string"},"retry_interval":{"type":"string"},"ssl":{"$ref":"#/components/schemas/ssl"},"type":{"enum":["http"],"example":"http","type":"string"},"url":{"example":"https://emqx.com","type":"string"}},"required":["type","enable","method","headers","request_timeout","connect_timeout","max_retries","retry_interval","pool_type","pool_size","enable_pipelining","ssl"],"type":"object"},"auto_subscribe.topic":{"properties":{"topic":{"example":"binary-example","type":"string"},"qos":{"default":0,"oneOf":[{"default":2,"enum":[2],"example":2,"type":"integer"},{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]},"rh":{"default":0,"oneOf":[{"default":2,"enum":[2],"example":2,"type":"integer"},{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]},"rap":{"default":0,"oneOf":[{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]},"nl":{"default":0,"oneOf":[{"default":1,"enum":[1],"example":1,"type":"integer"},{"default":0,"enum":[0],"example":0,"type":"integer"}]}},"type":"object"},"emqx_schema.force_gc":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"},"count":{"default":16000,"example":0,"minimum":0,"type":"integer"},"bytes":{"default":"16MB","example":"32MB","type":"string"}},"type":"object"},"authn-mysql.config":{"required":["database","server"],"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["mysql"],"type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"query":{"example":"string-example","type":"string"},"query_timeout":{"default":"5s","example":"32s","type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"server":{"example":"127.0.0.1:80","type":"string"},"database":{"example":"binary-example","type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"emqx_psk_schema.psk":{"properties":{"enable":{"default":false,"description":"Whether to enable tls psk support","example":true,"type":"boolean"},"init_file":{"description":"If init_file is specified, emqx will import PSKs from the file into the built-in database at startup for use by the runtime. The file has to be structured line-by-line, each line must be in the format: <PSKIdentity>:<SharedSecret>","example":"binary-example","type":"string"},"separator":{"default":":","description":"The separator between PSKIdentity and SharedSecret in the psk file","example":"binary-example","type":"string"},"chunk_size":{"default":50,"description":"The size of each chunk used to import to the built-in database from psk file","example":100,"type":"integer"}},"type":"object"},"emqx_conf_schema.log_burst_limit":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"},"max_count":{"default":10000,"example":100,"type":"integer"},"window_time":{"default":"1s","example":"12m","type":"string"}},"type":"object"},"authn-redis.sentinel":{"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["redis"],"type":"string"},"query":{"example":"string-example","type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"servers":{"items":{"example":"127.0.0.1:80","type":"string"},"type":"array"},"redis_type":{"default":"sentinel","enum":["sentinel"],"type":"string"},"sentinel":{"example":"string-example","type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"database":{"default":0,"example":100,"type":"integer"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"gateway.exproto_grpc_handler":{"properties":{"address":{"example":"binary-example","type":"string"},"ssl":{"$ref":"#/components/schemas/gateway.ssl_client_opts"}},"type":"object"},"dashboard.emqx_dashboard":{"required":["default_password","default_username"],"properties":{"listeners":{"items":{"oneOf":[{"$ref":"#/components/schemas/dashboard.https"},{"$ref":"#/components/schemas/dashboard.http"}]},"type":"array"},"default_username":{"default":"admin","example":"string-example","type":"string"},"default_password":{"default":"public","description":"\nThe initial default password for dashboard 'admin' user.\nFor safty, it should be changed as soon as possible.","example":"string-example","type":"string"},"sample_interval":{"default":"10s","example":"1h","type":"string"},"token_expired_time":{"default":"30m","example":"12m","type":"string"},"cors":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"subscription":{"properties":{"clientid":{"type":"string"},"node":{"type":"string"},"qos":{"description":"","enum":[0,1,2],"type":"integer"},"topic":{"type":"string"}},"type":"object"},"postgresql":{"properties":{"auto_reconnect":{"example":true,"type":"boolean"},"database":{"type":"string"},"enable":{"example":true,"type":"boolean"},"password":{"type":"string"},"pool_size":{"type":"integer"},"query":{"type":"string"},"server":{"example":"127.0.0.1:5432","type":"string"},"ssl":{"$ref":"#/components/schemas/ssl"},"type":{"enum":["postgresql"],"example":"postgresql","type":"string"},"username":{"type":"string"}},"required":["type","enable","query","server","database","pool_size","username","password","auto_reconnect","ssl"],"type":"object"},"emqx_schema.tcp_opts":{"properties":{"active_n":{"default":100,"example":100,"type":"integer"},"backlog":{"default":1024,"example":100,"type":"integer"},"send_timeout":{"default":"15s","example":"12m","type":"string"},"send_timeout_close":{"default":true,"example":true,"type":"boolean"},"recbuf":{"example":"32MB","type":"string"},"sndbuf":{"example":"32MB","type":"string"},"buffer":{"example":"32MB","type":"string"},"high_watermark":{"default":"1MB","example":"32MB","type":"string"},"nodelay":{"default":false,"example":true,"type":"boolean"},"reuseaddr":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_mgmt_api_configs.rpc":{"properties":{"mode":{"default":"async","enum":["sync","async"],"type":"string"},"async_batch_size":{"default":256,"example":100,"type":"integer"},"port_discovery":{"default":"stateless","enum":["manual","stateless"],"type":"string"},"tcp_server_port":{"default":5369,"example":100,"type":"integer"},"tcp_client_num":{"default":1,"example":1,"maximum":256,"minimum":1,"type":"integer"},"connect_timeout":{"default":"5s","example":"12m","type":"string"},"send_timeout":{"default":"5s","example":"12m","type":"string"},"authentication_timeout":{"default":"5s","example":"12m","type":"string"},"call_receive_timeout":{"default":"15s","example":"12m","type":"string"},"socket_keepalive_idle":{"default":"7200s","example":"1h","type":"string"},"socket_keepalive_interval":{"default":"75s","example":"1h","type":"string"},"socket_keepalive_count":{"default":9,"example":100,"type":"integer"},"socket_sndbuf":{"default":"1MB","example":"32MB","type":"string"},"socket_recbuf":{"default":"1MB","example":"32MB","type":"string"},"socket_buffer":{"default":"1MB","example":"32MB","type":"string"}},"type":"object"},"emqx_bridge_schema.http_bridge":{"required":["url"],"properties":{"connect_timeout":{"default":"30s","description":"The timeout when connecting to the HTTP server","example":"32s","type":"string"},"max_retries":{"default":5,"description":"Max retry times if error on sending request","example":100,"minimum":1,"type":"integer"},"retry_interval":{"default":"1s","description":"Interval before next retry if error on sending request","example":"12m","type":"string"},"pool_type":{"default":"random","description":"The type of the pool. Canbe one of random, hash","enum":["random","hash"],"example":"hash","type":"string"},"pool_size":{"default":8,"description":"The pool size","example":100,"minimum":1,"type":"integer"},"enable_pipelining":{"default":true,"description":"Enable the HTTP pipeline","example":true,"type":"boolean"},"request":{"description":"\nIf the request is provided, the caller can send HTTP requests via\n<code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code>\n","$ref":"#/components/schemas/emqx_connector_http.request"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"},"url":{"description":"\nThe URL of the HTTP Bridge.<br>\nTemplate with variables is allowed in the path, but variables cannot be used in the scheme, host,\nor port part.<br>\nFor example, <code> http://localhost:9901/${topic} </code> is allowed, but\n<code> http://${host}:9901/message </code> or <code> http://localhost:${port}/message </code>\nis not allowed.\n","example":"binary-example","type":"string"},"from_local_topic":{"description":"\nThe MQTT topic filter to be forwarded to the HTTP server. All MQTT PUBLISH messages which topic\nmatch the from_local_topic will be forwarded.<br>\nNOTE: if this bridge is used as the output of a rule (emqx rule engine), and also from_local_topic is configured, then both the data got from the rule and the MQTT messages that matches\nfrom_local_topic will be forwarded.\n","example":"binary-example","type":"string"},"method":{"default":"post","description":"\nThe method of the HTTP request. All the available methods are: post, put, get, delete.<br>\nTemplate with variables is allowed.<br>\n","enum":["post","put","get","delete"],"type":"string"},"headers":{"default":{"accept":"application/json","cache-control":"no-cache","connection":"keep-alive","content-type":"application/json","keep-alive":"timeout=5"},"description":"\nThe headers of the HTTP request.<br>\nTemplate with variables is allowed.\n","example":{},"type":"object"},"body":{"default":"${payload}","description":"\nThe body of the HTTP request.<br>\nTemplate with variables is allowed.\n","example":"binary-example","type":"string"},"request_timeout":{"default":"30s","description":"\nHow long will the HTTP request timeout.\n","example":"32s","type":"string"}},"type":"object"},"gateway.stomp":{"properties":{"frame":{"$ref":"#/components/schemas/gateway.stomp_frame"},"listeners":{"$ref":"#/components/schemas/gateway.tcp_listeners"},"enable":{"default":true,"description":"Whether to enable this gateway","example":true,"type":"boolean"},"enable_stats":{"default":true,"description":"Whether to enable client process statistic","example":true,"type":"boolean"},"idle_timeout":{"default":"30s","description":"The idle time of the client connection process.<br>\nit has two purposes:\n1. A newly created client process that does not receive any client requests\n   after that time will be closed directly.\n2. A running client process that does not receive any client requests after\n   this time will go into hibernation to save resources.","example":"12m","type":"string"},"mountpoint":{"default":"","description":"","example":"binary-example","type":"string"},"clientinfo_override":{"description":"","$ref":"#/components/schemas/gateway.clientinfo_override"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}},"type":"object"},"authn-jwt.jwks":{"properties":{"use_jwks":{"enum":[true],"type":"string"},"endpoint":{"example":"string-example","type":"string"},"refresh_interval":{"default":300,"example":100,"type":"integer"},"ssl":{"default":{"enable":false},"oneOf":[{"$ref":"#/components/schemas/authn-jwt.ssl_disable"},{"$ref":"#/components/schemas/authn-jwt.ssl_enable"}]},"mechanism":{"enum":["jwt"],"type":"string"},"verify_claims":{"default":{},"items":{"example":[116,101,114,109],"type":"string"},"type":"array"},"enable":{"default":true,"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.deflate_opts":{"properties":{"level":{"enum":["none","default","best_compression","best_speed"],"type":"string"},"mem_level":{"default":8,"example":1,"maximum":9,"minimum":1,"type":"integer"},"strategy":{"enum":["default","filtered","huffman_only","rle"],"type":"string"},"server_context_takeover":{"enum":["takeover","no_takeover"],"type":"string"},"client_context_takeover":{"enum":["takeover","no_takeover"],"type":"string"},"server_max_window_bits":{"default":15,"example":8,"maximum":15,"minimum":8,"type":"integer"},"client_max_window_bits":{"default":15,"example":8,"maximum":15,"minimum":8,"type":"integer"}},"type":"object"},"authz.http_post":{"properties":{"type":{"enum":["http"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"url":{"example":"http://127.0.0.1","type":"string"},"method":{"default":"get","enum":["post"],"type":"string"},"headers":{"default":{"accept":"application/json","cache-control":"no-cache","connection":"keep-alive","content-type":"application/json","keep-alive":"timeout=5"},"example":{},"type":"object"},"request_timeout":{"default":"30s","description":"request timeout Time span. A text string with number followed by time units:\n                    `ms` for milli-seconds,\n                    `s` for seconds,\n                    `m` for minutes,\n                    `h` for hours;\n                    or combined representation like `1h5m0s`","example":"string-example","type":"string"},"body":{"example":{},"type":"object"},"connect_timeout":{"default":"30s","description":"The timeout when connecting to the HTTP server","example":"32s","type":"string"},"max_retries":{"default":5,"description":"Max retry times if error on sending request","example":100,"minimum":1,"type":"integer"},"retry_interval":{"default":"1s","description":"Interval before next retry if error on sending request","example":"12m","type":"string"},"pool_type":{"default":"random","description":"The type of the pool. Canbe one of random, hash","enum":["random","hash"],"example":"hash","type":"string"},"pool_size":{"default":8,"description":"The pool size","example":100,"minimum":1,"type":"integer"},"enable_pipelining":{"default":true,"description":"Enable the HTTP pipeline","example":true,"type":"boolean"},"request":{"description":"\nIf the request is provided, the caller can send HTTP requests via\n<code>emqx_resource:query(ResourceId, {send_message, BridgeId, Message})</code>\n","$ref":"#/components/schemas/emqx_connector_http.request"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"authz.mysql":{"required":["database","server"],"properties":{"type":{"enum":["mysql"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"server":{"example":"127.0.0.1:80","type":"string"},"database":{"example":"binary-example","type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"},"query":{"example":"binary-example","type":"string"}},"type":"object"},"stats":{"items":{"properties":{"channels.count":{"description":"sessions.count","type":"integer"},"channels.max":{"description":"session.max","type":"integer"},"connections.count":{"description":"Number of current connections","type":"integer"},"connections.max":{"description":"Historical maximum number of connections","type":"integer"},"node":{"type":"string"},"retained.count":{"description":"Number of currently retained messages","type":"integer"},"retained.max":{"description":"Historical maximum number of retained messages","type":"integer"},"routes.count":{"description":"Number of current routes","type":"integer"},"routes.max":{"description":"Historical maximum number of routes","type":"integer"},"sessions.count":{"description":"Number of current sessions","type":"integer"},"sessions.max":{"description":"Historical maximum number of sessions","type":"integer"},"suboptions.count":{"description":"subscriptions.count","type":"integer"},"suboptions.max":{"description":"subscriptions.max","type":"integer"},"subscribers.count":{"description":"Number of current subscribers","type":"integer"},"subscribers.max":{"description":"Historical maximum number of subscribers","type":"integer"},"subscriptions.count":{"description":"Number of current subscriptions, including shared subscriptions","type":"integer"},"subscriptions.max":{"description":"Historical maximum number of subscriptions","type":"integer"},"subscriptions.shared.count":{"description":"Number of current shared subscriptions","type":"integer"},"subscriptions.shared.max":{"description":"Historical maximum number of shared subscriptions","type":"integer"},"topics.count":{"description":"Number of current topics","type":"integer"},"topics.max":{"description":"Historical maximum number of topics","type":"integer"}},"type":"object"},"type":"array"},"emqx_connector_mongo.topology":{"properties":{"pool_size":{"default":8,"example":100,"type":"integer"},"max_overflow":{"default":8,"example":100,"type":"integer"},"overflow_ttl":{"example":"32s","type":"string"},"overflow_check_period":{"example":"32s","type":"string"},"local_threshold_ms":{"example":"32s","type":"string"},"connect_timeout_ms":{"example":"32s","type":"string"},"socket_timeout_ms":{"example":"32s","type":"string"},"server_selection_timeout_ms":{"example":"32s","type":"string"},"wait_queue_timeout_ms":{"example":"32s","type":"string"},"heartbeat_frequency_ms":{"example":"32s","type":"string"},"min_heartbeat_frequency_ms":{"example":"32s","type":"string"}},"type":"object"},"gateway.exproto":{"properties":{"server":{"description":"Configurations for starting the <code>ConnectionAdapter</code> service","$ref":"#/components/schemas/gateway.exproto_grpc_server"},"handler":{"description":"Configurations for request to <code>ConnectionHandler</code> service","$ref":"#/components/schemas/gateway.exproto_grpc_handler"},"listeners":{"$ref":"#/components/schemas/gateway.udp_tcp_listeners"},"enable":{"default":true,"description":"Whether to enable this gateway","example":true,"type":"boolean"},"enable_stats":{"default":true,"description":"Whether to enable client process statistic","example":true,"type":"boolean"},"idle_timeout":{"default":"30s","description":"The idle time of the client connection process.<br>\nit has two purposes:\n1. A newly created client process that does not receive any client requests\n   after that time will be closed directly.\n2. A running client process that does not receive any client requests after\n   this time will go into hibernation to save resources.","example":"12m","type":"string"},"mountpoint":{"default":"","description":"","example":"binary-example","type":"string"},"clientinfo_override":{"description":"","$ref":"#/components/schemas/gateway.clientinfo_override"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}},"type":"object"},"authz.mongo_rs":{"required":["database"],"properties":{"collection":{"example":"atom","type":"string"},"selector":{"example":{},"type":"object"},"type":{"enum":["mongodb"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"mongo_type":{"default":"rs","enum":["rs"],"type":"string"},"servers":{"example":"binary-example","type":"string"},"replica_set_name":{"example":"binary-example","type":"string"},"srv_record":{"default":false,"example":true,"type":"boolean"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auth_source":{"example":"binary-example","type":"string"},"database":{"example":"binary-example","type":"string"},"topology":{"$ref":"#/components/schemas/emqx_connector_mongo.topology"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"},"exhook.exhook":{"properties":{"request_failed_action":{"default":"deny","enum":["deny","ignore"],"type":"string"},"request_timeout":{"default":"5s","example":"12m","type":"string"},"auto_reconnect":{"default":"60s","oneOf":[{"example":"12m","type":"string"},{"enum":[false],"type":"string"}]},"servers":{"default":"","items":{"$ref":"#/components/schemas/exhook.servers"},"type":"array"}},"type":"object"},"mysql":{"properties":{"auto_reconnect":{"example":true,"type":"boolean"},"database":{"type":"string"},"enable":{"example":true,"type":"boolean"},"password":{"type":"string"},"pool_size":{"type":"integer"},"query":{"type":"string"},"server":{"example":"127.0.0.1:3306","type":"string"},"ssl":{"$ref":"#/components/schemas/ssl"},"type":{"enum":["mysql"],"example":"mysql","type":"string"},"username":{"type":"string"}},"required":["type","enable","query","server","database","pool_size","username","password","auto_reconnect","ssl"],"type":"object"},"emqx_conf_schema.log_overload_kill":{"properties":{"enable":{"default":true,"example":true,"type":"boolean"},"mem_size":{"default":"30MB","example":"32MB","type":"string"},"qlen":{"default":20000,"example":100,"type":"integer"},"restart_after":{"default":"5s","oneOf":[{"enum":["infinity"],"type":"string"},{"example":"12m","type":"string"}]}},"type":"object"},"gateway.ssl_listener":{"properties":{"acceptors":{"default":16,"example":100,"type":"integer"},"tcp":{"$ref":"#/components/schemas/emqx_schema.tcp_opts"},"proxy_protocol":{"default":false,"example":true,"type":"boolean"},"proxy_protocol_timeout":{"default":"15s","example":"12m","type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"max_connections":{"default":1024,"example":100,"type":"integer"},"max_conn_rate":{"default":1000,"example":100,"type":"integer"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"mountpoint":{"example":"binary-example","type":"string"},"access_rules":{"default":"","items":{"example":"string-example","type":"string"},"type":"array"},"ssl":{"description":"SSL listener options","$ref":"#/components/schemas/emqx_schema.listener_ssl_opts"}},"type":"object"},"mongo_single":{"properties":{"auth_source":{"type":"string"},"collection":{"type":"string"},"database":{"type":"string"},"enable":{"example":true,"type":"boolean"},"mongo_type":{"enum":["single"],"example":"single","type":"string"},"password":{"type":"string"},"pool_size":{"type":"integer"},"selector":{"type":"object"},"server":{"example":"127.0.0.1:27017","type":"string"},"srv_record":{"default":false,"example":false,"type":"boolean"},"ssl":{"$ref":"#/components/schemas/ssl"},"topology":{"properties":{"connect_timeout_ms":{"type":"integer"},"heartbeat_frequency_ms":{"type":"integer"},"local_threshold_ms":{"type":"integer"},"max_overflow":{"type":"integer"},"min_heartbeat_frequency_ms":{"type":"integer"},"overflow_check_period":{"type":"string"},"overflow_ttl":{"type":"string"},"pool_size":{"type":"integer"},"server_selection_timeout_ms":{"type":"integer"},"socket_timeout_ms":{"type":"integer"},"wait_queue_timeout_ms":{"type":"integer"}},"type":"object"},"type":{"enum":["mongodb"],"example":"mongodb","type":"string"},"username":{"type":"string"}},"required":["type","enable","collection","selector","mongo_type","server","pool_size","username","password","auth_source","database","topology","ssl"],"type":"object"},"emqx_authn_api.request_user_update":{"properties":{"password":{"example":"binary-example","type":"string"},"is_superuser":{"default":false,"example":true,"type":"boolean"}},"type":"object"},"gateway.dtls_listener":{"properties":{"acceptors":{"default":16,"example":100,"type":"integer"},"udp":{"$ref":"#/components/schemas/gateway.udp_opts"},"enable":{"default":true,"example":true,"type":"boolean"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"max_connections":{"default":1024,"example":100,"type":"integer"},"max_conn_rate":{"default":1000,"example":100,"type":"integer"},"authentication":{"description":"Default authentication configs for all of the gateway listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"mountpoint":{"example":"binary-example","type":"string"},"access_rules":{"default":"","items":{"example":"string-example","type":"string"},"type":"array"},"dtls":{"description":"DTLS listener options","$ref":"#/components/schemas/gateway.dtls_opts"}},"type":"object"},"emqx_gateway_api_listeners.listener":{"properties":{"enable":{"description":"Whether to enable this listener","example":true,"type":"boolean"},"id":{"description":"Listener Id","example":"binary-example","type":"string"},"name":{"description":"Listener name","example":"binary-example","type":"string"},"type":{"description":"Listener type. Enum: tcp, udp, ssl, dtls","enum":["tcp","ssl","udp","dtls"],"type":"string"},"running":{"description":"Listener running status","example":true,"type":"boolean"},"bind":{"description":"Listener bind address or port","example":"binary-example","type":"string"},"acceptors":{"description":"Listener acceptors number","example":100,"type":"integer"},"access_rules":{"description":"Listener Access rules for client","items":{"example":"binary-example","type":"string"},"type":"array"},"max_conn_rate":{"description":"Max connection rate for the listener","example":100,"type":"integer"},"max_connections":{"description":"Max connections for the listener","example":100,"type":"integer"},"mountpoint":{"description":"The Mounpoint for clients of the listener. The gateway-level mountpoint configuration can be overloaded when it is not null or empty string","example":"binary-example","type":"string"},"authentication":{"description":"The authenticatior for this listener","oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"tcp":{"description":"The tcp socket options for tcp or ssl listener","$ref":"#/components/schemas/emqx_gateway_api_listeners.tcp_listener_opts"},"ssl":{"description":"The ssl socket options for ssl listener","$ref":"#/components/schemas/emqx_gateway_api_listeners.ssl_listener_opts"},"udp":{"description":"The udp socket options for udp or dtls listener","$ref":"#/components/schemas/emqx_gateway_api_listeners.udp_listener_opts"},"dtls":{"description":"The dtls socket options for dtls listener","$ref":"#/components/schemas/emqx_gateway_api_listeners.dtls_listener_opts"}},"type":"object"},"lwm2m.resource":{"properties":{"operations":{"description":"Resource Operations","example":"E","type":"string"},"dataType":{"description":"Data Type","enum":["Integer","Float","Time","String","Boolean","Opaque","Objlnk"],"example":"Integer","type":"string"},"path":{"description":"Resource Path","example":"urn:oma:lwm2m:oma:2","type":"string"},"name":{"description":"Resource Name","example":"lwm2m-test","type":"string"}},"type":"object"},"emqx_authz_api_mnesia.username_response_data":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_username"},"type":"array"},"meta":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.meta"}},"type":"object"},"emqx_schema.mqtt_quic_listener":{"required":["bind"],"properties":{"enabled":{"default":true,"example":true,"type":"boolean"},"certfile":{"example":"string-example","type":"string"},"keyfile":{"example":"string-example","type":"string"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\nNOTE: QUIC listener supports only 'tlsv1.3' ciphers<br>","items":{"example":"string-example","type":"string"},"type":"array"},"idle_timeout":{"default":"15s","example":"12m","type":"string"},"bind":{"oneOf":[{"example":100,"type":"integer"},{"example":"127.0.0.1:80","type":"string"}]},"acceptors":{"default":16,"example":100,"type":"integer"},"max_connections":{"default":"infinity","oneOf":[{"example":100,"type":"integer"},{"enum":["infinity"],"type":"string"}]},"mountpoint":{"default":"","example":"binary-example","type":"string"},"zone":{"default":"default","example":"atom","type":"string"}},"type":"object"},"emqx_gateway_api_listeners.tcp_listener_opts":{"properties":{"active_n":{"example":100,"type":"integer"},"backlog":{"example":100,"type":"integer"},"buffer":{"example":"binary-example","type":"string"},"recbuf":{"example":"binary-example","type":"string"},"sndbuf":{"example":"binary-example","type":"string"},"high_watermark":{"example":"binary-example","type":"string"},"nodelay":{"example":true,"type":"boolean"},"reuseaddr":{"example":true,"type":"boolean"},"send_timeout":{"example":"binary-example","type":"string"},"send_timeout_close":{"example":true,"type":"boolean"}},"type":"object"},"emqx_schema.listener_ssl_opts":{"properties":{"enable":{"default":false,"example":true,"type":"boolean"},"cacertfile":{"description":"Trusted PEM format CA certificates bundle file.<br>\nThe certificates in this file are used to verify the TLS peer's certificates.\nAppend new certificates to the file if new CAs are to be trusted.\nThere is no need to restart EMQ X to have the updated file loaded, because\nthe system regularly checks if file has been updated (and reload).<br>\nNOTE: invalidating (deleting) a certificate from the file will not affect\nalready established connections.\n","example":"string-example","type":"string"},"certfile":{"description":"PEM format certificates chain file.<br>\nThe certificates in this file should be in reversed order of the certificate\nissue chain. That is, the host's certificate should be placed in the beginning\nof the file, followed by the immediate issuer certificate and so on.\nAlthough the root CA certificate is optional, it should placed at the end of\nthe file if it is to be added.\n","example":"string-example","type":"string"},"keyfile":{"description":"PEM format private key file.<br>\n","example":"string-example","type":"string"},"verify":{"default":"verify_none","enum":["verify_peer","verify_none"],"type":"string"},"reuse_sessions":{"default":true,"example":true,"type":"boolean"},"depth":{"default":10,"example":100,"type":"integer"},"password":{"description":"String containing the user's password. Only used if the private\nkeyfile is password-protected.","example":"string-example","type":"string"},"versions":{"default":["tlsv1.3","tlsv1.2","tlsv1.1","tlsv1"],"description":"All TLS/DTLS versions to be supported.<br>\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIn case PSK cipher suites are intended, make sure to configured\n<code>['tlsv1.2', 'tlsv1.1']</code> here.\n","items":{"example":"atom","type":"string"},"type":"array"},"ciphers":{"default":["TLS_AES_256_GCM_SHA384","TLS_AES_128_GCM_SHA256","TLS_CHACHA20_POLY1305_SHA256","TLS_AES_128_CCM_SHA256","TLS_AES_128_CCM_8_SHA256","ECDHE-ECDSA-AES256-GCM-SHA384","ECDHE-RSA-AES256-GCM-SHA384","ECDHE-ECDSA-AES256-SHA384","ECDHE-RSA-AES256-SHA384","ECDH-ECDSA-AES256-GCM-SHA384","ECDH-RSA-AES256-GCM-SHA384","ECDH-ECDSA-AES256-SHA384","ECDH-RSA-AES256-SHA384","DHE-DSS-AES256-GCM-SHA384","DHE-DSS-AES256-SHA256","AES256-GCM-SHA384","AES256-SHA256","ECDHE-ECDSA-AES128-GCM-SHA256","ECDHE-RSA-AES128-GCM-SHA256","ECDHE-ECDSA-AES128-SHA256","ECDHE-RSA-AES128-SHA256","ECDH-ECDSA-AES128-GCM-SHA256","ECDH-RSA-AES128-GCM-SHA256","ECDH-ECDSA-AES128-SHA256","ECDH-RSA-AES128-SHA256","DHE-DSS-AES128-GCM-SHA256","DHE-DSS-AES128-SHA256","AES128-GCM-SHA256","AES128-SHA256","ECDHE-ECDSA-AES256-SHA","ECDHE-RSA-AES256-SHA","DHE-DSS-AES256-SHA","ECDH-ECDSA-AES256-SHA","ECDH-RSA-AES256-SHA","ECDHE-ECDSA-AES128-SHA","ECDHE-RSA-AES128-SHA","DHE-DSS-AES128-SHA","ECDH-ECDSA-AES128-SHA","ECDH-RSA-AES128-SHA","RSA-PSK-AES256-GCM-SHA384","RSA-PSK-AES256-CBC-SHA384","RSA-PSK-AES128-GCM-SHA256","RSA-PSK-AES128-CBC-SHA256","RSA-PSK-AES256-CBC-SHA","RSA-PSK-AES128-CBC-SHA"],"description":"TLS cipher suite names separated by comma, or as an array of strings\n<code>\"TLS_AES_256_GCM_SHA384,TLS_AES_128_GCM_SHA256\"</code> or\n<code>[\"TLS_AES_256_GCM_SHA384\",\"TLS_AES_128_GCM_SHA256\"]</code].\n<br>\nCiphers (and their ordering) define the way in which the\nclient and server encrypts information over the wire.\nSelecting a good cipher suite is critical for the\napplication's data security, confidentiality and performance.\nThe names should be in OpenSSL sting format (not RFC format).\nDefault values and examples proveded by EMQ X config\ndocumentation are all in OpenSSL format.<br>\n\nNOTE: Certain cipher suites are only compatible with\nspecific TLS <code>versions</code> ('tlsv1.1', 'tlsv1.2' or 'tlsv1.3')\nincompatible cipher suites will be silently dropped.\nFor instance, if only 'tlsv1.3' is given in the <code>versions</code>,\nconfiguring cipher suites for other versions will have no effect.\n<br>\n\nNOTE: PSK ciphers are suppresed by 'tlsv1.3' version config<br>\nIf PSK cipher suites are intended, 'tlsv1.3' should be disabled from <code>versions</code>.<br>\nPSK cipher suites: <code>\"RSA-PSK-AES256-GCM-SHA384,RSA-PSK-AES256-CBC-SHA384,\nRSA-PSK-AES128-GCM-SHA256,RSA-PSK-AES128-CBC-SHA256,\nRSA-PSK-AES256-CBC-SHA,RSA-PSK-AES128-CBC-SHA,\nRSA-PSK-DES-CBC3-SHA,RSA-PSK-RC4-SHA\"</code><br>\n","items":{"example":"string-example","type":"string"},"type":"array"},"user_lookup_fun":{"default":"emqx_tls_psk:lookup","example":"string-example","type":"string"},"secure_renegotiate":{"default":true,"description":"\nSSL parameter renegotiation is a feature that allows a client and a server\nto renegotiate the parameters of the SSL connection on the fly.\nRFC 5746 defines a more secure way of doing this. By enabling secure renegotiation,\nyou drop support for the insecure renegotiation, prone to MitM attacks.\n","example":true,"type":"boolean"},"dhfile":{"description":"Path to a file containing PEM-encoded Diffie Hellman parameters\nto be used by the server if a cipher suite using Diffie Hellman\nkey exchange is negotiated. If not specified, default parameters\nare used.<br>\nNOTE: The dhfile option is not supported by TLS 1.3.","example":"string-example","type":"string"},"fail_if_no_peer_cert":{"default":false,"description":"\nUsed together with {verify, verify_peer} by an TLS/DTLS server.\nIf set to true, the server fails if the client does not have a\ncertificate to send, that is, sends an empty certificate.\nIf set to false, it fails only if the client sends an invalid\ncertificate (an empty certificate is considered valid).\n","example":true,"type":"boolean"},"honor_cipher_order":{"default":true,"example":true,"type":"boolean"},"client_renegotiation":{"default":true,"description":"\nIn protocols that support client-initiated renegotiation,\nthe cost of resources of such an operation is higher for the server than the client.\nThis can act as a vector for denial of service attacks.\nThe SSL application already takes measures to counter-act such attempts,\nbut client-initiated renegotiation can be strictly disabled by setting this option to false.\nThe default value is true. Note that disabling renegotiation can result in\nlong-lived connections becoming unusable due to limits on\nthe number of messages the underlying cipher suite can encipher.\n","example":true,"type":"boolean"}},"type":"object"},"authz.redis_cluster":{"properties":{"type":{"enum":["redis"],"type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"servers":{"items":{"example":"127.0.0.1:80","type":"string"},"type":"array"},"redis_type":{"default":"cluster","enum":["cluster"],"type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"password":{"example":"binary-example","type":"string"},"database":{"default":0,"example":100,"type":"integer"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"},"cmd":{"example":"binary-example","type":"string"}},"type":"object"},"emqx_authz_api_mnesia.meta":{"properties":{"page":{"default":1,"description":"Page number of the results to fetch.","example":1,"type":"integer"},"limit":{"default":100,"description":"Results per page(max 100)","example":50,"maximum":100,"minimum":1,"type":"integer"},"count":{"example":1,"type":"integer"}},"type":"object"},"emqx_schema.alarm":{"properties":{"actions":{"default":["log","publish"],"description":"The actions triggered when the alarm is activated.<\br>\nCurrently supports two actions, 'log' and 'publish'.\n'log' is to write the alarm to log (console or file).\n'publish' is to publish the alarm as an MQTT message to the system topics:\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/activate</code> and\n<code>$SYS/brokers/emqx@xx.xx.xx.x/alarms/deactivate</code>","example":["log","publish"],"items":{"example":"atom","type":"string"},"type":"array"},"size_limit":{"default":1000,"description":"The maximum total number of deactivated alarms to keep as history.<br>\nWhen this limit is exceeded, the oldest deactivated alarms are deleted to cap the total number.\n","example":1000,"maximum":3000,"minimum":1,"type":"integer"},"validity_period":{"default":"24h","description":"Retention time of deactivated alarms. Alarms are not deleted immediately\nwhen deactivated, but after the retention time.\n","example":"24h","type":"string"}},"type":"object"},"emqx_mgmt_api_alarms.meta":{"properties":{"page":{"default":1,"description":"Page number of the results to fetch.","example":1,"type":"integer"},"limit":{"default":100,"description":"Results per page(max 100)","example":50,"maximum":100,"minimum":1,"type":"integer"},"count":{"example":1,"type":"integer"}},"type":"object"},"authn-postgresql.config":{"required":["database","server"],"properties":{"mechanism":{"enum":["password-based"],"type":"string"},"backend":{"enum":["postgresql"],"type":"string"},"password_hash_algorithm":{"default":"sha256","enum":["plain","md5","sha","sha256","sha512","bcrypt"],"type":"string"},"salt_position":{"default":"prefix","enum":["prefix","suffix"],"type":"string"},"query":{"example":"string-example","type":"string"},"enable":{"default":true,"example":true,"type":"boolean"},"server":{"example":"127.0.0.1:80","type":"string"},"database":{"example":"binary-example","type":"string"},"pool_size":{"default":8,"example":100,"type":"integer"},"username":{"example":"binary-example","type":"string"},"password":{"example":"binary-example","type":"string"},"auto_reconnect":{"default":true,"example":true,"type":"boolean"},"ssl":{"default":{"enable":false},"$ref":"#/components/schemas/emqx_schema.ssl_client_opts"}},"type":"object"}},"securitySchemes":{"application":{"in":"header","name":"authorization","type":"apiKey"}}},"info":{"title":"EMQ X API","version":"5.0.0"},"openapi":"3.0.0","paths":{"/configs/rewrite":{"get":{"description":"Get the sub-configurations under *rewrite*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *rewrite*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/force_shutdown":{"get":{"description":"Get the sub-configurations under *force_shutdown*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.force_shutdown"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *force_shutdown*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.force_shutdown"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.force_shutdown"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/authorization/sources/built-in-database/clientid/{clientid}":{"delete":{"description":"Delete one record for clientid","parameters":[{"$ref":"#/components/parameters/emqx_authz_api_mnesia.clientid"}],"responses":{"204":{"description":"Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad clientid","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"get":{"description":"Get record info for clientid","parameters":[{"$ref":"#/components/parameters/emqx_authz_api_mnesia.clientid"}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"ClientID","value":{"clientid":"client1","rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}]}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_clientid"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"put":{"description":"Set record for clientid","parameters":[{"$ref":"#/components/parameters/emqx_authz_api_mnesia.clientid"}],"requestBody":{"content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"ClientID","value":{"clientid":"client1","rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}]}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_clientid"}}}},"responses":{"204":{"description":"Updated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad clientid or bad rule schema","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]}},"/listeners":{"get":{"description":"List listeners from all nodes in the cluster","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"oneOf":[{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]},"type":"array"}}},"description":"List listeners successfully"}},"security":[{"application":[]}],"tags":["listeners"]}},"/configs/statsd":{"get":{"description":"Get the sub-configurations under *statsd*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/statsd.statsd"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *statsd*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/statsd.statsd"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/statsd.statsd"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/clients/{clientid}/subscriptions":{"get":{"description":"Get client subscriptions","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/subscription"},"type":"array"}}},"description":"Get client subscriptions"}},"security":[{"application":[]}],"tags":["clients"]}},"/nodes/{node_name}/metrics":{"get":{"description":"Get node metrics","parameters":[{"description":"node name","example":"emqx@127.0.0.1","in":"path","name":"node_name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/metrics"}}},"description":"Get EMQ X Node Metrics"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["SOURCE_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Node error"}},"security":[{"application":[]}],"tags":["nodes"]}},"/gateway/coap/{clientid}/request":{"post":{"description":"lookup matching messages","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"content_type":{"description":"payload type","enum":["text/plain","application/json","application/octet-stream"],"type":"string"},"method":{"description":"request method type","enum":["get","put","post","delete"],"type":"string"},"payload":{"description":"payload","type":"string"},"timeout":{"description":"timespan for response","type":"string"},"token":{"description":"message token, can be empty","type":"string"}},"type":"object"}}},"description":"request payload, binary must encode by base64"},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"id":{"description":"message id","type":"integer"},"method":{"description":"response code","type":"string"},"payload":{"description":"payload","type":"string"},"token":{"description":"message token, can be empty","type":"string"}},"type":"object"}}},"description":""},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["CLIENT_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"client not found error"},"504":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["CLIENT_NOT_RESPONSE"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"timeout"}},"security":[{"application":[]}],"tags":["gateway"]}},"/authorization/sources/built-in-database/purge-all":{"delete":{"description":"Purge all records","parameters":[],"responses":{"204":{"description":"Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]}},"/mqtt/topic_metrics":{"get":{"description":"List topic metrics","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"create_time":{"description":"Date time, rfc3339","type":"string"},"metrics":{"properties":{"messages.dropped.count":{"type":"integer"},"messages.dropped.rate":{"type":"number"},"messages.in.count":{"type":"integer"},"messages.in.rate":{"type":"number"},"messages.out.count":{"type":"integer"},"messages.out.rate":{"type":"number"},"messages.qos0.in.count":{"type":"integer"},"messages.qos0.in.rate":{"type":"number"},"messages.qos0.out.count":{"type":"integer"},"messages.qos0.out.rate":{"type":"number"},"messages.qos1.in.count":{"type":"integer"},"messages.qos1.in.rate":{"type":"number"},"messages.qos1.out.count":{"type":"integer"},"messages.qos1.out.rate":{"type":"number"},"messages.qos2.in.count":{"type":"integer"},"messages.qos2.in.rate":{"type":"number"},"messages.qos2.out.count":{"type":"integer"},"messages.qos2.out.rate":{"type":"number"}},"type":"object"},"reset_time":{"description":"Nullable. Date time, rfc3339.","type":"string"},"topic":{"type":"string"}},"type":"object"},"type":"array"}}},"description":"List topic metrics"}},"security":[{"application":[]}],"tags":["mqtt"]},"post":{"description":"Create topic metrics","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"topic":{"type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"Create topic metrics success"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_REQUEST","BAD_TOPIC"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Topic metrics already exist or bad topic"},"409":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["EXCEED_LIMIT"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Topic metrics max limit"}},"security":[{"application":[]}],"tags":["mqtt"]},"put":{"description":"Reset topic metrics by topic name, or all","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"action":{"description":"Action, default reset","enum":["reset"],"type":"string"},"topic":{"description":"no topic will reset all","type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"Reset topic metrics success"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["ERROR_TOPIC"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Topic not found"}},"security":[{"application":[]}],"tags":["mqtt"]}},"/gateway/{name}/clients/{clientid}/subscriptions/{topic}":{"delete":{"description":"Unsubscribe the topic for client","parameters":[{"in":"path","name":"topic","required":true,"schema":{"type":"string"}},{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}},{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/configs/force_gc":{"get":{"description":"Get the sub-configurations under *force_gc*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.force_gc"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *force_gc*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.force_gc"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.force_gc"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/authorization/sources":{"get":{"description":"List authorization sources","parameters":[],"responses":{"200":{"content":{"application/json":{"examples":{"sources":{"summary":"Sources","value":"{\"sources\":[{\"auto_reconnect\":true,\"cmd\":\"HGETALL mqtt_authz\",\"enable\":true,\"pool_size\":1,\"redis_type\":\"single\",\"server\":\"127.0.0.1:3306\",\"type\":\"redis\"},{\"enable\":true,\"rules\":\"{allow,{username,\\\"^dashboard?\\\"},subscribe,[\\\"$SYS/#\\\"]}.\\n{allow,{ipaddr,\\\"127.0.0.1\\\"},all,[\\\"$SYS/#\\\",\\\"#\\\"]}.\",\"type\":\"file\"}]}"}},"schema":{"properties":{"sources":{"items":{"$ref":"#/components/schemas/sources"},"type":"array"}},"required":["sources"],"type":"object"}}},"description":"OK"}},"security":[{"application":[]}],"tags":["authorization"]},"post":{"description":"Add new source","parameters":[],"requestBody":{"content":{"application/json":{"examples":{"file":{"summary":"File","value":"{\"enable\":true,\"rules\":\"{allow,{username,\\\"^dashboard?\\\"},subscribe,[\\\"$SYS/#\\\"]}.\\n{allow,{ipaddr,\\\"127.0.0.1\\\"},all,[\\\"$SYS/#\\\",\\\"#\\\"]}.\",\"type\":\"file\"}"},"redis":{"summary":"Redis","value":"{\"auto_reconnect\":true,\"cmd\":\"HGETALL mqtt_authz\",\"enable\":true,\"pool_size\":1,\"redis_type\":\"single\",\"server\":\"127.0.0.1:3306\",\"type\":\"redis\"}"}},"schema":{"$ref":"#/components/schemas/sources"}}}},"responses":{"204":{"description":"Created"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"}},"security":[{"application":[]}],"tags":["authorization"]},"put":{"description":"Update all sources","parameters":[],"requestBody":{"content":{"application/json":{"examples":{"file":{"summary":"File","value":"{\"enable\":true,\"rules\":\"{allow,{username,\\\"^dashboard?\\\"},subscribe,[\\\"$SYS/#\\\"]}.\\n{allow,{ipaddr,\\\"127.0.0.1\\\"},all,[\\\"$SYS/#\\\",\\\"#\\\"]}.\",\"type\":\"file\"}"},"redis":{"summary":"Redis","value":"{\"auto_reconnect\":true,\"cmd\":\"HGETALL mqtt_authz\",\"enable\":true,\"pool_size\":1,\"redis_type\":\"single\",\"server\":\"127.0.0.1:3306\",\"type\":\"redis\"}"}},"schema":{"items":{"$ref":"#/components/schemas/sources"},"type":"array"}}}},"responses":{"204":{"description":"Created"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"}},"security":[{"application":[]}],"tags":["authorization"]}},"/status":{"get":{"parameters":[],"responses":{"200":{"description":"running"}},"security":[],"tags":["status"]}},"/mqtt/delayed/messages/{msgid}":{"delete":{"description":"Delete delayed message","parameters":[{"description":"delay message ID","in":"path","name":"msgid","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Delete delayed message success"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["MESSAGE_ID_SCHEMA_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad MsgId format","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["MESSAGE_ID_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"MsgId not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["mqtt"]},"get":{"description":"Get delayed message","parameters":[{"description":"delay message ID","in":"path","name":"msgid","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_delayed_api.message_without_payload"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["MESSAGE_ID_SCHEMA_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad MsgId format","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["MESSAGE_ID_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"MsgId not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["mqtt"]}},"/subscriptions":{"get":{"description":"List subscriptions","parameters":[{"description":"Client ID","in":"query","name":"clientid","schema":{"type":"string"}},{"description":"Node name","in":"query","name":"node","schema":{"type":"string"}},{"description":"QoS","in":"query","name":"qos","schema":{"enum":[0,1,2],"type":"integer"}},{"description":"Shared subscription group name","in":"query","name":"share_group","schema":{"type":"string"}},{"description":"Match topic string, url encoding","in":"query","name":"match_topic","schema":{"type":"string"}},{"description":"Page","in":"query","name":"page","schema":{"default":1,"type":"integer"}},{"description":"Page size","in":"query","name":"limit","schema":{"default":100,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/subscription"},"type":"array"},"meta":{"properties":{"count":{"type":"integer"},"limit":{"type":"integer"},"page":{"type":"integer"}},"type":"object"}},"type":"object"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INVALID_PARAMETER"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Invalid parameters"}},"security":[{"application":[]}],"tags":["subscriptions"]}},"/telemetry/status":{"get":{"description":"Get telemetry status","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"enable":{"type":"boolean"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["telemetry"]},"put":{"description":"Enable or disable telemetry","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"enable":{"type":"boolean"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"enable":{"description":"","type":"boolean"}},"type":"object"}}},"description":"Enable or disable telemetry successfully"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"}},"security":[{"application":[]}],"tags":["telemetry"]}},"/configs/exhook":{"get":{"description":"Get the sub-configurations under *exhook*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/exhook.exhook"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *exhook*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/exhook.exhook"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/exhook.exhook"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/clients/{clientid}/unsubscribe":{"post":{"description":"Unsubscribe","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"topic":{"description":"Topic","type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"Unsubscribe ok"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]}},"/configs/log":{"get":{"description":"Get the sub-configurations under *log*","parameters":[],"responses":{"200":{"description":"Configure logging backends (to console or to file), and logging level for each logger backend.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.log"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *log*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.log"}}}},"responses":{"200":{"description":"Configure logging backends (to console or to file), and logging level for each logger backend.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.log"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/bridges/":{"get":{"description":"List all created bridges","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"oneOf":[{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"connector":{"example":"mqtt:my_mqtt_connector","type":"string"},"direction":{"example":"egress","type":"string"},"from_local_topic":{"example":"emqx/#","type":"string"},"payload":{"example":"${payload}","type":"string"},"qos":{"example":1,"type":"number"},"retain":{"example":false,"type":"boolean"},"to_remote_topic":{"example":"from_emqx/${topic}","type":"string"}},"type":"object"},{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"body":{"example":"${payload}","type":"string"},"connect_timeout":{"example":"30s","type":"string"},"enable_pipelining":{"example":true,"type":"boolean"},"from_local_topic":{"example":"emqx_http/#","type":"string"},"headers":{"properties":{"content-type":{"example":"application/json","type":"string"}},"type":"object"},"max_retries":{"example":3,"type":"number"},"method":{"example":"post","type":"string"},"pool_size":{"example":4,"type":"number"},"pool_type":{"example":"random","type":"string"},"request_timeout":{"example":"30s","type":"string"},"retry_interval":{"example":"10s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/client-cert.pem","type":"string"},"enable":{"example":false,"type":"boolean"},"keyfile":{"example":"etc/certs/client-key.pem","type":"string"}},"type":"object"},"url":{"example":"http://localhost:9901/messages/${topic}","type":"string"}},"type":"object"}]},"type":"array"}}},"description":"A list of the bridges"}},"security":[{"application":[]}],"tags":["bridges"]},"post":{"description":"Create a new bridge","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"id":{"required":true,"type":"string"},"connector":{"example":"mqtt:my_mqtt_connector","type":"string"},"direction":{"example":"egress","type":"string"},"from_local_topic":{"example":"emqx/#","type":"string"},"payload":{"example":"${payload}","type":"string"},"qos":{"example":1,"type":"number"},"retain":{"example":false,"type":"boolean"},"to_remote_topic":{"example":"from_emqx/${topic}","type":"string"}},"type":"object"},{"properties":{"id":{"required":true,"type":"string"},"body":{"example":"${payload}","type":"string"},"connect_timeout":{"example":"30s","type":"string"},"enable_pipelining":{"example":true,"type":"boolean"},"from_local_topic":{"example":"emqx_http/#","type":"string"},"headers":{"properties":{"content-type":{"example":"application/json","type":"string"}},"type":"object"},"max_retries":{"example":3,"type":"number"},"method":{"example":"post","type":"string"},"pool_size":{"example":4,"type":"number"},"pool_type":{"example":"random","type":"string"},"request_timeout":{"example":"30s","type":"string"},"retry_interval":{"example":"10s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/client-cert.pem","type":"string"},"enable":{"example":false,"type":"boolean"},"keyfile":{"example":"etc/certs/client-key.pem","type":"string"}},"type":"object"},"url":{"example":"http://localhost:9901/messages/${topic}","type":"string"}},"type":"object"}]}}}},"responses":{"201":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"connector":{"example":"mqtt:my_mqtt_connector","type":"string"},"direction":{"example":"egress","type":"string"},"from_local_topic":{"example":"emqx/#","type":"string"},"payload":{"example":"${payload}","type":"string"},"qos":{"example":1,"type":"number"},"retain":{"example":false,"type":"boolean"},"to_remote_topic":{"example":"from_emqx/${topic}","type":"string"}},"type":"object"},{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"body":{"example":"${payload}","type":"string"},"connect_timeout":{"example":"30s","type":"string"},"enable_pipelining":{"example":true,"type":"boolean"},"from_local_topic":{"example":"emqx_http/#","type":"string"},"headers":{"properties":{"content-type":{"example":"application/json","type":"string"}},"type":"object"},"max_retries":{"example":3,"type":"number"},"method":{"example":"post","type":"string"},"pool_size":{"example":4,"type":"number"},"pool_type":{"example":"random","type":"string"},"request_timeout":{"example":"30s","type":"string"},"retry_interval":{"example":"10s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/client-cert.pem","type":"string"},"enable":{"example":false,"type":"boolean"},"keyfile":{"example":"etc/certs/client-key.pem","type":"string"}},"type":"object"},"url":{"example":"http://localhost:9901/messages/${topic}","type":"string"}},"type":"object"}]}}},"description":"Bridge created"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["UPDATE_FAILED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Create bridge failed"}},"security":[{"application":[]}],"tags":["bridges"]}},"/listeners/{id}/operation/{operation}":{"post":{"description":"Restart listeners on all nodes in the cluster","parameters":[{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}},{"example":"restart","in":"path","name":"operation","required":true,"schema":{"enum":["start","stop","restart"],"type":"string"}}],"responses":{"200":{"description":"Operation success"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Operation failed"}},"security":[{"application":[]}],"tags":["listeners"]}},"/configs/auto_subscribe":{"get":{"description":"Get the sub-configurations under *auto_subscribe*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/auto_subscribe.auto_subscribe"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *auto_subscribe*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/auto_subscribe.auto_subscribe"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/auto_subscribe.auto_subscribe"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/listeners/{listener_id}/authentication":{"get":{"description":"List authenticators for listener authentication","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":[{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}},{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"},{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"},{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"},{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}],"schema":{"items":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"type":"array"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]},"post":{"description":"Create authenticator for listener authentication","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"409":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CONFLICT"],"type":"string"},"message":{"description":"Details description of the error.","example":"Conflict","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]}},"/configs/telemetry":{"get":{"description":"Get the sub-configurations under *telemetry*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.telemetry"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *telemetry*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.telemetry"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.telemetry"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/lwm2m/{clientid}/read":{"post":{"description":"Send a read command to resource","parameters":[{"example":"urn:oma:lwm2m:oma:2","in":"path","name":"clientid","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":"/3/0/7","in":"query","name":"path","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"No Content"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CLIENT_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"clientid not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["lwm2m"]}},"/configs/overload_protection":{"get":{"description":"Get the sub-configurations under *overload_protection*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.overload_protection"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *overload_protection*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.overload_protection"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.overload_protection"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/db":{"get":{"description":"Get the sub-configurations under *db*","parameters":[],"responses":{"200":{"description":"Settings of the embedded database.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_conf_schema.db"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *db*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_conf_schema.db"}}}},"responses":{"200":{"description":"Settings of the embedded database.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_conf_schema.db"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/authorization/sources/built-in-database/all":{"get":{"description":"Show the list of rules for all","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"All","value":{"rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}]}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_all"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"put":{"description":"Set the list of rules for all","parameters":[],"requestBody":{"content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"All","value":{"rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}]}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_all"}}}},"responses":{"204":{"description":"Created"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad rule schema","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]}},"/authentication/{id}/users/{user_id}":{"delete":{"description":"Update user in authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"user_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"User deleted"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]},"get":{"description":"Get user from authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"user_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]},"put":{"description":"Update user in authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"user_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Update regular user","value":{"password":"newsecret"}},"super_user":{"summary":"Update user and promote to superuser","value":{"is_superuser":true,"password":"newsecret"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_update"}}}},"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]}},"/gateway/{name}/authentication/import_users":{"post":{"description":"Import users into the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"import_csv":{"summary":"Import users from CSV file","value":{"filename":"/path/to/user/data.csv"}},"import_json":{"summary":"Import users from JSON file","value":{"filename":"/path/to/user/data.json"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_import_users"}}}},"responses":{"204":{"description":"Imported"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/connectors_test":{"post":{"description":"Test creating a new connector by given Id <br>The Id must be of format <type>:<name>","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector_test_info"}]}}}},"responses":{"200":{"description":"Test connector OK"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"TEST_FAILED","type":"string"},"message":{"example":"connector test failed","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"summary":"Test creating connector","tags":["connectors"]}},"/telemetry/data":{"get":{"parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"active_modules":{"description":"EMQ X Active Modules","items":{"type":"string"},"type":"array"},"active_plugins":{"description":"EMQ X Active Plugins","items":{"type":"string"},"type":"array"},"emqx_version":{"description":"EMQ X Version","type":"string"},"license":{"properties":{"edition":{"description":"EMQ X License","type":"string"}},"type":"object"},"messages_received":{"description":"EMQ X Current Received Message","type":"integer"},"messages_sent":{"description":"EMQ X Current Sent Message","type":"integer"},"nodes_uuid":{"description":"EMQ X Cluster Nodes UUID","type":"string"},"num_clients":{"description":"EMQ X Current Connections","type":"integer"},"os_name":{"description":"OS Name","type":"string"},"os_version":{"description":"OS Version","type":"string"},"otp_version":{"description":"Erlang/OTP Version","type":"string"},"up_time":{"description":"EMQ X Runtime","type":"string"},"uuid":{"description":"EMQ X UUID","type":"string"}},"type":"object"}}},"description":"Get telemetry data"}},"security":[{"application":[]}],"tags":["telemetry"]}},"/clients/{clientid}/subscribe":{"post":{"description":"Subscribe","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"qos":{"description":"QoS","enum":[0,1,2],"example":0,"type":"integer"},"topic":{"description":"Topic","type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"Subscribe ok"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]}},"/prometheus":{"get":{"description":"Get Prometheus info","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"enable":{"example":true,"type":"boolean"},"interval":{"example":"15s","type":"string"},"push_gateway_server":{"example":"http://127.0.0.1:9091","type":"string"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["prometheus"]},"put":{"description":"Update Prometheus","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"enable":{"example":true,"type":"boolean"},"interval":{"example":"15s","type":"string"},"push_gateway_server":{"example":"http://127.0.0.1:9091","type":"string"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"enable":{"example":true,"type":"boolean"},"interval":{"example":"15s","type":"string"},"push_gateway_server":{"example":"http://127.0.0.1:9091","type":"string"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["prometheus"]}},"/banned":{"get":{"description":"List banned","parameters":[{"$ref":"#/components/parameters/public.page"},{"$ref":"#/components/parameters/public.limit"}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_mgmt_api_banned.ban"},"type":"array"},"meta":{"$ref":"#/components/schemas/emqx_mgmt_api_banned.meta"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["banned"]},"post":{"description":"Create banned","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_banned.ban"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_mgmt_api_banned.ban"},"type":"array"}},"type":"object"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["ALREADY_EXISTED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Banned already existed","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["banned"]}},"/authorization/sources/built-in-database/username":{"get":{"description":"Show the list of record for username","parameters":[{"$ref":"#/components/parameters/public.page"},{"$ref":"#/components/parameters/public.limit"}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"Username","value":{"data":[{"rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}],"username":"user1"}],"meta":{"count":1,"limit":100,"page":1}}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.username_response_data"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"post":{"description":"Add new records for username","parameters":[],"requestBody":{"content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"Username","value":[{"rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}],"username":"user1"}]}},"schema":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_username"},"type":"array"}}}},"responses":{"204":{"description":"Created"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad username or bad rule schema","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]}},"/listeners/{id}":{"delete":{"description":"Delete a listener by a given Id to all nodes in the cluster","parameters":[{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}}],"responses":{"204":{"description":"Delete listener successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_LISTENER_ID"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Listener id not found"}},"security":[{"application":[]}],"tags":["listeners"]},"get":{"description":"List listeners by a given Id from all nodes in the cluster","parameters":[{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"oneOf":[{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]},"type":"array"}}},"description":"List listeners successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_LISTENER_ID"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Listener id not found"}},"security":[{"application":[]}],"tags":["listeners"]},"put":{"description":"Create or update a listener by a given Id to all nodes in the cluster","parameters":[{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]}}},"description":"Listener Config"},"responses":{"200":{"content":{"application/json":{"schema":{"items":{"oneOf":[{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]},"type":"array"}}},"description":"Create or update listener successfully"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_LISTENER_ID","BAD_CONFIG_SCHEMA"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Update configuration failed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_LISTENER_ID"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Listener id not found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Operation failed"}},"security":[{"application":[]}],"tags":["listeners"]}},"/authorization/sources/built-in-database/username/{username}":{"delete":{"description":"Delete one record for username","parameters":[{"$ref":"#/components/parameters/emqx_authz_api_mnesia.username"}],"responses":{"204":{"description":"Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad username","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"get":{"description":"Get record info for username","parameters":[{"$ref":"#/components/parameters/emqx_authz_api_mnesia.username"}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"Username","value":{"rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}],"username":"user1"}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_username"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"put":{"description":"Set record for username","parameters":[{"$ref":"#/components/parameters/emqx_authz_api_mnesia.username"}],"requestBody":{"content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"Username","value":{"rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}],"username":"user1"}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_username"}}}},"responses":{"204":{"description":"Updated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad username or bad rule schema","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]}},"/mqtt/retainer":{"get":{"description":"get retainer config","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"config":{"properties":{"max_retained_messages":{"example":0,"type":"number"},"storage_type":{"example":"ram","type":"string"},"type":{"example":"built_in_database","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"flow_control":{"properties":{"max_read_number":{"example":0,"type":"number"},"msg_deliver_quota":{"example":0,"type":"number"},"quota_release_interval":{"example":"0s","type":"string"}},"type":"object"},"max_payload_size":{"example":"1MB","type":"string"},"msg_clear_interval":{"example":"0s","type":"string"},"msg_expiry_interval":{"example":"0s","type":"string"}},"type":"object"}}},"description":"Get configs successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Config not found"}},"security":[{"application":[]}],"tags":["mqtt"]},"put":{"description":"Update retainer config","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"config":{"properties":{"max_retained_messages":{"example":0,"type":"number"},"storage_type":{"example":"ram","type":"string"},"type":{"example":"built_in_database","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"flow_control":{"properties":{"max_read_number":{"example":0,"type":"number"},"msg_deliver_quota":{"example":0,"type":"number"},"quota_release_interval":{"example":"0s","type":"string"}},"type":"object"},"max_payload_size":{"example":"1MB","type":"string"},"msg_clear_interval":{"example":"0s","type":"string"},"msg_expiry_interval":{"example":"0s","type":"string"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"config":{"properties":{"max_retained_messages":{"example":0,"type":"number"},"storage_type":{"example":"ram","type":"string"},"type":{"example":"built_in_database","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"flow_control":{"properties":{"max_read_number":{"example":0,"type":"number"},"msg_deliver_quota":{"example":0,"type":"number"},"quota_release_interval":{"example":"0s","type":"string"}},"type":"object"},"max_payload_size":{"example":"1MB","type":"string"},"msg_clear_interval":{"example":"0s","type":"string"},"msg_expiry_interval":{"example":"0s","type":"string"}},"type":"object"}}},"description":"Update configs successfully"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["UPDATE_FAILED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Update configs failed"}},"security":[{"application":[]}],"tags":["mqtt"]}},"/authentication":{"get":{"description":"List authenticators for global authentication","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"example":[{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}},{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"},{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"},{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"},{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}],"schema":{"items":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"type":"array"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]},"post":{"description":"Create authenticator for global authentication","parameters":[],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"409":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CONFLICT"],"type":"string"},"message":{"description":"Details description of the error.","example":"Conflict","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]}},"/login":{"post":{"description":"Dashboard Auth","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"username":{"description":"The User for which to create the token.","example":"admin","maxLength":100,"type":"string"},"password":{"description":"password","example":"public","type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"token":{"description":"JWT Token","example":"string-example","type":"string"},"license":{"properties":{"edition":{"description":"license","enum":["community","enterprise"],"example":"community","type":"string"}},"type":"object"},"version":{"description":"version","example":"5.0.0","type":"string"}},"type":"object"}}}},"401":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"ERROR_USERNAME_OR_PWD","type":"string"},"message":{"example":"Unauthorized","type":"string"}},"type":"object"}}}}},"security":[],"summary":"Dashboard Auth","tags":["dashboard"]}},"/bridges/{id}":{"delete":{"description":"Delete a bridge","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Bridge deleted"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bridge not found"}},"security":[{"application":[]}],"tags":["bridges"]},"get":{"description":"Get a bridge by Id","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"oneOf":[{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"connector":{"example":"mqtt:my_mqtt_connector","type":"string"},"direction":{"example":"egress","type":"string"},"from_local_topic":{"example":"emqx/#","type":"string"},"payload":{"example":"${payload}","type":"string"},"qos":{"example":1,"type":"number"},"retain":{"example":false,"type":"boolean"},"to_remote_topic":{"example":"from_emqx/${topic}","type":"string"}},"type":"object"},{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"body":{"example":"${payload}","type":"string"},"connect_timeout":{"example":"30s","type":"string"},"enable_pipelining":{"example":true,"type":"boolean"},"from_local_topic":{"example":"emqx_http/#","type":"string"},"headers":{"properties":{"content-type":{"example":"application/json","type":"string"}},"type":"object"},"max_retries":{"example":3,"type":"number"},"method":{"example":"post","type":"string"},"pool_size":{"example":4,"type":"number"},"pool_type":{"example":"random","type":"string"},"request_timeout":{"example":"30s","type":"string"},"retry_interval":{"example":"10s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/client-cert.pem","type":"string"},"enable":{"example":false,"type":"boolean"},"keyfile":{"example":"etc/certs/client-key.pem","type":"string"}},"type":"object"},"url":{"example":"http://localhost:9901/messages/${topic}","type":"string"}},"type":"object"}]},"type":"array"}}},"description":"The details of the bridge"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bridge not found"}},"security":[{"application":[]}],"tags":["bridges"]},"put":{"description":"Update a bridge","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"connector":{"example":"mqtt:my_mqtt_connector","type":"string"},"direction":{"example":"egress","type":"string"},"from_local_topic":{"example":"emqx/#","type":"string"},"payload":{"example":"${payload}","type":"string"},"qos":{"example":1,"type":"number"},"retain":{"example":false,"type":"boolean"},"to_remote_topic":{"example":"from_emqx/${topic}","type":"string"}},"type":"object"},{"properties":{"body":{"example":"${payload}","type":"string"},"connect_timeout":{"example":"30s","type":"string"},"enable_pipelining":{"example":true,"type":"boolean"},"from_local_topic":{"example":"emqx_http/#","type":"string"},"headers":{"properties":{"content-type":{"example":"application/json","type":"string"}},"type":"object"},"max_retries":{"example":3,"type":"number"},"method":{"example":"post","type":"string"},"pool_size":{"example":4,"type":"number"},"pool_type":{"example":"random","type":"string"},"request_timeout":{"example":"30s","type":"string"},"retry_interval":{"example":"10s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/client-cert.pem","type":"string"},"enable":{"example":false,"type":"boolean"},"keyfile":{"example":"etc/certs/client-key.pem","type":"string"}},"type":"object"},"url":{"example":"http://localhost:9901/messages/${topic}","type":"string"}},"type":"object"}]}}}},"responses":{"200":{"content":{"application/json":{"schema":{"items":{"oneOf":[{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"connector":{"example":"mqtt:my_mqtt_connector","type":"string"},"direction":{"example":"egress","type":"string"},"from_local_topic":{"example":"emqx/#","type":"string"},"payload":{"example":"${payload}","type":"string"},"qos":{"example":1,"type":"number"},"retain":{"example":false,"type":"boolean"},"to_remote_topic":{"example":"from_emqx/${topic}","type":"string"}},"type":"object"},{"properties":{"bridge_type":{"enum":["mqtt","http"],"type":"string"},"id":{"example":"http:my_http_bridge","type":"string"},"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"},"node_metrics":{"items":{"properties":{"metrics":{"properties":{"failed":{"example":"0","type":"integer"},"matched":{"example":"0","type":"integer"},"speed":{"example":"0.0","format":"float","type":"number"},"speed_last5m":{"example":"0.0","format":"float","type":"number"},"speed_max":{"example":"0.0","format":"float","type":"number"},"success":{"example":"0","type":"integer"}},"type":"object"},"node":{"example":"emqx@127.0.0.1","type":"string"}},"type":"object"},"type":"array"},"node_status":{"items":{"properties":{"node":{"example":"emqx@127.0.0.1","type":"string"},"status":{"enum":["connected","disconnected"],"type":"string"}},"type":"object"},"type":"array"},"status":{"enum":["connected","disconnected"],"type":"string"},"body":{"example":"${payload}","type":"string"},"connect_timeout":{"example":"30s","type":"string"},"enable_pipelining":{"example":true,"type":"boolean"},"from_local_topic":{"example":"emqx_http/#","type":"string"},"headers":{"properties":{"content-type":{"example":"application/json","type":"string"}},"type":"object"},"max_retries":{"example":3,"type":"number"},"method":{"example":"post","type":"string"},"pool_size":{"example":4,"type":"number"},"pool_type":{"example":"random","type":"string"},"request_timeout":{"example":"30s","type":"string"},"retry_interval":{"example":"10s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/client-cert.pem","type":"string"},"enable":{"example":false,"type":"boolean"},"keyfile":{"example":"etc/certs/client-key.pem","type":"string"}},"type":"object"},"url":{"example":"http://localhost:9901/messages/${topic}","type":"string"}},"type":"object"}]},"type":"array"}}},"description":"Bridge updated"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["UPDATE_FAILED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Update bridge failed"}},"security":[{"application":[]}],"tags":["bridges"]}},"/rules/{id}":{"delete":{"description":"Delete a rule by given Id from all nodes in the cluster","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Delete rule successfully"}},"security":[{"application":[]}],"tags":["rules"]},"get":{"description":"Get a rule by given Id","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"created_at":{"description":"The time that this rule was created, in rfc3339 format","example":"2021-09-18T13:57:29+08:00","type":"string"},"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"id":{"description":"The Id for the rule","type":"string"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"}}},"description":"Get rule successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Rule not found"}},"security":[{"application":[]}],"tags":["rules"]},"put":{"description":"Create or update a rule by given Id to all nodes in the cluster","parameters":[{"in":"path","name":"id","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"}}},"description":"Rule parameters"},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"created_at":{"description":"The time that this rule was created, in rfc3339 format","example":"2021-09-18T13:57:29+08:00","type":"string"},"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"id":{"description":"The Id for the rule","type":"string"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"}}},"description":"Create or update rule successfully"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_ARGS"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Invalid Parameters"}},"security":[{"application":[]}],"tags":["rules"]}},"/configs/topic_metrics":{"get":{"description":"Get the sub-configurations under *topic_metrics*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.topic_metrics"},"type":"array"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *topic_metrics*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.topic_metrics"},"type":"array"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.topic_metrics"},"type":"array"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/authorization":{"get":{"description":"Get the sub-configurations under *authorization*","parameters":[],"responses":{"200":{"description":"\nAuthorization a.k.a ACL.<br>\nIn EMQ X, MQTT client access control is extremly flexible.<br>\nAn out of the box set of authorization data sources are supported.\nFor example,<br>\n'file' source is to support concise and yet generic ACL rules in a file;<br>\n'built-in-database' source can be used to store per-client customisable rule sets,\nnatively in the EMQ X node;<br>\n'http' source to make EMQ X call an external HTTP API to make the decision;<br>\n'postgresql' etc. to look up clients or rules from external databases;<br>\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.authorization"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *authorization*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.authorization"}}}},"responses":{"200":{"description":"\nAuthorization a.k.a ACL.<br>\nIn EMQ X, MQTT client access control is extremly flexible.<br>\nAn out of the box set of authorization data sources are supported.\nFor example,<br>\n'file' source is to support concise and yet generic ACL rules in a file;<br>\n'built-in-database' source can be used to store per-client customisable rule sets,\nnatively in the EMQ X node;<br>\n'http' source to make EMQ X call an external HTTP API to make the decision;<br>\n'postgresql' etc. to look up clients or rules from external databases;<br>\n","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.authorization"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/alarm":{"get":{"description":"Get the sub-configurations under *alarm*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.alarm"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *alarm*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.alarm"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.alarm"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/publish":{"post":{"description":"Publish","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"from":{"description":"Message from","type":"string"},"payload":{"description":"Topic","type":"string"},"qos":{"description":"QoS","enum":[0,1,2],"type":"integer"},"retain":{"description":"Retain message flag, nullable, default false","type":"boolean"},"topic":{"description":"Topic","type":"string"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"from":{"description":"Message from","type":"string"},"id":{"description":"Message Id","type":"string"},"payload":{"description":"Topic","type":"string"},"qos":{"description":"QoS","enum":[0,1,2],"type":"integer"},"retain":{"description":"Retain message flag, nullable, default false","type":"boolean"},"topic":{"description":"Topic","type":"string"}},"type":"object"}}},"description":"publish ok"}},"security":[{"application":[]}],"tags":["publish"]}},"/nodes/{node_name}/stats":{"get":{"description":"Get node stats","parameters":[{"description":"node name","example":"emqx@127.0.0.1","in":"path","name":"node_name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/stat"}}},"description":"Get EMQ X Node Stats"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["SOURCE_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Node error"}},"security":[{"application":[]}],"tags":["nodes"]}},"/configs":{"get":{"description":"Get all the configurations of the specified node, including hot and non-hot updatable items.","parameters":[{"description":"Node's name: If you do not fill in the fields, this node will be used by default.","example":"emqx@127.0.0.1","in":"query","name":"node","required":false,"schema":{"example":"atom","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"listeners":{"description":"MQTT listeners identified by their protocol type and assigned names","$ref":"#/components/schemas/emqx_schema.listeners"},"zones":{"description":"A zone is a set of configs grouped by the zone <code>name</code>.<br>\nFor flexible configuration mapping, the <code>name</code>\ncan be set to a listener's <code>zone</code> config.<br>\nNOTE: A builtin zone named <code>default</code> is auto created\nand can not be deleted.","properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.zone"}},"type":"object"},"mqtt":{"description":"Global MQTT configuration.<br>\nThe configs here work as default values which can be overriden\nin <code>zone</code> configs","$ref":"#/components/schemas/emqx_schema.mqtt"},"authentication":{"description":"Default authentication configs for all MQTT listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]},"node":{"description":"Node name, cookie, config & data directories and the Eralng virtual machine (beam) boot parameters.","$ref":"#/components/schemas/emqx_mgmt_api_configs.node"},"cluster":{"description":"EMQ X nodes can form a cluster to scale up the total capacity.<br>Here holds the configs to instruct how individual nodes can discover each other.","$ref":"#/components/schemas/emqx_mgmt_api_configs.cluster"},"log":{"description":"Configure logging backends (to console or to file), and logging level for each logger backend.","$ref":"#/components/schemas/emqx_mgmt_api_configs.log"},"rpc":{"description":"EMQ X uses a library called <code>gen_rpc</code> for inter-broker RPCs.<br>Most of the time the default config should work, but in case you need to do performance fine-turning or experiment a bit, this is where to look.","$ref":"#/components/schemas/emqx_mgmt_api_configs.rpc"},"authorization":{"description":"\nAuthorization a.k.a ACL.<br>\nIn EMQ X, MQTT client access control is extremly flexible.<br>\nAn out of the box set of authorization data sources are supported.\nFor example,<br>\n'file' source is to support concise and yet generic ACL rules in a file;<br>\n'built-in-database' source can be used to store per-client customisable rule sets,\nnatively in the EMQ X node;<br>\n'http' source to make EMQ X call an external HTTP API to make the decision;<br>\n'postgresql' etc. to look up clients or rules from external databases;<br>\n","$ref":"#/components/schemas/emqx_mgmt_api_configs.authorization"},"db":{"description":"Settings of the embedded database.","$ref":"#/components/schemas/emqx_conf_schema.db"},"broker":{"$ref":"#/components/schemas/emqx_schema.broker"},"rate_limit":{"$ref":"#/components/schemas/emqx_schema.rate_limit"},"force_shutdown":{"$ref":"#/components/schemas/emqx_schema.force_shutdown"},"overload_protection":{"$ref":"#/components/schemas/emqx_schema.overload_protection"},"force_gc":{"$ref":"#/components/schemas/emqx_schema.force_gc"},"conn_congestion":{"$ref":"#/components/schemas/emqx_schema.conn_congestion"},"quota":{"$ref":"#/components/schemas/emqx_schema.quota"},"plugins":{"$ref":"#/components/schemas/emqx_schema.plugins"},"stats":{"$ref":"#/components/schemas/emqx_schema.stats"},"sysmon":{"$ref":"#/components/schemas/emqx_schema.sysmon"},"alarm":{"$ref":"#/components/schemas/emqx_schema.alarm"},"flapping_detect":{"$ref":"#/components/schemas/emqx_schema.flapping_detect"},"persistent_session_store":{"$ref":"#/components/schemas/emqx_schema.persistent_session_store"},"bridges":{"$ref":"#/components/schemas/emqx_bridge_schema.bridges"},"emqx_retainer":{"$ref":"#/components/schemas/emqx_retainer_schema.emqx_retainer"},"statsd":{"$ref":"#/components/schemas/statsd.statsd"},"authenticator_config":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]},"auto_subscribe":{"$ref":"#/components/schemas/auto_subscribe.auto_subscribe"},"delayed":{"$ref":"#/components/schemas/modules.delayed"},"telemetry":{"$ref":"#/components/schemas/modules.telemetry"},"event_message":{"$ref":"#/components/schemas/modules.event_message"},"rewrite":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"},"topic_metrics":{"items":{"$ref":"#/components/schemas/modules.topic_metrics"},"type":"array"},"emqx_dashboard":{"$ref":"#/components/schemas/dashboard.emqx_dashboard"},"gateway":{"$ref":"#/components/schemas/gateway.gateway"},"prometheus":{"$ref":"#/components/schemas/prometheus.prometheus"},"rule_engine":{"$ref":"#/components/schemas/rule_engine.rule_engine"},"exhook":{"$ref":"#/components/schemas/exhook.exhook"},"psk":{"$ref":"#/components/schemas/emqx_psk_schema.psk"},"emqx_limiter":{"$ref":"#/components/schemas/emqx_limiter_schema.emqx_limiter"},"connectors":{"$ref":"#/components/schemas/emqx_connector_schema.connectors"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/nodes/{node}/listeners/{id}":{"delete":{"description":"Delete a listener by a given Id to all nodes in the cluster","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}},{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}}],"responses":{"204":{"description":"Delete listener successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_LISTENER_ID"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Listener id not found"}},"security":[{"application":[]}],"tags":["nodes"]},"get":{"description":"Get a listener by a given Id on a specific node","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}},{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]}}},"description":"Get listener successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_NODE_NAME","BAD_LISTENER_ID"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Node name or listener id not found"}},"security":[{"application":[]}],"tags":["nodes"]},"put":{"description":"Create or update a listener by a given Id on a specific node","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}},{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]}}},"description":"Listener Config"},"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]}}},"description":"Get listener successfully"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_LISTENER_ID","BAD_CONFIG_SCHEMA"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Update configuration failed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_NODE_NAME","BAD_LISTENER_ID"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Node name or listener id not found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Operation failed"}},"security":[{"application":[]}],"tags":["nodes"]}},"/configs/rule_engine":{"get":{"description":"Get the sub-configurations under *rule_engine*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rule_engine.rule_engine"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *rule_engine*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/rule_engine.rule_engine"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/rule_engine.rule_engine"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/bridges":{"get":{"description":"Get the sub-configurations under *bridges*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_bridge_schema.bridges"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *bridges*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_bridge_schema.bridges"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_bridge_schema.bridges"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/clients/{clientid}":{"delete":{"description":"Kick out client by client ID","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Kick out client successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]},"get":{"description":"Get clients info by client ID","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/client"}}},"description":"List clients 200 OK"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]}},"/gateway/lwm2m/{clientid}/observe":{"post":{"description":"(cancel) observe resource","parameters":[{"example":"urn:oma:lwm2m:oma:2","in":"path","name":"clientid","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":"/3/0/7","in":"query","name":"path","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":true,"in":"query","name":"enable","required":true,"schema":{"example":true,"type":"boolean"}}],"responses":{"200":{"description":"No Content"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CLIENT_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Clientid not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["lwm2m"]}},"/listeners/{listener_id}/authentication/{id}":{"delete":{"description":"Delete authenticator from listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Authenticator deleted"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]},"get":{"description":"Get authenticator from listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]},"put":{"description":"Update authenticator from listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"409":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CONFLICT"],"type":"string"},"message":{"description":"Details description of the error.","example":"Conflict","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]}},"/gateway/{name}/clients/{clientid}":{"delete":{"description":"Kick out the gateway client","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}},{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get the gateway client infomation","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}},{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"recv_cnt":{"description":"Number of TCP packets received","type":"integer"},"send_msg":{"description":"Number of PUBLISH packets sent","type":"integer"},"clean_start":{"description":"Indicate whether the client is using a brand new session","type":"boolean"},"heap_size":{"description":"Process heap size with the unit of byte","type":"integer"},"node":{"description":"Name of the node to which the client is connected","type":"string"},"inflight_cnt":{"description":"Current length of inflight","type":"integer"},"disconnected_at":{"description":"Client offline time, This field is only valid and returned when connected is false","type":"string"},"username":{"description":"Username of client when connecting","type":"string"},"send_pkt":{"description":"Number of MQTT packets sent","type":"integer"},"subscriptions_cnt":{"description":"Number of subscriptions established by this client","type":"integer"},"clientid":{"description":"Client identifier","type":"string"},"reductions":{"description":"Erlang reduction","type":"integer"},"recv_pkt":{"description":"Number of MQTT packets received","type":"integer"},"send_cnt":{"description":"Number of TCP packets sent","type":"integer"},"awaiting_rel_cnt":{"description":"v4 api name [awaiting_rel] Number of awaiting PUBREC packet","type":"integer"},"port":{"description":"Client's port","type":"integer"},"recv_msg":{"description":"Number of PUBLISH packets received","type":"integer"},"created_at":{"description":"Session creation time","type":"string"},"expiry_interval":{"description":"Session expiration interval, with the unit of second","type":"integer"},"is_bridge":{"description":"Indicates whether the client is connectedvia bridge","type":"boolean"},"connected_at":{"description":"Client connection time","type":"string"},"send_oct":{"description":"Number of bytes sent","type":"integer"},"mqueue_len":{"description":"Current length of message queue","type":"integer"},"mqueue_max":{"description":"v4 api name [max_mqueue]. Maximum length of message queue","type":"integer"},"inflight_max":{"description":"v4 api name [max_inflight]. Maximum length of inflight","type":"integer"},"mqueue_dropped":{"description":"Number of messages dropped by the message queue due to exceeding the length","type":"integer"},"subscriptions_max":{"description":"v4 api name [max_subscriptions] Maximum number of subscriptions allowed by this client","type":"integer"},"mailbox_len":{"description":"Process mailbox size","type":"integer"},"awaiting_rel_max":{"description":"v4 api name [max_awaiting_rel]. Maximum allowed number of awaiting PUBREC packet","type":"integer"},"proto_name":{"description":"Client protocol name","type":"string"},"recv_oct":{"description":"Number of bytes received by EMQ X Broker (the same below)","type":"integer"},"keepalive":{"description":"keepalive time, with the unit of second","type":"integer"},"ip_address":{"description":"Client's IP address","type":"string"},"proto_ver":{"description":"Protocol version used by the client","type":"string"},"connected":{"description":"Whether the client is connected","type":"boolean"}},"type":"object"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/configs/zones":{"get":{"description":"Get the sub-configurations under *zones*","parameters":[],"responses":{"200":{"description":"A zone is a set of configs grouped by the zone <code>name</code>.<br>\nFor flexible configuration mapping, the <code>name</code>\ncan be set to a listener's <code>zone</code> config.<br>\nNOTE: A builtin zone named <code>default</code> is auto created\nand can not be deleted.","content":{"application/json":{"schema":{"properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.zone"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *zones*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.zone"}},"type":"object"}}}},"responses":{"200":{"description":"A zone is a set of configs grouped by the zone <code>name</code>.<br>\nFor flexible configuration mapping, the <code>name</code>\ncan be set to a listener's <code>zone</code> config.<br>\nNOTE: A builtin zone named <code>default</code> is auto created\nand can not be deleted.","content":{"application/json":{"schema":{"properties":{"$name":{"$ref":"#/components/schemas/emqx_schema.zone"}},"type":"object"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/authorization/sources/{type}":{"delete":{"description":"Delete source","parameters":[{"in":"path","name":"type","required":true,"schema":{"enum":["file","http","mongodb","mysql","postgresql","redis","built-in-database"],"type":"string"}}],"responses":{"204":{"description":"Deleted"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"}},"security":[{"application":[]}],"tags":["authorization"]},"get":{"description":"List authorization sources","parameters":[{"in":"path","name":"type","required":true,"schema":{"enum":["file","http","mongodb","mysql","postgresql","redis","built-in-database"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"examples":{"file":{"summary":"File","value":"{\"enable\":true,\"rules\":\"{allow,{username,\\\"^dashboard?\\\"},subscribe,[\\\"$SYS/#\\\"]}.\\n{allow,{ipaddr,\\\"127.0.0.1\\\"},all,[\\\"$SYS/#\\\",\\\"#\\\"]}.\",\"type\":\"file\"}"},"redis":{"summary":"Redis","value":"{\"auto_reconnect\":true,\"cmd\":\"HGETALL mqtt_authz\",\"enable\":true,\"pool_size\":1,\"redis_type\":\"single\",\"server\":\"127.0.0.1:3306\",\"type\":\"redis\"}"}},"schema":{"$ref":"#/components/schemas/sources"}}},"description":"OK"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Not Found"}},"security":[{"application":[]}],"tags":["authorization"]},"put":{"description":"Update source","parameters":[{"in":"path","name":"type","required":true,"schema":{"enum":["file","http","mongodb","mysql","postgresql","redis","built-in-database"],"type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"file":{"summary":"File","value":"{\"enable\":true,\"rules\":\"{allow,{username,\\\"^dashboard?\\\"},subscribe,[\\\"$SYS/#\\\"]}.\\n{allow,{ipaddr,\\\"127.0.0.1\\\"},all,[\\\"$SYS/#\\\",\\\"#\\\"]}.\",\"type\":\"file\"}"},"redis":{"summary":"Redis","value":"{\"auto_reconnect\":true,\"cmd\":\"HGETALL mqtt_authz\",\"enable\":true,\"pool_size\":1,\"redis_type\":\"single\",\"server\":\"127.0.0.1:3306\",\"type\":\"redis\"}"}},"schema":{"$ref":"#/components/schemas/sources"}}}},"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Not Found"}},"security":[{"application":[]}],"tags":["authorization"]}},"/authentication/{id}":{"delete":{"description":"Delete authenticator from global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Authenticator deleted"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]},"get":{"description":"Get authenticator from global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]},"put":{"description":"Update authenticator from global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"409":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CONFLICT"],"type":"string"},"message":{"description":"Details description of the error.","example":"Conflict","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]}},"/nodes/{node_name}":{"get":{"description":"Get node info","parameters":[{"description":"node name","example":"emqx@127.0.0.1","in":"path","name":"node_name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"config_path":{"description":"EMQ X config file location","type":"string"},"connections":{"description":"Number of clients currently connected to this node","type":"integer"},"load1":{"description":"CPU average load in 1 minute","type":"string"},"load15":{"description":"CPU average load in 15 minute","type":"string"},"load5":{"description":"CPU average load in 5 minute","type":"string"},"log_path":{"description":"EMQ X log file location","type":"string"},"max_fds":{"description":"Maximum file descriptor limit for the operating system","type":"integer"},"memory_total":{"description":"VM allocated system memory","type":"string"},"memory_used":{"description":"VM occupied system memory","type":"string"},"node":{"description":"Node name","type":"string"},"node_status":{"description":"Node status","type":"string"},"otp_release":{"description":"Erlang/OTP version used by EMQ X Broker","type":"string"},"process_available":{"description":"Number of available processes","type":"integer"},"process_used":{"description":"Number of used processes","type":"integer"},"sys_path":{"description":"EMQ X system file location","type":"string"},"uptime":{"description":"EMQ X Broker runtime, millisecond","type":"integer"},"version":{"description":"EMQ X Broker version","type":"string"}},"type":"object"}}},"description":"Get EMQ X Nodes info by name"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["SOURCE_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Node error"}},"security":[{"application":[]}],"tags":["nodes"]}},"/mqtt/topic_metrics/{topic}":{"delete":{"description":"Deregister topic metrics","parameters":[{"description":"Notice: Topic string url must encode","in":"path","name":"topic","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Deregister topic metrics"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["ERROR_TOPIC"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Topic not found"}},"security":[{"application":[]}],"tags":["mqtt"]},"get":{"description":"Get topic metrics","parameters":[{"description":"Notice: Topic string url must encode","in":"path","name":"topic","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"create_time":{"description":"Date time, rfc3339","type":"string"},"metrics":{"properties":{"messages.dropped.count":{"type":"integer"},"messages.dropped.rate":{"type":"number"},"messages.in.count":{"type":"integer"},"messages.in.rate":{"type":"number"},"messages.out.count":{"type":"integer"},"messages.out.rate":{"type":"number"},"messages.qos0.in.count":{"type":"integer"},"messages.qos0.in.rate":{"type":"number"},"messages.qos0.out.count":{"type":"integer"},"messages.qos0.out.rate":{"type":"number"},"messages.qos1.in.count":{"type":"integer"},"messages.qos1.in.rate":{"type":"number"},"messages.qos1.out.count":{"type":"integer"},"messages.qos1.out.rate":{"type":"number"},"messages.qos2.in.count":{"type":"integer"},"messages.qos2.in.rate":{"type":"number"},"messages.qos2.out.count":{"type":"integer"},"messages.qos2.out.rate":{"type":"number"}},"type":"object"},"reset_time":{"description":"Nullable. Date time, rfc3339.","type":"string"},"topic":{"type":"string"}},"type":"object"}}},"description":"Topic metrics"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["ERROR_TOPIC"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Topic not found"}},"security":[{"application":[]}],"tags":["mqtt"]}},"/listeners/{listener_id}/authentication/{id}/users/{user_id}":{"delete":{"description":"Update user in authenticator in listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"user_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"User deleted"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]},"get":{"description":"Get user from authenticator in listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"user_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]},"put":{"description":"Update user in authenticator in listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"user_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"example":{"regular_user":{"summary":"Update regular user","value":{"password":"newsecret"}},"super_user":{"summary":"Update user and promote to superuser","value":{"is_superuser":true,"password":"newsecret"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_update"}}}},"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]}},"/monitor":{"get":{"description":"List monitor data","parameters":[{"in":"query","name":"aggregate","required":false,"schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"connection":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"dropped":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"received":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"route":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"sent":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"subscriptions":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"}},"type":"object"}}},"description":"Monitor count data"}},"security":[{"application":[]}],"tags":["monitor"]}},"/banned/{as}/{who}":{"delete":{"description":"Delete banned","parameters":[{"description":"Banned type","example":"username","in":"path","name":"as","required":true,"schema":{"enum":["clientid","username","peerhost"],"type":"string"}},{"description":"Client info as banned type","example":"Badass","in":"path","name":"who","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Delete banned success"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Banned not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["banned"]}},"/clients":{"get":{"description":"List clients","parameters":[{"description":"Page","in":"query","name":"page","required":false,"schema":{"type":"integer"}},{"description":"Page limit","in":"query","name":"limit","required":false,"schema":{"type":"integer"}},{"description":"Node name","in":"query","name":"node","required":false,"schema":{"type":"string"}},{"description":"User name","in":"query","name":"username","required":false,"schema":{"type":"string"}},{"in":"query","name":"zone","required":false,"schema":{"type":"string"}},{"description":"Client's IP address","in":"query","name":"ip_address","required":false,"schema":{"type":"string"}},{"description":"The current connection status of the client, the possible values are connected,idle,disconnected","in":"query","name":"conn_state","required":false,"schema":{"enum":["connected","idle","disconnected"],"type":"string"}},{"description":"Whether the client uses a new session","in":"query","name":"clean_start","required":false,"schema":{"type":"boolean"}},{"description":"Client protocol name, the possible values are MQTT,CoAP,LwM2M,MQTT-SN","in":"query","name":"proto_name","required":false,"schema":{"enum":["MQTT","CoAP","LwM2M","MQTT-SN"],"type":"string"}},{"description":"Client protocol version","in":"query","name":"proto_ver","required":false,"schema":{"type":"string"}},{"description":"Fuzzy search of client identifier by substring method","in":"query","name":"like_clientid","required":false,"schema":{"type":"string"}},{"description":"Client user name, fuzzy search by substring","in":"query","name":"like_username","required":false,"schema":{"type":"string"}},{"description":"Search client session creation time by greater than or equal method, rfc3339 or timestamp(millisecond)","in":"query","name":"gte_created_at","required":false,"schema":{"type":"string"}},{"description":"Search client session creation time by less than or equal method, rfc3339 or timestamp(millisecond)","in":"query","name":"lte_created_at","required":false,"schema":{"type":"string"}},{"description":"Search client connection creation time by greater than or equal method, rfc3339 or timestamp(millisecond)","in":"query","name":"gte_connected_at","required":false,"schema":{"type":"string"}},{"description":"Search client connection creation time by less than or equal method, rfc3339 or timestamp(millisecond) ","in":"query","name":"lte_connected_at","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/client"},"type":"array"}}},"description":"List clients 200 OK"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INVALID_PARAMETER"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Invalid parameters"}},"security":[{"application":[]}],"tags":["clients"]}},"/configs/conn_congestion":{"get":{"description":"Get the sub-configurations under *conn_congestion*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.conn_congestion"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *conn_congestion*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.conn_congestion"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.conn_congestion"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/clients/{clientid}/authz_cache":{"delete":{"description":"Clean client authz cache","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Clean client authz cache successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]},"get":{"description":"Get client authz cache","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/authz_cache"}}},"description":"Get client authz cache"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]}},"/authentication/{id}/import_users":{"post":{"description":"Import users into authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"import_csv":{"summary":"Import users from CSV file","value":{"filename":"/path/to/user/data.csv"}},"import_json":{"summary":"Import users from JSON file","value":{"filename":"/path/to/user/data.json"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_import_users"}}}},"responses":{"204":{"description":"Users imported"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]}},"/configs/cluster":{"get":{"description":"Get the sub-configurations under *cluster*","parameters":[],"responses":{"200":{"description":"EMQ X nodes can form a cluster to scale up the total capacity.<br>Here holds the configs to instruct how individual nodes can discover each other.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.cluster"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *cluster*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.cluster"}}}},"responses":{"200":{"description":"EMQ X nodes can form a cluster to scale up the total capacity.<br>Here holds the configs to instruct how individual nodes can discover each other.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.cluster"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/emqx_dashboard":{"get":{"description":"Get the sub-configurations under *emqx_dashboard*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/dashboard.emqx_dashboard"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *emqx_dashboard*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/dashboard.emqx_dashboard"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/dashboard.emqx_dashboard"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/connectors":{"get":{"description":"List all connectors","parameters":[],"responses":{"200":{"description":"List of connectors","content":{"application/json":{"schema":{"items":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector_info"}]},"type":"array"}}}}},"security":[{"application":[]}],"summary":"List connectors","tags":["connectors"]},"post":{"description":"Create a new connector by given Id <br>The Id must be of format <type>:<name>","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector_info"}]}}}},"responses":{"201":{"description":"","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector_info"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"ALREADY_EXISTS","type":"string"},"message":{"example":"connector already exists","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"summary":"Create connector","tags":["connectors"]}},"/gateway/{name}/clients/{clientid}/subscriptions":{"get":{"description":"Get the gateway client subscriptions","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}},{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"nl":{"description":"No Local option, enum: 0, 1","type":"integer"},"qos":{"description":"QoS level, enum: 0, 1, 2","type":"integer"},"rap":{"description":"Retain as Published option, enum: 0, 1","type":"integer"},"rh":{"description":"Retain Handling option, enum: 0, 1, 2","type":"integer"},"sub_props":{"properties":{"subid":{"description":"Only stomp protocol, an uniquely identity for the subscription. range: 1-65535.","type":"string"}},"type":"object"},"topic":{"description":"Topic Fillter","type":"string"}},"type":"object"},"type":"array"}}},"description":"Client subscriptions"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Get the gateway client subscriptions","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}},{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"nl":{"description":"No Local option, enum: 0, 1","type":"integer"},"qos":{"description":"QoS level, enum: 0, 1, 2","type":"integer"},"rap":{"description":"Retain as Published option, enum: 0, 1","type":"integer"},"rh":{"description":"Retain Handling option, enum: 0, 1, 2","type":"integer"},"sub_props":{"properties":{"subid":{"description":"Only stomp protocol, an uniquely identity for the subscription. range: 1-65535.","type":"string"}},"type":"object"},"topic":{"description":"Topic Fillter","type":"string"}},"type":"object"}}}},"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/configs/listeners":{"get":{"description":"Get the sub-configurations under *listeners*","parameters":[],"responses":{"200":{"description":"MQTT listeners identified by their protocol type and assigned names","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.listeners"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *listeners*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.listeners"}}}},"responses":{"200":{"description":"MQTT listeners identified by their protocol type and assigned names","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.listeners"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/authentication/users":{"get":{"description":"Get the users for the authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Page Index","in":"query","name":"page","schema":{"example":100,"nullable":true,"type":"integer"}},{"description":"Page Limit","in":"query","name":"limit","schema":{"example":100,"nullable":true,"type":"integer"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Add user for the authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"password":"secret","user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"password":"secret","user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_create"}}}},"responses":{"201":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/configs/psk":{"get":{"description":"Get the sub-configurations under *psk*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_psk_schema.psk"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *psk*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_psk_schema.psk"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_psk_schema.psk"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/authentication":{"delete":{"description":"Remove the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"204":{"description":"Authentication does not initiated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Add authentication for the gateway","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"204":{"description":"Added"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"put":{"description":"Update authentication for the gateway","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"204":{"description":"Updated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/configs/authentication":{"get":{"description":"Get the sub-configurations under *authentication*","parameters":[],"responses":{"200":{"description":"Default authentication configs for all MQTT listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","content":{"application/json":{"schema":{"oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *authentication*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}}}},"responses":{"200":{"description":"Default authentication configs for all MQTT listeners.<br>\nFor per-listener overrides see <code>authentication</code>\nin listener configs<br>\nAuthentication can be one single authenticator instance or a chain of authenticators as an array.\nWhen authenticating a login (username, client ID, etc.) the authenticators are checked\nin the configured order.<br>\nEMQ X comes with a set of pre-built autenticators, for more details, see\n<a href=\"#root-authenticator_config\">autenticator_config<a>\n","content":{"application/json":{"schema":{"oneOf":[{"items":{"example":{},"type":"object"},"type":"array"},{"example":{},"type":"object"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/stats":{"get":{"description":"EMQ X stats","parameters":[{"in":"query","name":"aggregate","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/stats_info"}}},"description":"List stats ok"}},"security":[{"application":[]}],"tags":["stats"]}},"/mqtt/retainer/messages":{"get":{"description":"lookup matching messages","parameters":[{"description":"Page","in":"query","name":"page","schema":{"default":1,"type":"integer"}},{"description":"Page size","in":"query","name":"limit","schema":{"default":100,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"from_clientid":{"description":"Publisher ClientId","type":"string"},"from_username":{"description":"Publisher Username","type":"string"},"id":{"description":"Message ID","type":"string"},"publish_at":{"description":"Publish datetime, in RFC 3339 format","type":"string"},"qos":{"description":"MQTT QoS","enum":[0,1,2],"type":"integer"},"topic":{"description":"MQTT Topic","type":"string"}},"type":"object"},"type":"array"}}},"description":"List retained messages"},"405":{"description":"NotAllowed"}},"security":[{"application":[]}],"tags":["mqtt"]}},"/gateway/lwm2m/{clientid}/lookup_cmd":{"get":{"description":"Look up resource","parameters":[{"example":"urn:oma:lwm2m:oma:2","in":"path","name":"clientid","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":"/3/0/7","in":"query","name":"path","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":"discover","in":"query","name":"action","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"clientid":{"example":"urn:oma:lwm2m:oma:2","type":"string"},"path":{"example":"/3/0/7","type":"string"},"action":{"example":"discover","type":"string"},"codeMsg":{"example":"reply_not_received","type":"string"},"content":{"items":{"$ref":"#/components/schemas/lwm2m.resource"},"type":"array"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CLIENT_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Client not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["lwm2m"]}},"/configs/mqtt":{"get":{"description":"Get the sub-configurations under *mqtt*","parameters":[],"responses":{"200":{"description":"Global MQTT configuration.<br>\nThe configs here work as default values which can be overriden\nin <code>zone</code> configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.mqtt"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *mqtt*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.mqtt"}}}},"responses":{"200":{"description":"Global MQTT configuration.<br>\nThe configs here work as default values which can be overriden\nin <code>zone</code> configs","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.mqtt"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/authorization/settings":{"get":{"description":"Get authorization settings","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"cache":{"properties":{"enable":{"example":true,"type":"boolean"},"max_size":{"example":32,"type":"number"},"ttl":{"example":"1m","type":"string"}},"type":"object"},"deny_action":{"example":"ignore","type":"string"},"no_match":{"example":"allow","type":"string"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["authorization"]},"put":{"description":"Update authorization settings","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"cache":{"properties":{"enable":{"example":true,"type":"boolean"},"max_size":{"example":32,"type":"number"},"ttl":{"example":"1m","type":"string"}},"type":"object"},"deny_action":{"example":"ignore","type":"string"},"no_match":{"example":"allow","type":"string"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"cache":{"properties":{"enable":{"example":true,"type":"boolean"},"max_size":{"example":32,"type":"number"},"ttl":{"example":"1m","type":"string"}},"type":"object"},"deny_action":{"example":"ignore","type":"string"},"no_match":{"example":"allow","type":"string"}},"type":"object"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"}},"security":[{"application":[]}],"tags":["authorization"]}},"/configs/gateway":{"get":{"description":"Get the sub-configurations under *gateway*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/gateway.gateway"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *gateway*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/gateway.gateway"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/gateway.gateway"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/nodes":{"get":{"description":"List EMQ X nodes","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"config_path":{"description":"EMQ X config file location","type":"string"},"connections":{"description":"Number of clients currently connected to this node","type":"integer"},"load1":{"description":"CPU average load in 1 minute","type":"string"},"load15":{"description":"CPU average load in 15 minute","type":"string"},"load5":{"description":"CPU average load in 5 minute","type":"string"},"log_path":{"description":"EMQ X log file location","type":"string"},"max_fds":{"description":"Maximum file descriptor limit for the operating system","type":"integer"},"memory_total":{"description":"VM allocated system memory","type":"string"},"memory_used":{"description":"VM occupied system memory","type":"string"},"node":{"description":"Node name","type":"string"},"node_status":{"description":"Node status","type":"string"},"otp_release":{"description":"Erlang/OTP version used by EMQ X Broker","type":"string"},"process_available":{"description":"Number of available processes","type":"integer"},"process_used":{"description":"Number of used processes","type":"integer"},"sys_path":{"description":"EMQ X system file location","type":"string"},"uptime":{"description":"EMQ X Broker runtime, millisecond","type":"integer"},"version":{"description":"EMQ X Broker version","type":"string"}},"type":"object"},"type":"array"}}},"description":"List EMQ X Nodes"}},"security":[{"application":[]}],"tags":["nodes"]}},"/configs/rpc":{"get":{"description":"Get the sub-configurations under *rpc*","parameters":[],"responses":{"200":{"description":"EMQ X uses a library called <code>gen_rpc</code> for inter-broker RPCs.<br>Most of the time the default config should work, but in case you need to do performance fine-turning or experiment a bit, this is where to look.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.rpc"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *rpc*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.rpc"}}}},"responses":{"200":{"description":"EMQ X uses a library called <code>gen_rpc</code> for inter-broker RPCs.<br>Most of the time the default config should work, but in case you need to do performance fine-turning or experiment a bit, this is where to look.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.rpc"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/authentication/{id}/move":{"post":{"description":"Move authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"move_before_password-based:built-in-database":{"summary":"Move authenticator to the position preceding some other authenticator","value":{"position":"before:password-based:built-in-database"}},"move_to_bottom":{"summary":"Move authenticator to the end of the chain","value":{"position":"bottom"}},"move_to_top":{"summary":"Move authenticator to the beginning of the chain","value":{"position":"top"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_move"}}}},"responses":{"204":{"description":"Authenticator moved"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]}},"/configs/flapping_detect":{"get":{"description":"Get the sub-configurations under *flapping_detect*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.flapping_detect"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *flapping_detect*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.flapping_detect"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.flapping_detect"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/clients/{clientid}/keepalive":{"put":{"description":"set the online client keepalive by second ","parameters":[{"in":"path","name":"clientid","required":true,"schema":{"type":"string"}},{"in":"query","name":"interval","required":true,"schema":{"type":"integer"}}],"responses":{"200":{"description":"ok"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Client id not found"}},"security":[{"application":[]}],"tags":["clients"]}},"/configs/persistent_session_store":{"get":{"description":"Get the sub-configurations under *persistent_session_store*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.persistent_session_store"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *persistent_session_store*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.persistent_session_store"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.persistent_session_store"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/listeners/{id}/authentication":{"delete":{"description":"Remove authentication for the listener","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get the listener's authentication info","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"204":{"description":"Authentication does not initiated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Add authentication for the listener","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"204":{"description":"Added"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"put":{"description":"Update authentication for the listener","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"jwt":{"summary":"JWT authentication","value":{"algorithm":"hmac-based","mechanism":"jwt","secret":"mysecret","secret_base64_encoded":false,"use_jwks":false,"verify_claims":{"username":"${mqtt-username}"}}},"password-based:built-in-database":{"summary":"Built-in password-based authentication","value":{"backend":"built-in-database","mechanism":"password-based","password_hash_algorithm":{"name":"sha256"},"user_id_type":"username"}},"password-based:http":{"summary":"Password-based authentication througth external HTTP API","value":{"backend":"http","body":{"password":"${mqtt-password}","username":"${mqtt-username}"},"connect_timeout":5000,"enable_pipelining":true,"headers":{"content-type":"application/json"},"mechanism":"password-based","method":"post","pool_size":8,"request_timeout":5000,"ssl":{"enable":false},"url":"http://127.0.0.2:8080"}},"password-based:mongodb":{"summary":"Password-based authentication with MongoDB backend","value":{"backend":"mongodb","collection":"users","database":"example","is_superuser_field":"is_superuser","mechanism":"password-based","password_hash_algorithm":"sha256","password_hash_field":"password_hash","salt_field":"salt","salt_position":"prefix","selector":{"username":"${mqtt-username}"},"server":"127.0.0.1:27017"}},"password-based:redis":{"summary":"Password-based authentication with Redis backend","value":{"backend":"redis","database":0,"mechanism":"password-based","password_hash_algorithm":"sha256","query":"HMGET ${mqtt-username} password_hash salt","salt_position":"prefix","server":"127.0.0.1:6379"}}},"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"204":{"description":"Updated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/monitor/nodes/{node}":{"get":{"description":"List monitor data","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"connection":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"dropped":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"received":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"route":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"sent":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"},"subscriptions":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"}},"type":"object"}}},"description":"Monitor count data in node"}},"security":[{"application":[]}],"tags":["monitor"]}},"/routes/{topic}":{"get":{"description":"EMQ X routes","parameters":[{"description":"Topic string, url encoding","in":"path","name":"topic","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"node":{"type":"string"},"topic":{"type":"string"}},"type":"object"}}},"description":"Route info"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["TOPIC_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Topic not found"}},"security":[{"application":[]}],"tags":["routes"]}},"/configs/stats":{"get":{"description":"Get the sub-configurations under *stats*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.stats"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *stats*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.stats"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.stats"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway":{"get":{"description":"Get gateway list","parameters":[{"in":"query","name":"status","required":false,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"created_at":{"description":"","type":"string"},"current_connections":{"description":"","type":"integer"},"listeners":{"items":{"properties":{"id":{"description":"Listener ID","type":"string"},"running":{"description":"Listener Running status","type":"boolean"},"type":{"description":"Listener Type","enum":["tcp","ssl","udp","dtls"],"type":"string"}},"type":"object"},"type":"array"},"max_connections":{"description":"","type":"integer"},"name":{"description":"Gateway Name","type":"string"},"started_at":{"description":"","type":"string"},"status":{"description":"Gateway Status","enum":["running","stopped","unloaded"],"type":"string"},"stopped_at":{"description":"","type":"string"}},"type":"object"},"type":"array"}}},"description":"Gateway list"}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Load a gateway","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"authentication":{"properties":{"mechanism":{"example":"password-based","type":"string"},"name":{"example":"authenticator1","type":"string"},"server_type":{"example":"built-in-database","type":"string"},"user_id_type":{"example":"clientid","type":"string"}},"type":"object"},"clientinfo_override":{"properties":{"password":{"example":"${Packet.headers.passcode}","type":"string"},"username":{"example":"${Packet.headers.login}","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"frame":{"properties":{"max_body_length":{"example":8192,"type":"number"},"max_headers":{"example":10,"type":"number"},"max_headers_length":{"example":1024,"type":"number"}},"type":"object"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":16,"type":"number"},"active_n":{"example":100,"type":"number"},"bind":{"example":61613,"type":"number"},"id":{"example":"stomp:tcp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":1024000,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"tcp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"stomp","type":"string"}},"type":"object"},{"properties":{"broadcast":{"example":true,"type":"boolean"},"clientinfo_override":{"properties":{"password":{"example":"abc","type":"string"},"username":{"example":"mqtt_sn_user","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_qos3":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"gateway_id":{"example":1,"type":"number"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"bind":{"example":1884,"type":"number"},"id":{"example":"mqttsn:udp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240000,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"mqtt-sn","type":"string"},"predefined":{"items":{"properties":{"id":{"example":1,"type":"number"},"topic":{"example":"/predefined/topic/name/hello","type":"string"}},"type":"object"},"type":"array"}},"type":"object"},{"properties":{"authentication":{"properties":{"mechanism":{"example":"password-based","type":"string"},"name":{"example":"authenticator1","type":"string"},"server_type":{"example":"built-in-database","type":"string"},"user_id_type":{"example":"clientid","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"heartbeat":{"example":"30s","type":"string"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":8,"type":"number"},"bind":{"example":5683,"type":"number"},"id":{"example":"coap:udp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"coap","type":"string"},"notify_type":{"example":"qos","type":"string"},"publish_qos":{"example":"qos1","type":"string"},"subscribe_qos":{"example":"qos0","type":"string"}},"type":"object"},{"properties":{"auto_observe":{"example":false,"type":"boolean"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"idle_timeout":{"example":"30s","type":"string"},"lifetime_max":{"example":"86400s","type":"string"},"lifetime_min":{"example":"1s","type":"string"},"listeners":{"items":{"properties":{"bind":{"example":5783,"type":"number"},"id":{"example":"lwm2m:udp:default","type":"string"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"lwm2m/%e/","type":"string"},"name":{"example":"lwm2m","type":"string"},"qmode_time_windonw":{"example":22,"type":"number"},"translators":{"properties":{"command":{"example":"dn/#","type":"string"},"notify":{"example":"up/notify","type":"string"},"register":{"example":"up/resp","type":"string"},"response":{"example":"up/resp","type":"string"},"update":{"example":"up/resp","type":"string"}},"type":"object"},"update_msg_publish_condition":{"example":"contains_object_list","type":"string"},"xml_dir":{"example":"etc/lwm2m_xml","type":"string"}},"type":"object"},{"properties":{"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"handler":{"properties":{"address":{"example":"http://127.0.0.1:9001","type":"string"}},"type":"object"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":8,"type":"number"},"bind":{"example":7993,"type":"number"},"id":{"example":"exproto:tcp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"tcp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"exproto","type":"string"},"server":{"properties":{"bind":{"example":9100,"type":"number"}},"type":"object"}},"type":"object"}]}}}},"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/mqtt/delayed":{"get":{"description":"Get delayed status","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.delayed"}}}}},"security":[{"application":[]}],"summary":"Get delayed status","tags":["mqtt"]},"put":{"description":"Enable or disable delayed, set max delayed messages","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.delayed"}}}},"responses":{"200":{"description":"Enable or disable delayed successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.delayed"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Max limit illegality","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["mqtt"]}},"/configs/delayed":{"get":{"description":"Get the sub-configurations under *delayed*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.delayed"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *delayed*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.delayed"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.delayed"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/users/{username}/change_pwd":{"put":{"description":"Update dashboard users password","parameters":[{"example":"admin","in":"path","name":"username","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"required":["new_pwd","old_pwd"],"properties":{"old_pwd":{"example":"binary-example","type":"string"},"new_pwd":{"example":"binary-example","type":"string"}},"type":"object"}}}},"responses":{"204":{"description":"Update user password successfully"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"UPDATE_FAIL","type":"string"},"message":{"example":"Failed Reason","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["dashboard"]}},"/monitor/current":{"get":{"description":"Current monitor data","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"connection":{"type":"integer"},"received":{"type":"integer"},"sent":{"type":"integer"},"subscription":{"type":"integer"}},"type":"object"}}},"description":"Current monitor data"}},"security":[{"application":[]}],"tags":["monitor"]}},"/configs/connectors":{"get":{"description":"Get the sub-configurations under *connectors*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_connector_schema.connectors"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *connectors*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_connector_schema.connectors"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_connector_schema.connectors"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/listeners/{id}/authentication/users":{"get":{"description":"Get the users for the authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Page Index","in":"query","name":"page","schema":{"example":100,"nullable":true,"type":"integer"}},{"description":"Page Limit","in":"query","name":"limit","schema":{"example":100,"nullable":true,"type":"integer"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Add user for the authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"password":"secret","user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"password":"secret","user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_create"}}}},"responses":{"201":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/rule_events":{"get":{"description":"List all events can be used in rules","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"created_at":{"description":"The time that this rule was created, in rfc3339 format","example":"2021-09-18T13:57:29+08:00","type":"string"},"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"id":{"description":"The Id for the rule","type":"string"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"},"type":"array"}}},"description":"List events successfully"}},"security":[{"application":[]}],"tags":["rule_events"]}},"/prometheus/stats":{"get":{"description":"Get Prometheus Data","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["prometheus"]}},"/authorization/sources/{type}/move":{"post":{"description":"Change the order of sources","parameters":[{"in":"path","name":"type","required":true,"schema":{"enum":["file","http","mongodb","mysql","postgresql","redis","built-in-database"],"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"position":{"oneOf":[{"enum":["top","bottom"],"type":"string"},{"properties":{"after":{"type":"string"}},"required":["after"],"type":"object"},{"properties":{"before":{"type":"string"}},"required":["before"],"type":"object"}]}},"required":["position"],"type":"object"}}}},"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Not Found"}},"security":[{"application":[]}],"tags":["authorization"]}},"/gateway/{name}/clients":{"get":{"description":"Get the gateway clients","parameters":[{"in":"path","name":"name","required":true,"schema":{"type":"string"}},{"in":"query","name":"node","required":false,"schema":{"type":"string"}},{"in":"query","name":"clientid","required":false,"schema":{"type":"string"}},{"in":"query","name":"username","required":false,"schema":{"type":"string"}},{"in":"query","name":"ip_address","required":false,"schema":{"type":"string"}},{"in":"query","name":"conn_state","required":false,"schema":{"type":"string"}},{"in":"query","name":"proto_ver","required":false,"schema":{"type":"string"}},{"in":"query","name":"clean_start","required":false,"schema":{"type":"boolean"}},{"in":"query","name":"like_clientid","required":false,"schema":{"type":"string"}},{"in":"query","name":"like_username","required":false,"schema":{"type":"string"}},{"in":"query","name":"gte_created_at","required":false,"schema":{"type":"string"}},{"in":"query","name":"lte_created_at","required":false,"schema":{"type":"string"}},{"in":"query","name":"gte_connected_at","required":false,"schema":{"type":"string"}},{"in":"query","name":"lte_connected_at","required":false,"schema":{"type":"string"}},{"description":"Page","in":"query","name":"page","schema":{"default":1,"type":"integer"}},{"description":"Page size","in":"query","name":"limit","schema":{"default":100,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"data":{"items":{"properties":{"recv_cnt":{"description":"Number of TCP packets received","type":"integer"},"send_msg":{"description":"Number of PUBLISH packets sent","type":"integer"},"clean_start":{"description":"Indicate whether the client is using a brand new session","type":"boolean"},"heap_size":{"description":"Process heap size with the unit of byte","type":"integer"},"node":{"description":"Name of the node to which the client is connected","type":"string"},"inflight_cnt":{"description":"Current length of inflight","type":"integer"},"disconnected_at":{"description":"Client offline time, This field is only valid and returned when connected is false","type":"string"},"username":{"description":"Username of client when connecting","type":"string"},"send_pkt":{"description":"Number of MQTT packets sent","type":"integer"},"subscriptions_cnt":{"description":"Number of subscriptions established by this client","type":"integer"},"clientid":{"description":"Client identifier","type":"string"},"reductions":{"description":"Erlang reduction","type":"integer"},"recv_pkt":{"description":"Number of MQTT packets received","type":"integer"},"send_cnt":{"description":"Number of TCP packets sent","type":"integer"},"awaiting_rel_cnt":{"description":"v4 api name [awaiting_rel] Number of awaiting PUBREC packet","type":"integer"},"port":{"description":"Client's port","type":"integer"},"recv_msg":{"description":"Number of PUBLISH packets received","type":"integer"},"created_at":{"description":"Session creation time","type":"string"},"expiry_interval":{"description":"Session expiration interval, with the unit of second","type":"integer"},"is_bridge":{"description":"Indicates whether the client is connectedvia bridge","type":"boolean"},"connected_at":{"description":"Client connection time","type":"string"},"send_oct":{"description":"Number of bytes sent","type":"integer"},"mqueue_len":{"description":"Current length of message queue","type":"integer"},"mqueue_max":{"description":"v4 api name [max_mqueue]. Maximum length of message queue","type":"integer"},"inflight_max":{"description":"v4 api name [max_inflight]. Maximum length of inflight","type":"integer"},"mqueue_dropped":{"description":"Number of messages dropped by the message queue due to exceeding the length","type":"integer"},"subscriptions_max":{"description":"v4 api name [max_subscriptions] Maximum number of subscriptions allowed by this client","type":"integer"},"mailbox_len":{"description":"Process mailbox size","type":"integer"},"awaiting_rel_max":{"description":"v4 api name [max_awaiting_rel]. Maximum allowed number of awaiting PUBREC packet","type":"integer"},"proto_name":{"description":"Client protocol name","type":"string"},"recv_oct":{"description":"Number of bytes received by EMQ X Broker (the same below)","type":"integer"},"keepalive":{"description":"keepalive time, with the unit of second","type":"integer"},"ip_address":{"description":"Client's IP address","type":"string"},"proto_ver":{"description":"Protocol version used by the client","type":"string"},"connected":{"description":"Whether the client is connected","type":"boolean"}},"type":"object"},"type":"array"},"meta":{"properties":{"count":{"type":"integer"},"limit":{"type":"integer"},"page":{"type":"integer"}},"type":"object"}},"type":"object"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/mqtt/delayed/messages":{"get":{"description":"List delayed messages","parameters":[{"$ref":"#/components/parameters/public.page"},{"$ref":"#/components/parameters/public.limit"}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_delayed_api.message"},"type":"array"},"meta":{"properties":{"page":{"example":100,"type":"integer"},"limit":{"example":100,"type":"integer"},"count":{"example":100,"type":"integer"}},"type":"object"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["mqtt"]}},"/configs/event_message":{"get":{"description":"Get the sub-configurations under *event_message*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.event_message"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *event_message*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.event_message"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/modules.event_message"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/authentication/users/{uid}":{"delete":{"description":"Delete the user for the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"uid","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"User Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get user info from the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"uid","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"put":{"description":"Update the user info for the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"uid","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Update regular user","value":{"password":"newsecret"}},"super_user":{"summary":"Update user and promote to superuser","value":{"is_superuser":true,"password":"newsecret"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_update"}}}},"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/nodes/{node}/listeners/{id}/operation/{operation}":{"put":{"description":"Restart listeners on all nodes in the cluster","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}},{"in":"path","name":"id","required":true,"schema":{"example":"tcp:default","type":"string"}},{"example":"restart","in":"path","name":"operation","required":true,"schema":{"enum":["start","stop","restart"],"type":"string"}}],"responses":{"200":{"description":"Operation success"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Operation failed"}},"security":[{"application":[]}],"tags":["nodes"]}},"/rule_test":{"post":{"description":"Test a rule","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"context":{"properties":{"clientid":{"description":"The Client ID","example":"\"c_emqx\"","type":"string"},"event_type":{"description":"Event Type","enum":["message_publish","message_acked","message_delivered","message_dropped","session_subscribed","session_unsubscribed","client_connected","client_disconnected"],"example":"message_publish","type":"string"},"topic":{"description":"The Topic","example":"t/1","type":"string"}},"type":"object"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"}}},"description":"Rule parameters"},"responses":{"200":{"content":{"application/json":{"schema":{"type":"object"}}},"description":"Rule Test Pass"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_ARGS"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Invalid Parameters"},"412":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["NOT_MATCH"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"SQL Not Match"}},"security":[{"application":[]}],"tags":["rule_test"]}},"/metrics":{"get":{"description":"EMQ X metrics","parameters":[{"in":"query","name":"aggregate","schema":{"type":"boolean"}}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/metrics_info"}}},"description":"List all metrics"}},"security":[{"application":[]}],"tags":["metrics"]}},"/authentication/{id}/users":{"get":{"description":"List users in authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Page Index","in":"query","name":"page","schema":{"example":100,"nullable":true,"type":"integer"}},{"description":"Page Limit","in":"query","name":"limit","schema":{"example":100,"nullable":true,"type":"integer"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"data":[{"user_id":"user1"},{"is_superuser":true,"user_id":"user2"}],"meta":{"count":300,"limit":20,"page":0}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_users"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]},"post":{"description":"Create users for authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"password":"secret","user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"password":"secret","user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_create"}}}},"responses":{"201":{"description":"","content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(global)"]}},"/gateway/{name}/listeners/{id}/authentication/import_users":{"post":{"description":"Import users into the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"import_csv":{"summary":"Import users from CSV file","value":{"filename":"/path/to/user/data.csv"}},"import_json":{"summary":"Import users from JSON file","value":{"filename":"/path/to/user/data.json"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_import_users"}}}},"responses":{"204":{"description":"Imported"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/mqtt/retainer/message/{topic}":{"delete":{"description":"delete matching messages","parameters":[{"in":"path","name":"topic","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"Successed"},"405":{"description":"NotAllowed"}},"security":[{"application":[]}],"tags":["mqtt"]},"get":{"description":"lookup matching messages","parameters":[{"in":"path","name":"topic","required":true,"schema":{"type":"string"}},{"description":"Page","in":"query","name":"page","schema":{"default":1,"type":"integer"}},{"description":"Page size","in":"query","name":"limit","schema":{"default":100,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"from_clientid":{"description":"Publisher ClientId","type":"string"},"from_username":{"description":"Publisher Username","type":"string"},"id":{"description":"Message ID","type":"string"},"payload":{"description":"MQTT Payload","type":"string"},"publish_at":{"description":"Publish datetime, in RFC 3339 format","type":"string"},"qos":{"description":"MQTT QoS","enum":[0,1,2],"type":"integer"},"topic":{"description":"MQTT Topic","type":"string"}},"type":"object"},"type":"array"}}},"description":"List retained messages"},"405":{"description":"NotAllowed"}},"security":[{"application":[]}],"tags":["mqtt"]}},"/configs/authenticator_config":{"get":{"description":"Get the sub-configurations under *authenticator_config*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *authenticator_config*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/authn-scram-builtin_db.config"},{"$ref":"#/components/schemas/authn-jwt.jwks"},{"$ref":"#/components/schemas/authn-jwt.public-key"},{"$ref":"#/components/schemas/authn-jwt.hmac-based"},{"$ref":"#/components/schemas/authn-http.post"},{"$ref":"#/components/schemas/authn-http.get"},{"$ref":"#/components/schemas/authn-redis.sentinel"},{"$ref":"#/components/schemas/authn-redis.cluster"},{"$ref":"#/components/schemas/authn-redis.standalone"},{"$ref":"#/components/schemas/authn-mongodb.sharded-cluster"},{"$ref":"#/components/schemas/authn-mongodb.replica-set"},{"$ref":"#/components/schemas/authn-mongodb.standalone"},{"$ref":"#/components/schemas/authn-postgresql.config"},{"$ref":"#/components/schemas/authn-mysql.config"},{"$ref":"#/components/schemas/authn-builtin_db.config"}]}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/listeners/{listener_id}/authentication/{id}/move":{"post":{"description":"Move authenticator in listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"move_before_password-based:built-in-database":{"summary":"Move authenticator to the position preceding some other authenticator","value":{"position":"before:password-based:built-in-database"}},"move_to_bottom":{"summary":"Move authenticator to the end of the chain","value":{"position":"bottom"}},"move_to_top":{"summary":"Move authenticator to the beginning of the chain","value":{"position":"top"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_move"}}}},"responses":{"204":{"description":"Authenticator moved"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]}},"/routes":{"get":{"description":"EMQ X routes","parameters":[{"description":"Topic string, url encoding","in":"query","name":"topic","required":false,"schema":{"type":"string"}},{"description":"Node","in":"query","name":"node","required":false,"schema":{"type":"string"}},{"description":"Page","in":"query","name":"page","schema":{"default":1,"type":"integer"}},{"description":"Page size","in":"query","name":"limit","schema":{"default":100,"type":"integer"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"node":{"type":"string"},"topic":{"type":"string"}},"type":"object"},"type":"array"}}},"description":"List route info"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INVALID_PARAMETER"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Invalid parameters"}},"security":[{"application":[]}],"tags":["routes"]}},"/monitor/nodes/{node}/counters/{counter}":{"get":{"description":"List monitor data","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}},{"example":"connection","in":"path","name":"counter","required":true,"schema":{"enum":["connection","route","subscriptions","received","sent","dropped"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"}}},"description":"Monitor single count data in node"}},"security":[{"application":[]}],"tags":["monitor"]}},"/configs_reset/{rootname}":{"post":{"description":"Reset the config entry specified by the query string parameter `conf_path`.<br/>\n- For a config entry that has default value, this resets it to the default value;\n- For a config entry that has no default value, an error 400 will be returned","parameters":[{"example":"authorization","in":"path","name":"rootname","required":true,"schema":{"enum":["listeners","zones","mqtt","authentication","node","cluster","log","rpc","authorization","db","broker","rate_limit","force_shutdown","overload_protection","force_gc","conn_congestion","quota","plugins","stats","sysmon","alarm","flapping_detect","persistent_session_store","bridges","emqx_retainer","statsd","authenticator_config","auto_subscribe","delayed","telemetry","event_message","rewrite","topic_metrics","emqx_dashboard","gateway","prometheus","rule_engine","exhook","psk","emqx_limiter","connectors"],"type":"string"}},{"description":"The config path separated by '.' character","example":"cache.enable","in":"query","name":"conf_path","required":false,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"Rest config successfully"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NO_DEFAULT_VALUE","REST_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/emqx_limiter":{"get":{"description":"Get the sub-configurations under *emqx_limiter*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_limiter_schema.emqx_limiter"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *emqx_limiter*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_limiter_schema.emqx_limiter"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_limiter_schema.emqx_limiter"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/alarms":{"delete":{"description":"Remove all deactivated alarms","parameters":[],"responses":{"204":{"description":"Remove all deactivated alarms ok"}},"security":[{"application":[]}],"tags":["alarms"]},"get":{"description":"EMQ X alarms","parameters":[{"$ref":"#/components/parameters/public.page"},{"$ref":"#/components/parameters/public.limit"},{"description":"All alarms, if not specified","in":"query","name":"activated","schema":{"example":true,"nullable":true,"type":"boolean"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"properties":{"data":{"items":{"$ref":"#/components/schemas/emqx_mgmt_api_alarms.alarm"},"type":"array"},"meta":{"$ref":"#/components/schemas/emqx_mgmt_api_alarms.meta"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["alarms"]}},"/configs/prometheus":{"get":{"description":"Get the sub-configurations under *prometheus*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/prometheus.prometheus"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *prometheus*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/prometheus.prometheus"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/prometheus.prometheus"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/nodes/{node}/bridges/{id}/operation/{operation}":{"post":{"description":"Start/Stop/Restart bridges on a specific node","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}},{"in":"path","name":"id","required":true,"schema":{"type":"string"}},{"example":"restart","in":"path","name":"operation","required":true,"schema":{"enum":["start","stop","restart"],"type":"string"}}],"responses":{"200":{"description":"Operation success"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Operation Failed"}},"security":[{"application":[]}],"tags":["nodes"]}},"/nodes/{node}/listeners":{"get":{"description":"List listeners in one node","parameters":[{"example":"emqx@127.0.0.1","in":"path","name":"node","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:1883","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8883","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8083","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"access_rules":{"items":{"example":"allow all","type":"string"},"type":"array"},"bind":{"example":"0.0.0.0:8084","type":"string"},"max_connections":{"example":512000,"type":"number"},"mountpoint":{"example":"","type":"string"},"proxy_protocol":{"example":false,"type":"boolean"},"proxy_protocol_timeout":{"example":"3s","type":"string"},"ssl":{"properties":{"cacertfile":{"example":"etc/certs/cacert.pem","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"}},"type":"object"},"tcp":{"properties":{"backlog":{"example":1024,"type":"number"},"buffer":{"example":"4KB","type":"string"}},"type":"object"},"websocket":{"properties":{"idle_timeout":{"example":"86400s","type":"string"}},"type":"object"}},"type":"object"},{"properties":{"id":{"type":"string"},"node":{"type":"string"},"running":{"type":"boolean"},"acceptors":{"example":16,"type":"number"},"bind":{"example":"0.0.0.0:14567","type":"string"},"certfile":{"example":"etc/certs/cert.pem","type":"string"},"keyfile":{"example":"etc/certs/key.pem","type":"string"},"max_connections":{"example":1024000,"type":"number"},"mountpoint":{"example":"","type":"string"}},"type":"object"}]}}},"description":"List listeners successfully"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Node not found or Down"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Operation failed"}},"security":[{"application":[]}],"tags":["nodes"]}},"/users":{"get":{"description":"Get dashboard users list","parameters":[],"responses":{"200":{"description":"User lists","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/dashboard.user"},"type":"array"}}}}},"security":[{"application":[]}],"tags":["dashboard"]},"post":{"description":"Create dashboard users","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"User description","example":"administrator","type":"string"},"username":{"description":"username","example":"emqx","type":"string"},"password":{"description":"Password","example":"public","type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"Create User successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/dashboard.user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"CREATE_FAIL","type":"string"},"message":{"example":"Create user failed","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["dashboard"]}},"/mqtt/event_message":{"get":{"description":"Event Message","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"$event/client_connected":{"example":true,"type":"boolean"},"$event/client_disconnected":{"example":true,"type":"boolean"},"$event/client_subscribed":{"example":false,"type":"boolean"},"$event/client_unsubscribed":{"example":false,"type":"boolean"},"$event/message_acked":{"example":false,"type":"boolean"},"$event/message_delivered":{"example":false,"type":"boolean"},"$event/message_dropped":{"example":false,"type":"boolean"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["mqtt"]},"put":{"description":"Update Event Message","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"$event/client_connected":{"example":true,"type":"boolean"},"$event/client_disconnected":{"example":true,"type":"boolean"},"$event/client_subscribed":{"example":false,"type":"boolean"},"$event/client_unsubscribed":{"example":false,"type":"boolean"},"$event/message_acked":{"example":false,"type":"boolean"},"$event/message_delivered":{"example":false,"type":"boolean"},"$event/message_dropped":{"example":false,"type":"boolean"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"$event/client_connected":{"example":true,"type":"boolean"},"$event/client_disconnected":{"example":true,"type":"boolean"},"$event/client_subscribed":{"example":false,"type":"boolean"},"$event/client_unsubscribed":{"example":false,"type":"boolean"},"$event/message_acked":{"example":false,"type":"boolean"},"$event/message_delivered":{"example":false,"type":"boolean"},"$event/message_dropped":{"example":false,"type":"boolean"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["mqtt"]}},"/monitor/counters/{counter}":{"get":{"description":"List monitor data","parameters":[{"example":"connection","in":"path","name":"counter","required":true,"schema":{"enum":["connection","route","subscriptions","received","sent","dropped"],"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"count":{"type":"integer"},"timestamp":{"description":"Millisecond","type":"integer"}},"type":"object"},"type":"array"}}},"description":"Monitor single count data"}},"security":[{"application":[]}],"tags":["monitor"]}},"/users/{username}":{"delete":{"description":"Delete dashboard users","parameters":[{"example":"admin","in":"path","name":"username","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Delete User successfully"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"CANNOT_DELETE_ADMIN","type":"string"},"message":{"example":"CANNOT DELETE ADMIN","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["USER_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"User Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["dashboard"]},"put":{"description":"Update dashboard users","parameters":[{"example":"admin","in":"path","name":"username","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"User description","example":"administrator","type":"string"}},"type":"object"}}}},"responses":{"200":{"description":"Update User successfully","content":{"application/json":{"schema":{"$ref":"#/components/schemas/dashboard.user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"UPDATE_FAIL","type":"string"},"message":{"example":"Update Failed unknown","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["USER_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"User Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["dashboard"]}},"/connectors/{id}":{"delete":{"description":"Delete a connector by Id","parameters":[{"example":"mqtt:my_mqtt_connector","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Delete connector successfully"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"DELETE_FAIL","type":"string"},"message":{"example":"Delete failed","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"summary":"Delete connector","tags":["connectors"]},"get":{"description":"Get the connector by Id","parameters":[{"example":"mqtt:my_mqtt_connector","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector_info"}]}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"NOT_FOUND","type":"string"},"message":{"example":"Connector not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"summary":"Get connector","tags":["connectors"]},"put":{"description":"Update an existing connector by Id","parameters":[{"example":"mqtt:my_mqtt_connector","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"$ref":"#/components/schemas/emqx_connector_schema.mqtt_connector"}]}}}},"responses":{"200":{"description":"Update connector successfully"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"UPDATE_FAIL","type":"string"},"message":{"example":"Update failed","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"example":"NOT_FOUND","type":"string"},"message":{"example":"Connector not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"summary":"Update connector","tags":["connectors"]}},"/mqtt/topic_rewrite":{"get":{"description":"List rewrite topic.","parameters":[],"responses":{"200":{"description":"List all rewrite rules","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"}}}}},"security":[{"application":[]}],"tags":["mqtt"]},"put":{"description":"Update rewrite topic","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"}}}},"responses":{"200":{"description":"Update rewrite topic success.","content":{"application/json":{"schema":{"items":{"$ref":"#/components/schemas/modules.rewrite"},"type":"array"}}}},"413":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["EXCEED_LIMIT"],"type":"string"},"message":{"description":"Details description of the error.","example":"Rules count exceed max limit","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["mqtt"]}},"/gateway/{name}/stats":{"get":{"description":"Get gateway Statistic","parameters":[{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"a_key":{"type":"string"}},"type":"object"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/publish/bulk":{"post":{"description":"publish","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"items":{"properties":{"from":{"description":"Message from","type":"string"},"payload":{"description":"Topic","type":"string"},"qos":{"description":"QoS","enum":[0,1,2],"type":"integer"},"retain":{"description":"Retain message flag, nullable, default false","type":"boolean"},"topic":{"description":"Topic","type":"string"}},"type":"object"},"type":"array"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"from":{"description":"Message from","type":"string"},"id":{"description":"Message Id","type":"string"},"payload":{"description":"Topic","type":"string"},"qos":{"description":"QoS","enum":[0,1,2],"type":"integer"},"retain":{"description":"Retain message flag, nullable, default false","type":"boolean"},"topic":{"description":"Topic","type":"string"}},"type":"object"},"type":"array"}}},"description":"publish ok"}},"security":[{"application":[]}],"tags":["publish"]}},"/configs/rate_limit":{"get":{"description":"Get the sub-configurations under *rate_limit*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.rate_limit"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *rate_limit*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.rate_limit"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.rate_limit"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/listeners/{id}/authentication/users/{uid}":{"delete":{"description":"Delete the user for the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"uid","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get user info from the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"uid","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"put":{"description":"Update the user info for the gateway authentication","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"User ID","in":"path","name":"uid","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Update regular user","value":{"password":"newsecret"}},"super_user":{"summary":"Update user and promote to superuser","value":{"is_superuser":true,"password":"newsecret"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_update"}}}},"responses":{"200":{"description":"","content":{"application/json":{"example":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/rules":{"get":{"description":"List all rules","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"items":{"properties":{"created_at":{"description":"The time that this rule was created, in rfc3339 format","example":"2021-09-18T13:57:29+08:00","type":"string"},"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"id":{"description":"The Id for the rule","type":"string"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"},"type":"array"}}},"description":"List rules successfully"}},"security":[{"application":[]}],"tags":["rules"]},"post":{"description":"Create a new rule using given Id to all nodes in the cluster","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"id":{"description":"The Id for the rule","example":"my_rule","type":"string"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"}}},"description":"Rule parameters"},"responses":{"201":{"content":{"application/json":{"schema":{"properties":{"created_at":{"description":"The time that this rule was created, in rfc3339 format","example":"2021-09-18T13:57:29+08:00","type":"string"},"description":{"description":"The description for the rule","example":"A simple rule that handles MQTT messages from topic \"t/1\"","type":"string"},"enable":{"description":"Enable or disable the rule","example":true,"type":"boolean"},"id":{"description":"The Id for the rule","type":"string"},"outputs":{"description":"The outputs of the rule","items":{"oneOf":[{"description":"The channel id of an emqx bridge","example":"channel_id_of_my_bridge","type":"string"},{"properties":{"function":{"example":"console","type":"string"}},"type":"object"}]},"type":"array"},"sql":{"description":"The SQL","example":"SELECT * from \"t/1\"","type":"string"}},"type":"object"}}},"description":"Create rule successfully"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_ARGS"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Invalid Parameters"}},"security":[{"application":[]}],"tags":["rules"]}},"/logout":{"post":{"description":"Dashboard User logout","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"username":{"description":"The User for which to create the token.","example":"admin","maxLength":100,"type":"string"}},"type":"object"}}}},"responses":{"204":{"description":"Dashboard logout successfully"}},"security":[{"application":[]}],"tags":["dashboard"]}},"/gateway/lwm2m/{clientid}/write":{"post":{"description":"Send a write command to resource","parameters":[{"example":"urn:oma:lwm2m:oma:2","in":"path","name":"clientid","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":"/3/0/7","in":"query","name":"path","required":true,"schema":{"example":"binary-example","type":"string"}},{"example":"Integer","in":"query","name":"type","required":true,"schema":{"enum":["Integer","Float","Time","String","Boolean","Opaque","Objlnk"],"type":"string"}},{"example":123,"in":"query","name":"value","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"No Content"},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["CLIENT_NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Clientid not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["lwm2m"]}},"/gateway/{name}/listeners/{id}":{"delete":{"description":"Delete the gateway listener","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"204":{"description":"Deleted"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get the gateway listener configurations","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{},"schema":{"$ref":"#/components/schemas/emqx_gateway_api_listeners.listener"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"put":{"description":"Update the gateway listener","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{},"schema":{"$ref":"#/components/schemas/emqx_gateway_api_listeners.listener"}}}},"responses":{"200":{"description":"Updated"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/configs/plugins":{"get":{"description":"Get the sub-configurations under *plugins*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.plugins"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *plugins*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.plugins"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.plugins"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/mqtt/auto_subscribe":{"get":{"description":"Auto subscribe list","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"example":"","type":"string"}}},"description":""}},"security":[{"application":[]}],"tags":["mqtt"]},"put":{"description":"Update auto subscribe topic list","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"example":"","type":"string"}}},"description":""},"responses":{"200":{"content":{"application/json":{"schema":{"example":"","type":"string"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["BAD_REQUEST"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Request body required"},"409":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["EXCEED_LIMIT"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Auto Subscribe topics max limit"}},"security":[{"application":[]}],"tags":["mqtt"]}},"/configs/broker":{"get":{"description":"Get the sub-configurations under *broker*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.broker"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *broker*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.broker"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.broker"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/statsd":{"get":{"description":"Get statsd info","parameters":[],"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"enable":{"example":true,"type":"boolean"},"flush_time_interval":{"example":"10s","type":"string"},"sample_time_interval":{"example":"10s","type":"string"},"server":{"example":"127.0.0.1:8125","type":"string"}},"type":"object"}}},"description":""}},"security":[{"application":[]}],"tags":["statsd"]},"put":{"description":"Update Statsd","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"properties":{"enable":{"example":true,"type":"boolean"},"flush_time_interval":{"example":"10s","type":"string"},"sample_time_interval":{"example":"10s","type":"string"},"server":{"example":"127.0.0.1:8125","type":"string"}},"type":"object"}}}},"responses":{"200":{"content":{"application/json":{"schema":{"properties":{"enable":{"example":true,"type":"boolean"},"flush_time_interval":{"example":"10s","type":"string"},"sample_time_interval":{"example":"10s","type":"string"},"server":{"example":"127.0.0.1:8125","type":"string"}},"type":"object"}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Bad Request"}},"security":[{"application":[]}],"tags":["statsd"]}},"/configs/sysmon":{"get":{"description":"Get the sub-configurations under *sysmon*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.sysmon"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *sysmon*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.sysmon"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.sysmon"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/gateway/{name}/listeners":{"get":{"description":"Get the gateway listeners","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"stomp_listeners":[{}]},"schema":{"items":{"$ref":"#/components/schemas/emqx_gateway_api_listeners.listener"},"type":"array"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]},"post":{"description":"Create the gateway listener","parameters":[{"description":"Gateway Name","in":"path","name":"name","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{},"schema":{"$ref":"#/components/schemas/emqx_gateway_api_listeners.listener"}}}},"responses":{"204":{"description":"Created"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}},"500":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"description":"Details description of the error.","example":"Ineternal Server Error","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["gateway"]}},"/authorization/sources/built-in-database/clientid":{"get":{"description":"Show the list of record for clientid","parameters":[{"$ref":"#/components/parameters/public.page"},{"$ref":"#/components/parameters/public.limit"}],"responses":{"200":{"description":"","content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"ClientID","value":{"data":[{"clientid":"client1","rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}]}],"meta":{"count":1,"limit":100,"page":1}}}},"schema":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.clientid_response_data"}}}}},"security":[{"application":[]}],"tags":["authorization"]},"post":{"description":"Add new records for clientid","parameters":[],"requestBody":{"content":{"application/json":{"examples":{"password-based:built-in-database":{"summary":"ClientID","value":[{"clientid":"client1","rules":[{"action":"publish","permission":"allow","topic":"test/toopic/1"},{"action":"subscribe","permission":"allow","topic":"test/toopic/2"},{"action":"all","permission":"deny","topic":"eq test/#"}]}]}},"schema":{"items":{"$ref":"#/components/schemas/emqx_authz_api_mnesia.rules_for_clientid"},"type":"array"}}}},"responses":{"204":{"description":"Created"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad clientid or bad rule schema","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authorization"]}},"/configs/emqx_retainer":{"get":{"description":"Get the sub-configurations under *emqx_retainer*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_retainer_schema.emqx_retainer"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *emqx_retainer*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_retainer_schema.emqx_retainer"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_retainer_schema.emqx_retainer"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/configs/quota":{"get":{"description":"Get the sub-configurations under *quota*","parameters":[],"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.quota"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *quota*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.quota"}}}},"responses":{"200":{"description":"","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_schema.quota"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}},"/listeners/{listener_id}/authentication/{id}/users":{"get":{"description":"List users in authenticator in listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Page Index","in":"query","name":"page","schema":{"example":100,"nullable":true,"type":"integer"}},{"description":"Page Limit","in":"query","name":"limit","schema":{"example":100,"nullable":true,"type":"integer"}}],"responses":{"200":{"description":"","content":{"application/json":{"example":{"data":[{"user_id":"user1"},{"is_superuser":true,"user_id":"user2"}],"meta":{"count":300,"limit":20,"page":0}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_users"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]},"post":{"description":"Create users for authenticator in global authentication chain","parameters":[{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"password":"secret","user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"password":"secret","user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_user_create"}}}},"responses":{"201":{"description":"","content":{"application/json":{"examples":{"regular_user":{"summary":"Regular user","value":{"user_id":"user1"}},"super_user":{"summary":"Superuser","value":{"is_superuser":true,"user_id":"user2"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.response_user"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]}},"/gateway/{name}":{"delete":{"description":"Delete/Unload the gateway","parameters":[{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"204":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]},"get":{"description":"Get the gateway configurations","parameters":[{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"responses":{"200":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"authentication":{"properties":{"mechanism":{"example":"password-based","type":"string"},"name":{"example":"authenticator1","type":"string"},"server_type":{"example":"built-in-database","type":"string"},"user_id_type":{"example":"clientid","type":"string"}},"type":"object"},"clientinfo_override":{"properties":{"password":{"example":"${Packet.headers.passcode}","type":"string"},"username":{"example":"${Packet.headers.login}","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"frame":{"properties":{"max_body_length":{"example":8192,"type":"number"},"max_headers":{"example":10,"type":"number"},"max_headers_length":{"example":1024,"type":"number"}},"type":"object"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":16,"type":"number"},"active_n":{"example":100,"type":"number"},"bind":{"example":61613,"type":"number"},"id":{"example":"stomp:tcp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":1024000,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"tcp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"stomp","type":"string"}},"type":"object"},{"properties":{"broadcast":{"example":true,"type":"boolean"},"clientinfo_override":{"properties":{"password":{"example":"abc","type":"string"},"username":{"example":"mqtt_sn_user","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_qos3":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"gateway_id":{"example":1,"type":"number"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"bind":{"example":1884,"type":"number"},"id":{"example":"mqttsn:udp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240000,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"mqtt-sn","type":"string"},"predefined":{"items":{"properties":{"id":{"example":1,"type":"number"},"topic":{"example":"/predefined/topic/name/hello","type":"string"}},"type":"object"},"type":"array"}},"type":"object"},{"properties":{"authentication":{"properties":{"mechanism":{"example":"password-based","type":"string"},"name":{"example":"authenticator1","type":"string"},"server_type":{"example":"built-in-database","type":"string"},"user_id_type":{"example":"clientid","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"heartbeat":{"example":"30s","type":"string"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":8,"type":"number"},"bind":{"example":5683,"type":"number"},"id":{"example":"coap:udp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"coap","type":"string"},"notify_type":{"example":"qos","type":"string"},"publish_qos":{"example":"qos1","type":"string"},"subscribe_qos":{"example":"qos0","type":"string"}},"type":"object"},{"properties":{"auto_observe":{"example":false,"type":"boolean"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"idle_timeout":{"example":"30s","type":"string"},"lifetime_max":{"example":"86400s","type":"string"},"lifetime_min":{"example":"1s","type":"string"},"listeners":{"items":{"properties":{"bind":{"example":5783,"type":"number"},"id":{"example":"lwm2m:udp:default","type":"string"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"lwm2m/%e/","type":"string"},"name":{"example":"lwm2m","type":"string"},"qmode_time_windonw":{"example":22,"type":"number"},"translators":{"properties":{"command":{"example":"dn/#","type":"string"},"notify":{"example":"up/notify","type":"string"},"register":{"example":"up/resp","type":"string"},"response":{"example":"up/resp","type":"string"},"update":{"example":"up/resp","type":"string"}},"type":"object"},"update_msg_publish_condition":{"example":"contains_object_list","type":"string"},"xml_dir":{"example":"etc/lwm2m_xml","type":"string"}},"type":"object"},{"properties":{"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"handler":{"properties":{"address":{"example":"http://127.0.0.1:9001","type":"string"}},"type":"object"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":8,"type":"number"},"bind":{"example":7993,"type":"number"},"id":{"example":"exproto:tcp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"tcp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"exproto","type":"string"},"server":{"properties":{"bind":{"example":9100,"type":"number"}},"type":"object"}},"type":"object"}]}}},"description":""},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]},"put":{"description":"Update the gateway configurations/status","parameters":[{"in":"path","name":"name","required":true,"schema":{"type":"string"}}],"requestBody":{"content":{"application/json":{"schema":{"oneOf":[{"properties":{"authentication":{"properties":{"mechanism":{"example":"password-based","type":"string"},"name":{"example":"authenticator1","type":"string"},"server_type":{"example":"built-in-database","type":"string"},"user_id_type":{"example":"clientid","type":"string"}},"type":"object"},"clientinfo_override":{"properties":{"password":{"example":"${Packet.headers.passcode}","type":"string"},"username":{"example":"${Packet.headers.login}","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"frame":{"properties":{"max_body_length":{"example":8192,"type":"number"},"max_headers":{"example":10,"type":"number"},"max_headers_length":{"example":1024,"type":"number"}},"type":"object"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":16,"type":"number"},"active_n":{"example":100,"type":"number"},"bind":{"example":61613,"type":"number"},"id":{"example":"stomp:tcp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":1024000,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"tcp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"stomp","type":"string"}},"type":"object"},{"properties":{"broadcast":{"example":true,"type":"boolean"},"clientinfo_override":{"properties":{"password":{"example":"abc","type":"string"},"username":{"example":"mqtt_sn_user","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_qos3":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"gateway_id":{"example":1,"type":"number"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"bind":{"example":1884,"type":"number"},"id":{"example":"mqttsn:udp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240000,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"mqtt-sn","type":"string"},"predefined":{"items":{"properties":{"id":{"example":1,"type":"number"},"topic":{"example":"/predefined/topic/name/hello","type":"string"}},"type":"object"},"type":"array"}},"type":"object"},{"properties":{"authentication":{"properties":{"mechanism":{"example":"password-based","type":"string"},"name":{"example":"authenticator1","type":"string"},"server_type":{"example":"built-in-database","type":"string"},"user_id_type":{"example":"clientid","type":"string"}},"type":"object"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"heartbeat":{"example":"30s","type":"string"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":8,"type":"number"},"bind":{"example":5683,"type":"number"},"id":{"example":"coap:udp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"coap","type":"string"},"notify_type":{"example":"qos","type":"string"},"publish_qos":{"example":"qos1","type":"string"},"subscribe_qos":{"example":"qos0","type":"string"}},"type":"object"},{"properties":{"auto_observe":{"example":false,"type":"boolean"},"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"idle_timeout":{"example":"30s","type":"string"},"lifetime_max":{"example":"86400s","type":"string"},"lifetime_min":{"example":"1s","type":"string"},"listeners":{"items":{"properties":{"bind":{"example":5783,"type":"number"},"id":{"example":"lwm2m:udp:default","type":"string"},"running":{"example":true,"type":"boolean"},"type":{"example":"udp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"lwm2m/%e/","type":"string"},"name":{"example":"lwm2m","type":"string"},"qmode_time_windonw":{"example":22,"type":"number"},"translators":{"properties":{"command":{"example":"dn/#","type":"string"},"notify":{"example":"up/notify","type":"string"},"register":{"example":"up/resp","type":"string"},"response":{"example":"up/resp","type":"string"},"update":{"example":"up/resp","type":"string"}},"type":"object"},"update_msg_publish_condition":{"example":"contains_object_list","type":"string"},"xml_dir":{"example":"etc/lwm2m_xml","type":"string"}},"type":"object"},{"properties":{"enable":{"example":true,"type":"boolean"},"enable_stats":{"example":true,"type":"boolean"},"handler":{"properties":{"address":{"example":"http://127.0.0.1:9001","type":"string"}},"type":"object"},"idle_timeout":{"example":"30s","type":"string"},"listeners":{"items":{"properties":{"acceptors":{"example":8,"type":"number"},"bind":{"example":7993,"type":"number"},"id":{"example":"exproto:tcp:default","type":"string"},"max_conn_rate":{"example":1000,"type":"number"},"max_connections":{"example":10240,"type":"number"},"running":{"example":true,"type":"boolean"},"type":{"example":"tcp","type":"string"}},"type":"object"},"type":"array"},"mountpoint":{"example":"","type":"string"},"name":{"example":"exproto","type":"string"},"server":{"properties":{"bind":{"example":9100,"type":"number"}},"type":"object"}},"type":"object"}]}}}},"responses":{"200":{"description":"No Content"},"400":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["PARAMETER_MISSED"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Some Params missed"},"404":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["RESOURCE_NOT_FOUND"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Resource Not Found"},"500":{"content":{"application/json":{"schema":{"properties":{"code":{"description":"","enum":["INTERNAL_SERVER_ERROR"],"type":"string"},"message":{"type":"string"}},"type":"object"}}},"description":"Ineternal Server Error"}},"security":[{"application":[]}],"tags":["gateway"]}},"/listeners/{listener_id}/authentication/{id}/import_users":{"post":{"description":"Import users into authenticator in listener authentication chain","parameters":[{"description":"Listener ID","example":"tcp:default","in":"path","name":"listener_id","required":true,"schema":{"example":"binary-example","type":"string"}},{"description":"Authenticator ID","in":"path","name":"id","required":true,"schema":{"example":"binary-example","type":"string"}}],"requestBody":{"content":{"application/json":{"examples":{"import_csv":{"summary":"Import users from CSV file","value":{"filename":"/path/to/user/data.csv"}},"import_json":{"summary":"Import users from JSON file","value":{"filename":"/path/to/user/data.json"}}},"schema":{"$ref":"#/components/schemas/emqx_authn_api.request_import_users"}}}},"responses":{"204":{"description":"Users imported"},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["BAD_REQUEST"],"type":"string"},"message":{"description":"Details description of the error.","example":"Bad Request","type":"string"}},"type":"object"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"Not Found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["authentication","authentication config(single listener)"]}},"/configs/node":{"get":{"description":"Get the sub-configurations under *node*","parameters":[],"responses":{"200":{"description":"Node name, cookie, config & data directories and the Eralng virtual machine (beam) boot parameters.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.node"}}}},"404":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["NOT_FOUND"],"type":"string"},"message":{"description":"Details description of the error.","example":"config not found","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]},"put":{"description":"Update the sub-configurations under *node*","parameters":[],"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.node"}}}},"responses":{"200":{"description":"Node name, cookie, config & data directories and the Eralng virtual machine (beam) boot parameters.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/emqx_mgmt_api_configs.node"}}}},"400":{"description":"","content":{"application/json":{"schema":{"properties":{"code":{"enum":["UPDATE_FAILED"],"type":"string"},"message":{"description":"Details description of the error.","example":"Error code to troubleshoot problems.","type":"string"}},"type":"object"}}}}},"security":[{"application":[]}],"tags":["conf"]}}},"servers":[{"url":"/api/v5"}]}